.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez au c≈ìur de l'univers du Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Profitez d'un acc√®s anticip√© aux nouvelles annonces de produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : B√©n√©ficiez de remises exclusives sur nos derniers produits.
    - **Promotions festives et concours** : Participez √† des concours et √† des offres promotionnelles durant les p√©riodes festives.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

Le√ßon 66 : Cr√©er vos propres biblioth√®ques en MicroPython
===================================================================================

Ce tutoriel explique comment cr√©er et utiliser une biblioth√®que Servo avec le Raspberry Pi Pico W :

* **Aper√ßu de la t√¢che** : Contr√¥ler un servo en utilisant une classe personnalis√©e ``Servo`` enregistr√©e comme biblioth√®que.
* **√âtapes cl√©s** : D√©finir la classe ``Servo``, initialiser le servo avec ``__init__``, impl√©menter la m√©thode ``pos``, sauvegarder la classe sous le nom ``ServoLib.py``, et l'importer pour l'utiliser dans votre code.
* **Devoir** : Cr√©ez une biblioth√®que pour un autre composant, comme une LED, afin de simplifier son utilisation future.

**Vid√©o**

.. raw:: html

    <iframe width="700" height="500" src="https://www.youtube.com/embed/lz_Gp-zDtKI?si=VHgvS20YVqfft8LY" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
