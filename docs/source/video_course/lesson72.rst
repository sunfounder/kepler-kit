.. note::

    こんにちは、SunFounder Raspberry Pi & Arduino & ESP32 愛好者コミュニティへようこそ！Raspberry Pi、Arduino、ESP32 の世界をさらに深く探求しましょう。

    **参加する理由**

    - **専門サポート**: コミュニティとチームの助けを借りて、購入後の問題や技術的な課題を解決できます。
    - **学びと共有**: スキル向上のためのヒントやチュートリアルを交換できます。
    - **限定プレビュー**: 新製品の発表やプレビューに早期アクセスできます。
    - **特別割引**: 最新の製品に対して、限定の割引を享受できます。
    - **フェスティブプロモーションとギブアウェイ**: ギブアウェイやホリデープロモーションに参加できます。

    👉 一緒に探求し、創造する準備はできましたか？今すぐ[|link_sf_facebook|]をクリックして参加しましょう！

lesson 72 :  MicroPython での辞書の使用方法の理解
===================================================================================

このチュートリアルでは、Raspberry Pi Pico W を使用して Python の辞書の使用方法について説明します。

* **はじめに**:
  - Python の強力なデータ構造である辞書について学びます。
  - 辞書がクラス、メソッド、関数を使用したオブジェクト指向プログラミングにどのように適合するかを理解します。

* **カバーする概念**:
  - リストの復習:
    - リスト（配列）を作成して操作します。
    - インデックスを使用して要素にアクセスします。
  - 辞書の紹介:
    - キーと値のペアで辞書を作成します。
    - キーを使用して辞書の要素にアクセスします。
    - 辞書の要素を追加、削除、変更します。
  - 辞書操作:
    - `keys()` と `values()` メソッドを使用してキーと値を取得します。
    - `in` と `not in` 演算子を使用してキーの存在を確認します。
    - 辞書内のキーと値を反復処理します。
  - 実例:
    - 個人情報（名前、年齢、体重など）を格納する辞書を作成します。
    - 辞書の要素を追加、変更、アクセスする方法を示します。
  - 辞書の高度な使用:
    - 辞書内にリストや他の辞書を値として格納します。
    - 効率的なデータ管理と取得のために辞書を利用します。

* **宿題**:
   - カラー名をそれぞれのRGB値にマッピングする辞書を使用して、RGB LED を制御するプログラムを作成します。
   - カラー名を入力して LED の色を変更するユーザーインターフェースを実装します。


**ビデオ**

.. raw:: html

    <iframe width="700" height="500" src="https://www.youtube.com/embed/6kZo2IOEZ28?si=2d1V8gNjJG5F_vj1" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

