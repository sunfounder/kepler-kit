.. note::

    こんにちは、SunFounderのRaspberry Pi & Arduino & ESP32愛好者コミュニティへようこそ！仲間の愛好者と共に、Raspberry Pi、Arduino、ESP32の世界に深く飛び込みましょう。

    **参加する理由**

    - **専門家のサポート**: コミュニティやチームの助けを借りて、購入後の問題や技術的な課題を解決します。
    - **学びと共有**: スキルを向上させるためのヒントやチュートリアルを交換します。
    - **独占プレビュー**: 新製品の発表やプレビューにいち早くアクセスできます。
    - **特別割引**: 最新の製品に対する特別割引を楽しめます。
    - **フェスティブプロモーションとギブアウェイ**: ギブアウェイや休日のプロモーションに参加できます。

    👉 私たちと一緒に探索し、創造する準備はできましたか？ [|link_sf_facebook|]をクリックして、今すぐ参加しましょう！

lesson 14:  MicroPythonにおける変数型と配列の理解
==========================================================================

このチュートリアルでは、Raspberry Pi Pico Wを使用してMicroPythonが変数と配列をどのように扱うかについて説明します。

* **MicroPythonの変数**: MicroPythonにおける動的型付けを説明し、変数が整数、浮動小数点数、文字列、ブール値として明示的な宣言なしに使用できることを示します。意図しない型変換の一般的な落とし穴とその回避方法についても説明します。
* **基本操作**: 変数を使った基本的な算術操作を示し、整数を割ると常に浮動小数点数になることを強調します。
* **文字列操作**: MicroPythonにおける文字列の扱い方を説明し、プラス記号を使った連結や、他のデータ型と混在させたときに発生する型エラーについて説明します。
* **ブール操作**: ブール変数とAND、OR、NOTといった論理操作を紹介し、MicroPythonでのtrueとfalseの表現と使用方法を示します。
* **MicroPythonの配列（リスト）**: 一次元配列（リスト）の作成と操作方法、インデックスを使った個々の要素へのアクセス方法を示します。要素の変更方法や新しい要素の追加方法についても説明します。
* **二次元配列**: 二次元配列（リストのリスト）の作成と使用方法を示し、ネストされたリスト内の個々の要素へのアクセスと変更方法を説明します。
* **高度な配列操作**: 配列の連結、異なるデータ型を含む配列の作成、およびそのような操作から生じる予期しない動作の対処方法について説明します。
* **実践例**: チュートリアル全体で実践例を提供し、コードスニペットの実行をリアルタイムで示し、MicroPythonにおける変数と配列の動作を視覚的に説明します。
* **宿題**: 配列の作成と操作を練習し、さまざまなデータ型と操作を試してみることを視聴者に奨励します。

**ビデオ**

.. raw:: html

    <iframe width="700" height="500" src="https://www.youtube.com/embed/kp1Nq-twqC4?si=Bf8iuLn31xKlblEV" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

