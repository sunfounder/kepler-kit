.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _py_rfid:

6.5 Funkfrequenz-Identifikation
==============================================

Die Funkfrequenz-Identifikation (RFID) ist eine Technologie, die drahtlose Kommunikation zwischen einem Objekt (oder Tag) und einem abfragenden Ger√§t (oder Leseger√§t) zur Identifizierung und Nachverfolgung nutzt. Die √úbertragungsreichweite des Tags ist auf einige Meter begrenzt. Eine direkte Sichtlinie zwischen Leseger√§t und Tag ist nicht zwingend erforderlich.

Die meisten Tags verf√ºgen √ºber einen integrierten Schaltkreis (IC) und eine Antenne.
Neben der Datenspeicherung erm√∂glicht der Mikrochip die Kommunikation mit dem Leseger√§t via Funkfrequenz (RF).
Passive Tags haben keine eigenst√§ndige Energiequelle und sind f√ºr ihre Stromversorgung auf ein externes elektromagnetisches Signal des Leseger√§ts angewiesen.
Aktive Tags hingegen verf√ºgen √ºber eine unabh√§ngige Energiequelle, etwa eine Batterie, was ihnen eine h√∂here Leistungsf√§higkeit bei der Verarbeitung, √úbertragung und Reichweite erm√∂glicht.

* :ref:`cpn_mfrc522`

**Ben√∂tigte Komponenten**

F√ºr dieses Projekt werden die folgenden Komponenten ben√∂tigt.

Ein Komplettset ist nat√ºrlich praktisch, hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Bezeichnung	
        - ARTIKEL IN DIESEM KIT
        - LINK
    *   - Kepler Kit	
        - 450+
        - |link_kepler_kit|

Die Komponenten k√∂nnen auch separat √ºber die untenstehenden Links erworben werden.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - KOMPONENTE	
        - ANZAHL
        - LINK
    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - Micro-USB-Kabel
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - mehrere
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_mfrc522`
        - 1
        - |link_rfid_buy|

**Schaltplan**

|sch_rfid|

**Verkabelung**

|wiring_rfid|

**Code**

Bitte verwenden Sie die Bibliotheken im Ordner ``mfrc522``. Stellen Sie sicher, dass diese auf dem Pico W hochgeladen wurden. Eine detaillierte Anleitung finden Sie unter :ref:`add_libraries_py`.

Die Hauptfunktion ist zweigeteilt:

* ``6.5_rfid_write.py``: Dient dem Beschreiben der Karte (oder des Schl√ºssels).
* ``6.5_rfid_read.py``: Dient dem Auslesen der Karte (oder des Schl√ºssels).

√ñffnen Sie die Datei ``6.5_rfid_write.py`` im Pfad ``kepler-kit-main/micropython`` oder kopieren Sie diesen Code in Thonny und klicken Sie dann auf "Aktuelles Skript ausf√ºhren" oder dr√ºcken Sie einfach F5.

Nach dem Ausf√ºhren k√∂nnen Sie eine Nachricht im Shell-Fenster eingeben und die Karte (oder den Schl√ºssel) in die N√§he des MFRC522-Moduls halten, um die Nachricht darauf zu schreiben.

.. code-block:: python

    from mfrc522 import SimpleMFRC522

    reader = SimpleMFRC522(spi_id=0,sck=2,miso=4,mosi=3,cs=5,rst=0)

    def write():
        to_write = input("Please enter the message: ")
        print("Writing...Please place the card...")
        id, text = reader.write(to_write)
        print("ID: %s\nText: %s" % (id,text))

    write()

√ñffnen Sie die Datei ``6.5_rfid_read.py`` im Pfad ``kepler-kit-main/micropython`` oder kopieren Sie diesen Code in Thonny und klicken Sie dann auf "Aktuelles Skript ausf√ºhren" oder dr√ºcken Sie einfach F5, um es auszuf√ºhren.

Nach dem Ausf√ºhren k√∂nnen Sie die auf der Karte (oder dem Schl√ºssel) gespeicherte Nachricht auslesen.

.. code-block:: python

    from mfrc522 import SimpleMFRC522

    reader = SimpleMFRC522(spi_id=0,sck=2,miso=4,mosi=3,cs=5,rst=0)

    def read():
        print("Reading...Please place the card...")
        id, text = reader.read()
        print("ID: %s\nText: %s" % (id,text))

    read()

**Wie funktioniert es?**

.. code-block:: python

    from mfrc522 import SimpleMFRC522

    reader = SimpleMFRC522(spi_id=0,sck=2,miso=4,mosi=3,cs=5,rst=0)

Instanzierung der Klasse ``SimpleMFRC522()``.

.. code-block:: python

    id, text = reader.read()

Diese Funktion dient dem Auslesen der Kartendaten. Bei erfolgreichem Auslesen werden ID und Text zur√ºckgegeben.

.. code-block:: python

    id, text = reader.write("text")

Diese Funktion dient dem Beschreiben der Karte. Dr√ºcken Sie die **Eingabetaste**, um den Vorgang abzuschlie√üen.
``text`` sind die auf die Karte zu schreibenden Informationen.
