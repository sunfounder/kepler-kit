.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino & ESP32 sur Facebook ! Plongez plus profond√©ment dans le monde du Raspberry Pi, de l'Arduino et de l'ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques gr√¢ce √† notre communaut√© et notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et concours** : Participez √† des concours et √† des promotions sp√©ciales.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _py_rgb:

2.4 Lumi√®re Color√©e
==============================================

Comme nous le savons, la lumi√®re peut se superposer. Par exemple, le m√©lange de la lumi√®re bleue et de la lumi√®re verte donne de la lumi√®re cyan, et le rouge et le vert donnent du jaune. 
C'est ce qu'on appelle la "synth√®se additive des couleurs".

* `Additive color - Wikipedia <https://en.wikipedia.org/wiki/Additive_color>`_

En utilisant cette m√©thode, nous pouvons m√©langer les trois couleurs primaires pour produire n'importe quelle couleur visible selon diff√©rentes proportions. Par exemple, l'orange peut √™tre obtenu avec plus de rouge et moins de vert.

Dans ce chapitre, nous allons utiliser une LED RGB pour explorer le myst√®re de la synth√®se additive des couleurs !

Une LED RGB est √©quivalente √† l'encapsulation d'une LED rouge, d'une LED verte et d'une LED bleue sous un m√™me capot, et les trois LEDs partagent une seule broche cathode. 
En fournissant un signal √©lectrique √† chaque broche d'anode, la lumi√®re de la couleur correspondante peut √™tre affich√©e. En modifiant l'intensit√© du signal √©lectrique de chaque anode, on peut obtenir diverses couleurs.

* :ref:`cpn_rgb`

**Composants Requis**

Dans ce projet, nous aurons besoin des composants suivants.

Il est plus pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - √âL√âMENTS DANS CE KIT
        - LIEN
    *   - Kit Kepler
        - 450+
        - |link_kepler_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - COMPOSANT
        - QUANTIT√â
        - LIEN

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - C√¢ble Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Plusieurs
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_resistor`
        - 3 (1-330Œ©, 2-220Œ©)
        - |link_resistor_buy|
    *   - 6
        - :ref:`cpn_rgb`
        - 1
        - |link_rgb_led_buy|

**Sch√©ma**

|sch_rgb|

Les broches PWM GP13, GP14 et GP15 contr√¥lent respectivement les broches rouge, verte et bleue de la LED RGB, et la broche cathode commune est connect√©e √† la masse (GND). Cela permet √† la LED RGB d'afficher une couleur sp√©cifique en superposant la lumi√®re sur ces broches avec diff√©rentes valeurs PWM.


**C√¢blage**

|img_rgb_pin|

La LED RGB a 4 broches : la longue broche est la cathode commune, qui est g√©n√©ralement connect√©e √† la masse (GND) ; la broche √† gauche de la plus longue est la rouge ; et les deux broches √† droite sont la verte et la bleue.


|wiring_rgb|


**Code**


.. note::

    * Ouvrez le fichier ``2.4_colorful_light.py`` sous le chemin ``kepler-kit-main/micropython`` ou copiez ce code dans Thonny, puis cliquez sur "Run Current Script" ou appuyez simplement sur F5 pour l'ex√©cuter.

    * N'oubliez pas de s√©lectionner l'interpr√©teur "MicroPython (Raspberry Pi Pico)" en bas √† droite.

    * Pour des tutoriels d√©taill√©s, veuillez consulter :ref:`open_run_code_py`.

.. code-block:: python

    import machine
    import utime

    red = machine.PWM(machine.Pin(13))
    green = machine.PWM(machine.Pin(14))
    blue = machine.PWM(machine.Pin(15))
    red.freq(1000)
    green.freq(1000)
    blue.freq(1000)

    def interval_mapping(x, in_min, in_max, out_min, out_max):
        return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min

    def color_to_duty(rgb_value):
        rgb_value = int(interval_mapping(rgb_value,0,255,0,65535))
        return rgb_value

    def color_set(red_value,green_value,blue_value):
        red.duty_u16(color_to_duty(red_value))
        green.duty_u16(color_to_duty(green_value))
        blue.duty_u16(color_to_duty(blue_value))

    color_set(255,128,0)

Ici, nous pouvons choisir notre couleur pr√©f√©r√©e dans un logiciel de dessin (comme Paint) et l'afficher avec la LED RGB.

|img_take_color|

Inscrivez la valeur RGB dans ``color_set()``, et vous verrez la LED RGB s'illuminer avec les couleurs souhait√©es.


**Comment √ßa marche ?**

Pour permettre aux trois couleurs primaires de fonctionner ensemble, nous avons d√©fini une fonction ``color_set()``.

√Ä l'heure actuelle, les pixels du mat√©riel informatique utilisent g√©n√©ralement des repr√©sentations en 24 bits. Chaque couleur primaire est divis√©e en 8 bits, et la plage de valeurs des couleurs est de 0 √† 255. Il y a 256 combinaisons possibles pour chacune des trois couleurs primaires (n'oubliez pas de compter 0 !), donc 256 x 256 x 256 = 16 777 216 couleurs.
La fonction ``color_set()`` utilise √©galement la notation en 24 bits, ce qui permet de choisir plus facilement une couleur.


Et comme la plage de valeurs de ``duty_u16()`` est de 0 √† 65535 (au lieu de 0 √† 255) lors de la transmission des signaux aux LEDs RGB via PWM, nous avons d√©fini les fonctions ``color_to_duty()`` et ``interval_mapping()`` pour mapper les valeurs de couleur aux valeurs de cycle de service.
