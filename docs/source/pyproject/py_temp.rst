.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _py_temp:

2.13 Thermometer
===========================

Ein Thermometer ist ein Ger√§t, das die Temperatur oder einen Temperaturgradienten misst (das Ma√ü f√ºr die W√§rme oder K√§lte eines Objekts). 
Ein Thermometer hat zwei wichtige Elemente: (1) einen Temperatursensor (z.B. die Birne eines Quecksilber-Thermometers oder den pyrometrischen Sensor in einem Infrarot-Thermometer), bei dem eine Ver√§nderung mit einer Temperatur√§nderung eintritt; 
und (2) eine M√∂glichkeit, diese √Ñnderung in einen numerischen Wert umzuwandeln (z.B. die sichtbare Skala, die auf einem Quecksilber-Thermometer markiert ist, oder die digitale Anzeige bei einem Infrarot-Modell). 
Thermometer werden in Technik und Industrie zur Prozess√ºberwachung, in der Meteorologie, in der Medizin und in der wissenschaftlichen Forschung weit verbreitet verwendet.

Ein Thermistor ist eine Art Temperatursensor, dessen Widerstand stark temperaturabh√§ngig ist, und es gibt zwei Typen:
Negative Temperaturkoeffizient (NTC) und Positiver Temperaturkoeffizient (PTC), 
auch bekannt als NTC und PTC. Der Widerstand des PTC-Thermistors steigt mit der Temperatur, w√§hrend der Zustand des NTC dem des PTC entgegengesetzt ist.

In diesem Experiment verwenden wir einen **NTC-Thermistor**, um ein Thermometer herzustellen.

* :ref:`cpn_thermistor`

**Ben√∂tigte Komponenten**

F√ºr dieses Projekt ben√∂tigen wir die folgenden Komponenten.

Es ist definitiv praktisch, ein ganzes Kit zu kaufen, hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name	
        - ARTIKEL IN DIESEM KIT
        - LINK
    *   - Kepler Kit	
        - 450+
        - |link_kepler_kit|

Sie k√∂nnen diese auch einzeln √ºber die untenstehenden Links kaufen.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - KOMPONENTE	
        - ANZAHL
        - LINK

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - Micro USB Kabel
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Mehrere
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_resistor`
        - 1(10KŒ©)
        - |link_resistor_buy|
    *   - 6
        - :ref:`cpn_thermistor`
        - 1
        - |link_thermistor_buy|

**Schaltplan**

|sch_temp|

In dieser Schaltung sind der 10K Widerstand und der Thermistor in Reihe geschaltet, und der durch sie flie√üende Strom ist derselbe. Der 10K Widerstand dient als Schutz, und der GP28 liest den Wert nach der Spannungsumwandlung des Thermistors.

Wenn die Temperatur steigt, verringert sich der Widerstandswert des NTC-Thermistors, dann sinkt seine Spannung, sodass der Wert von GP28 abnimmt; Wenn die Temperatur hoch genug ist, wird der Widerstand des Thermistors nahezu 0 sein, und der Wert von GP28 wird nahezu 0 sein. In dieser Zeit spielt der 10K Widerstand eine sch√ºtzende Rolle, sodass 3,3V und GND nicht miteinander verbunden sind, was zu einem Kurzschluss f√ºhrt.

Wenn die Temperatur sinkt, wird der Wert von GP28 steigen. Wenn die Temperatur niedrig genug ist, wird der Widerstand des Thermistors unendlich sein, und seine Spannung wird nahe 3,3V liegen (der 10K Widerstand ist vernachl√§ssigbar), und der Wert von GP28 wird nahe dem Maximalwert von 65535 sein.

Die Berechnungsformel ist unten dargestellt.

    (Vp/3.3V) x 65535 = Ap





**Verdrahtung**


|wiring_temp|
 
.. #. Verbinden Sie 3V3 und GND von Pico W mit dem Stromschienenbereich des Steckbretts.
.. #. Verbinden Sie ein Ende des Thermistors mit dem GP28-Pin und schlie√üen Sie dann dasselbe Ende √ºber einen 10K Ohm Widerstand mit der positiven Stromschiene an.
.. #. Verbinden Sie das andere Ende des Thermistors mit der negativen Stromschiene.

.. note::
    * Der Thermistor ist schwarz und mit 103 markiert.
    * Der Farbring des 10K Ohm Widerstands ist rot, schwarz, schwarz, rot und braun.

**Code**


.. note::

    * √ñffnen Sie die Datei ``2.13_thermometer.py`` unter dem Pfad ``kepler-kit-main/micropython`` oder kopieren Sie diesen Code in Thonny, dann klicken Sie auf "Aktuelles Skript ausf√ºhren" oder dr√ºcken Sie einfach F5, um es auszuf√ºhren.

    * Vergessen Sie nicht, in der rechten unteren Ecke den "MicroPython (Raspberry Pi Pico)"-Interpreter zu w√§hlen.

    * Detaillierte Anleitungen finden Sie unter :ref:`open_run_code_py`.


.. code-block:: python

    import machine
    import utime
    import math

    thermistor = machine.ADC(28)  

    while True:
        temperature_value = thermistor.read_u16()
        Vr = 3.3 * float(temperature_value) / 65535
        Rt = 10000 * Vr / (3.3 - Vr)
        temp = 1/(((math.log(Rt / 10000)) / 3950) + (1 / (273.15+25)))
        Cel = temp - 273.15
        Fah = Cel * 1.8 + 32
        print ('Celsius: %.2f C  Fahrenheit: %.2f F' % (Cel, Fah))
        utime.sleep_ms(200)

Nachdem das Programm ausgef√ºhrt wurde, gibt die Shell die Temperaturen in Celsius und Fahrenheit aus.

**Wie funktioniert es?**

Jeder Thermistor hat einen Normalwiderstand. Hier betr√§gt er 10k Ohm, gemessen bei 25 Grad Celsius.

Wenn die Temperatur steigt, verringert sich der Widerstand des Thermistors. Dann werden die Spannungsdaten durch den A/D-Adapter in digitale Mengen umgewandelt.

Die Temperatur in Celsius oder Fahrenheit wird mittels Programmierung ausgegeben.

.. code-block:: python

    import math 

Hierbei handelt es sich um eine numerische Bibliothek, die eine Reihe von Funktionen zur Berechnung g√§ngiger mathematischer Operationen und Transformationen deklariert.

* `math <https://docs.micropython.org/en/latest/library/math.html>`_

.. code-block:: python

    temperature_value = thermistor.read_u16()

Diese Funktion wird verwendet, um den Wert des Thermistors auszulesen.

.. code-block:: python

    Vr = 3.3 * float(temperature_value) / 65535
    Rt = 10000 * Vr / (3.3 - Vr)
    temp = 1/(((math.log(Rt / 10000)) / 3950) + (1 / (273.15+25)))
    Cel = temp - 273.15
    Fah = Cel * 1.8 + 32
    print ('Celsius: %.2f C  Fahrenheit: %.2f F' % (Cel, Fah))
    utime.sleep_ms(200)

Diese Funktion wird verwendet, um den Wert des Thermistors auszulesen.

.. code-block:: python

    Vr = 3.3 * float(temperature_value) / 65535
    Rt = 10000 * Vr / (3.3 - Vr)

In den beiden obigen Codezeilen wird zuerst die Spannung anhand des gelesenen analogen Wertes berechnet und anschlie√üend Rt (der Widerstand des Thermistors) ermittelt.

.. code-block:: python

    temp = 1/(((math.log(Rt / 10000)) / 3950) + (1 / (273.15+25)))

.. note::
    Hier ist die Beziehung zwischen Widerstand und Temperatur: 

    **RT =RN expB(1/TK ‚Äì 1/TN)** 

    * RT ist der Widerstand des NTC-Thermistors bei einer Temperatur von TK.
    * RN ist der Widerstand des NTC-Thermistors bei der Nenntemperatur TN. Hier betr√§gt der Zahlenwert von RN 10k.
    * TK ist eine Kelvin-Temperatur, deren Einheit K ist. Hier betr√§gt der Zahlenwert von TK 273,15 + Grad Celsius.
    * TN ist eine Nenn-Kelvin-Temperatur; die Einheit ist auch K. Hier betr√§gt der Zahlenwert von TN 273,15+25.
    * Und B(beta), die Materialkonstante des NTC-Thermistors, wird auch als W√§rmeempfindlichkeitsindex bezeichnet und hat einen Zahlenwert von 3950.
    * exp ist die Abk√ºrzung f√ºr exponentiell, und die Basiszahl e ist eine nat√ºrliche Zahl und betr√§gt ungef√§hr 2,7.

    Wandeln Sie diese Formel TK=1/(ln(RT/RN)/B+1/TN) um, um eine Kelvin-Temperatur zu erhalten, die minus 273,15 Grad Celsius entspricht.

    Diese Beziehung ist eine empirische Formel. Sie ist nur dann genau, wenn Temperatur und Widerstand innerhalb des wirksamen Bereichs liegen.

Dieser Code bezieht sich darauf, Rt in die Formel TK=1/(ln(RT/RN)/B+1/TN) einzusetzen, um die Kelvin-Temperatur zu erhalten.

.. code-block:: python

    temp = temp - 273.15 

Umwandlung der Kelvin-Temperatur in Grad Celsius.

.. code-block:: python

    Fah = Cel * 1.8 + 32 

Umwandlung des Celsius-Grades in Fahrenheit.

.. code-block:: python

    print ('Celsius: %.2f ¬∞C Fahrenheit: %.2f ‚Ñâ' % (Cel, Fah))

Geben Sie Grad Celsius, Fahrenheit und deren Einheiten in der Shell aus.

