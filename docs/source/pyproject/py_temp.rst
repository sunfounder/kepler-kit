.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder des passionn√©s de Raspberry Pi, Arduino & ESP32 sur Facebook ! Approfondissez vos connaissances en mati√®re de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour d√©velopper vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et concours** : Participez √† des concours et √† des promotions festives.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _py_temp:

2.13 Thermom√®tre
===========================

Un thermom√®tre est un dispositif qui mesure la temp√©rature ou un gradient de temp√©rature (le degr√© de chaleur ou de froid d'un objet). 
Un thermom√®tre comporte deux √©l√©ments importants : (1) un capteur de temp√©rature (par exemple, le bulbe d'un thermom√®tre √† mercure ou le capteur pyrom√©trique d'un thermom√®tre infrarouge) dans lequel un changement se produit avec la variation de temp√©rature ; 
et (2) un moyen de convertir ce changement en une valeur num√©rique (par exemple, l'√©chelle visible d'un thermom√®tre √† mercure ou l'affichage num√©rique d'un mod√®le infrarouge). 
Les thermom√®tres sont largement utilis√©s en technologie et dans l'industrie pour surveiller les processus, en m√©t√©orologie, en m√©decine, et dans la recherche scientifique.

Un thermistor est un type de capteur de temp√©rature dont la r√©sistance d√©pend fortement de la temp√©rature, et il en existe deux types :
Coefficient de Temp√©rature N√©gatif (NTC) et Coefficient de Temp√©rature Positif (PTC), √©galement appel√©s NTC et PTC. La r√©sistance d'un 
thermistor PTC augmente avec la temp√©rature, tandis que celle d'un NTC diminue.

Dans cette exp√©rience, nous utilisons un **thermistor NTC** pour fabriquer un thermom√®tre.

* :ref:`cpn_thermistor`

**Composants Requis**

Dans ce projet, nous aurons besoin des composants suivants.

Il est plus pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - √âL√âMENTS DANS CE KIT
        - LIEN
    *   - Kit Kepler
        - 450+
        - |link_kepler_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - COMPOSANT
        - QUANTIT√â
        - LIEN

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - C√¢ble Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Plusieurs
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_resistor`
        - 1(10KŒ©)
        - |link_resistor_buy|
    *   - 6
        - :ref:`cpn_thermistor`
        - 1
        - |link_thermistor_buy|

**Sch√©ma**

|sch_temp|

Dans ce circuit, la r√©sistance de 10K et le thermistor sont connect√©s en s√©rie, et le courant qui les traverse est le m√™me. La r√©sistance de 10K agit comme une protection, et le GP28 lit la valeur apr√®s la conversion de tension du thermistor.

Lorsque la temp√©rature augmente, la r√©sistance du thermistor NTC diminue, ce qui r√©duit sa tension, et donc la valeur lue par GP28 diminue √©galement. Si la temp√©rature est suffisamment √©lev√©e, la r√©sistance du thermistor sera proche de 0, et la valeur de GP28 sera proche de 0. √Ä ce moment-l√†, la r√©sistance de 10K joue un r√¥le protecteur, √©vitant que le 3,3V et le GND ne soient connect√©s ensemble, ce qui entra√Ænerait un court-circuit.

Quand la temp√©rature baisse, la valeur de GP28 augmente. Si la temp√©rature est tr√®s basse, la r√©sistance du thermistor sera pratiquement infinie et sa tension sera proche de 3,3V (la r√©sistance de 10K √©tant n√©gligeable), et la valeur de GP28 sera proche de la valeur maximale de 65535.

La formule de calcul est la suivante :

    (Vp/3.3V) x 65535 = Ap


**C√¢blage**

|wiring_temp|

.. #. Connectez les broches 3V3 et GND du Pico W au bus d'alimentation de la breadboard.
.. #. Connectez une borne du thermistor √† la broche GP28, puis reliez cette m√™me borne au bus positif avec une r√©sistance de 10K ohms.
.. #. Connectez l'autre borne du thermistor au bus n√©gatif.

.. note::
    * Le thermistor est noir et marqu√© 103.
    * Les anneaux de couleur de la r√©sistance de 10K ohms sont rouge, noir, noir, rouge et marron.

**Code**

.. note::

    * Ouvrez le fichier ``2.13_thermometer.py`` sous le chemin ``kepler-kit-main/micropython`` ou copiez ce code dans Thonny, puis cliquez sur "Run Current Script" ou appuyez simplement sur F5 pour l'ex√©cuter.

    * N'oubliez pas de s√©lectionner l'interpr√©teur "MicroPython (Raspberry Pi Pico)" en bas √† droite. 

    * Pour des tutoriels d√©taill√©s, veuillez consulter :ref:`open_run_code_py`.

.. code-block:: python

    import machine
    import utime
    import math

    thermistor = machine.ADC(28)  

    while True:
        temperature_value = thermistor.read_u16()
        Vr = 3.3 * float(temperature_value) / 65535
        Rt = 10000 * Vr / (3.3 - Vr)
        temp = 1/(((math.log(Rt / 10000)) / 3950) + (1 / (273.15+25)))
        Cel = temp - 273.15
        Fah = Cel * 1.8 + 32
        print ('Celsius: %.2f C  Fahrenheit: %.2f F' % (Cel, Fah))
        utime.sleep_ms(200)

Apr√®s l'ex√©cution du programme, la console affichera les temp√©ratures en degr√©s Celsius et Fahrenheit.

**Comment √ßa marche ?**

Chaque thermistor poss√®de une r√©sistance normale. Ici, elle est de 10k ohms, mesur√©e √† 25 degr√©s Celsius.

Lorsque la temp√©rature augmente, la r√©sistance du thermistor diminue. La tension est alors convertie en valeurs num√©riques par l'adaptateur A/D.

La temp√©rature en degr√©s Celsius ou Fahrenheit est affich√©e via le programme.

.. code-block:: python

    import math 

Il existe une biblioth√®que de fonctions num√©riques permettant de r√©aliser des op√©rations math√©matiques courantes.

* `math <https://docs.micropython.org/en/latest/library/math.html>`_

.. code-block:: python

    temperature_value = thermistor.read_u16()

Cette fonction lit la valeur du thermistor.

.. code-block:: python

    Vr = 3.3 * float(temperature_value) / 65535
    Rt = 10000 * Vr / (3.3 - Vr)
    temp = 1/(((math.log(Rt / 10000)) / 3950) + (1 / (273.15+25)))
    Cel = temp - 273.15
    Fah = Cel * 1.8 + 32
    print ('Celsius: %.2f C  Fahrenheit: %.2f F' % (Cel, Fah))
    utime.sleep_ms(200)

Ces calculs convertissent les valeurs du thermistor en degr√©s Celsius et Fahrenheit.

.. code-block:: python

    Vr = 3.3 * float(temperature_value) / 65535
    Rt = 10000 * Vr / (3.3 - Vr)

Dans les deux lignes de code ci-dessus, la tension est d'abord calcul√©e √† partir de la valeur analogique lue, puis on obtient Rt (la r√©sistance du thermistor).

.. code-block:: python

    temp = 1/(((math.log(Rt / 10000)) / 3950) + (1 / (273.15+25)))

.. note::
    Voici la relation entre la r√©sistance et la temp√©rature :

    **RT =RN expB(1/TK ‚Äì 1/TN)** 

    * RT est la r√©sistance du thermistor NTC lorsque la temp√©rature est TK. 
    * RN est la r√©sistance du thermistor NTC sous la temp√©rature nominale TN. Ici, RN vaut 10k. 
    * TK est la temp√©rature en Kelvin. Ici, TK est de 273.15 + degr√©s Celsius. 
    * TN est une temp√©rature nominale en Kelvin ; ici, TN est de 273.15 + 25.
    * B (b√™ta), la constante de mat√©riau du thermistor NTC, √©galement appel√©e indice de sensibilit√© thermique, a pour valeur 3950. 
    * exp est l'abr√©viation d'exponentielle, avec le nombre de base e, un nombre naturel valant environ 2,7. 

    Convertissez cette formule en TK=1/(ln(RT/RN)/B+1/TN) pour obtenir la temp√©rature en Kelvin, puis soustrayez 273,15 pour obtenir les degr√©s Celsius.

    Cette relation est empirique. Elle est pr√©cise uniquement lorsque la temp√©rature et la r√©sistance se situent dans une plage effective.

Ce code consiste √† ins√©rer Rt dans la formule TK=1/(ln(RT/RN)/B+1/TN) pour obtenir la temp√©rature en Kelvin.

.. code-block:: python

    temp = temp - 273.15 

Conversion de la temp√©rature Kelvin en degr√©s Celsius.

.. code-block:: python

    Fah = Cel * 1.8 + 32 

Conversion des degr√©s Celsius en degr√©s Fahrenheit.

.. code-block:: python

    print ('Celsius: %.2f ¬∞C Fahrenheit: %.2f ‚Ñâ' % (Cel, Fah)) 

Affichage en console des temp√©ratures en degr√©s Celsius et Fahrenheit avec leurs unit√©s respectives.
