.. note::

    ¬°Hola! Bienvenido a la Comunidad de Entusiastas de SunFounder para Raspberry Pi, Arduino y ESP32 en Facebook. Sum√©rgete en el apasionante mundo de Raspberry Pi, Arduino y ESP32 junto a otros entusiastas.

    **¬øPor qu√© unirse?**

    - **Soporte Experto**: Resuelve problemas posventa y desaf√≠os t√©cnicos con ayuda de nuestra comunidad y equipo.
    - **Aprende y Comparte**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Previsualizaciones Exclusivas**: Obt√©n acceso anticipado a anuncios de nuevos productos y adelantos exclusivos.
    - **Descuentos Especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s recientes.
    - **Promociones y Sorteos Festivos**: Participa en sorteos y promociones en temporadas festivas.

    üëâ ¬øListo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y √∫nete hoy.

.. _py_temp:

2.13 Term√≥metro
===================

Un term√≥metro es un dispositivo que mide la temperatura o un gradiente de 
temperatura (el nivel de calor o fr√≠o de un objeto). Un term√≥metro tiene 
dos elementos importantes: (1) un sensor de temperatura (por ejemplo, el 
bulbo de un term√≥metro de mercurio en vidrio o el sensor pirom√©trico en un 
term√≥metro infrarrojo), en el que ocurre alg√∫n cambio con una variaci√≥n en 
la temperatura; y (2) un medio para convertir ese cambio en un valor num√©rico 
(por ejemplo, la escala visible en un term√≥metro de mercurio en vidrio o la 
lectura digital en un modelo infrarrojo). Los term√≥metros se utilizan 
ampliamente en tecnolog√≠a e industria para monitorear procesos, en meteorolog√≠a, 
en medicina y en investigaciones cient√≠ficas.

Un termistor es un tipo de sensor de temperatura cuya resistencia depende 
fuertemente de la temperatura. Existen dos tipos de termistores: de Coeficiente 
de Temperatura Negativo (NTC) y de Coeficiente de Temperatura Positivo (PTC). 
La resistencia del termistor PTC aumenta con la temperatura, mientras que la 
del NTC disminuye a medida que la temperatura aumenta.

En este experimento, usaremos un **termistor NTC** para crear un term√≥metro.

* :ref:`cpn_thermistor`

**Componentes Necesarios**

Para este proyecto, necesitaremos los siguientes componentes.

Es muy conveniente adquirir un kit completo; aqu√≠ tienes el enlace:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nombre	
        - ELEMENTOS EN ESTE KIT
        - ENLACE
    *   - Kit Kepler	
        - 450+
        - |link_kepler_kit|

Tambi√©n puedes comprarlos por separado en los enlaces a continuaci√≥n.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - COMPONENTE	
        - CANTIDAD
        - ENLACE

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - Cable Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Varios
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_resistor`
        - 1(10KŒ©)
        - |link_resistor_buy|
    *   - 6
        - :ref:`cpn_thermistor`
        - 1
        - |link_thermistor_buy|

**Esquem√°tico**

|sch_temp|

En este circuito, el resistor de 10K y el termistor est√°n conectados en serie, y la corriente que pasa a trav√©s de ellos es la misma. El resistor de 10K act√∫a como protecci√≥n, y el pin GP28 lee el valor despu√©s de la conversi√≥n de voltaje del termistor.

Cuando la temperatura aumenta, el valor de resistencia del termistor NTC disminuye, lo que provoca una disminuci√≥n en su voltaje, por lo que el valor de GP28 disminuir√°. Si la temperatura es lo suficientemente alta, la resistencia del termistor se acercar√° a 0, y el valor de GP28 estar√° cerca de 0. En este caso, el resistor de 10K desempe√±a un papel protector, evitando que 3.3V y GND se conecten directamente, lo que resultar√≠a en un cortocircuito.

Cuando la temperatura baja, el valor de GP28 aumentar√°. Cuando la temperatura es lo suficientemente baja, la resistencia del termistor ser√° infinita, y su voltaje estar√° cerca de 3.3V (el resistor de 10K es insignificante), y el valor de GP28 se acercar√° al valor m√°ximo de 65535.

La f√≥rmula de c√°lculo es la siguiente:

    (Vp/3.3V) x 65535 = Ap

**Conexiones**

|wiring_temp|
 
.. #. Conecta los pines 3V3 y GND del Pico W al bus de alimentaci√≥n de la breadboard.
.. #. Conecta un terminal del termistor al pin GP28, luego conecta el mismo terminal al bus positivo de alimentaci√≥n con un resistor de 10K ohmios.
.. #. Conecta el otro terminal del termistor al bus negativo de alimentaci√≥n.

.. note::
    * El termistor es negro y est√° marcado con 103.
    * El c√≥digo de colores del resistor de 10K ohmios es rojo, negro, negro, rojo y marr√≥n.

**C√≥digo**

.. note::

    * Abre el archivo ``2.13_thermometer.py`` en la ruta de ``kepler-kit-main/micropython`` o copia este c√≥digo en Thonny, luego haz clic en "Run Current Script" o simplemente presiona F5 para ejecutarlo.
    * No olvides seleccionar el int√©rprete "MicroPython (Raspberry Pi Pico)" en la esquina inferior derecha.

    * Para tutoriales detallados, consulta :ref:`open_run_code_py`.

.. code-block:: python

    import machine
    import utime
    import math

    thermistor = machine.ADC(28)  

    while True:
        temperature_value = thermistor.read_u16()
        Vr = 3.3 * float(temperature_value) / 65535
        Rt = 10000 * Vr / (3.3 - Vr)
        temp = 1/(((math.log(Rt / 10000)) / 3950) + (1 / (273.15+25)))
        Cel = temp - 273.15
        Fah = Cel * 1.8 + 32
        print ('Celsius: %.2f C  Fahrenheit: %.2f F' % (Cel, Fah))
        utime.sleep_ms(200)

Al ejecutar el programa, la consola imprimir√° las temperaturas en Celsius y Fahrenheit.

**¬øC√≥mo funciona?**

Cada termistor tiene una resistencia normal. Aqu√≠ es de 10k ohmios, medida a 25 grados Celsius.

Cuando la temperatura aumenta, la resistencia del termistor disminuye. Luego, los datos de voltaje se convierten en cantidades digitales mediante el adaptador A/D.

La temperatura en grados Celsius o Fahrenheit se obtiene mediante programaci√≥n.

.. code-block:: python

    import math 

Existe una biblioteca de funciones matem√°ticas que declara un conjunto de funciones para realizar operaciones y transformaciones matem√°ticas comunes.

* `math <https://docs.micropython.org/en/latest/library/math.html>`_

.. code-block:: python

    temperature_value = thermistor.read_u16()

Esta funci√≥n se utiliza para leer el valor del termistor.

.. code-block:: python

    Vr = 3.3 * float(temperature_value) / 65535
    Rt = 10000 * Vr / (3.3 - Vr)
    temp = 1/(((math.log(Rt / 10000)) / 3950) + (1 / (273.15+25)))
    Cel = temp - 273.15
    Fah = Cel * 1.8 + 32
    print ('Celsius: %.2f C  Fahrenheit: %.2f F' % (Cel, Fah))
    utime.sleep_ms(200)

Estos c√°lculos convierten los valores del termistor en grados Celsius y Fahrenheit.

.. code-block:: python

    Vr = 3.3 * float(temperature_value) / 65535
    Rt = 10000 * Vr / (3.3 - Vr)

En las dos l√≠neas de c√≥digo anteriores, se calcula primero el voltaje utilizando el valor anal√≥gico le√≠do, y luego se obtiene Rt (la resistencia del termistor).

.. code-block:: python

    temp = 1/(((math.log(Rt / 10000)) / 3950) + (1 / (273.15+25))) 

.. note::
    Aqu√≠ est√° la relaci√≥n entre la resistencia y la temperatura:

    **RT = RN expB(1/TK ‚Äì 1/TN)** 

    * RT es la resistencia del termistor NTC a la temperatura TK. 
    * RN es la resistencia del termistor NTC bajo la temperatura nominal TN, aqu√≠ con un valor de 10k. 
    * TK es la temperatura en Kelvin, y su unidad es K (273.15 + grados Celsius).
    * TN es la temperatura nominal en Kelvin, tambi√©n en K. Aqu√≠ TN es 273.15 + 25.
    * B (beta), la constante del material del termistor NTC, tambi√©n se llama √≠ndice de sensibilidad t√©rmica y tiene un valor de 3950.
    * exp es la abreviatura de exponencial, y el n√∫mero base e es un n√∫mero natural aproximadamente igual a 2.7.

    Convierte esta f√≥rmula TK=1/(ln(RT/RN)/B+1/TN) para obtener la temperatura en Kelvin, y resta 273.15 para obtener los grados Celsius.

Esta relaci√≥n es una f√≥rmula emp√≠rica, precisa solo cuando la temperatura y resistencia est√°n dentro del rango efectivo.

Este c√≥digo se refiere a insertar Rt en la f√≥rmula TK=1/(ln(RT/RN)/B+1/TN) para obtener la temperatura en Kelvin.

.. code-block:: python

    temp = temp - 273.15 

Convierte la temperatura de Kelvin a grados Celsius.

.. code-block:: python

    Fah = Cel * 1.8 + 32 

Convierte los grados Celsius a grados Fahrenheit.

.. code-block:: python

    print ('Celsius: %.2f ¬∞C Fahrenheit: %.2f ‚Ñâ' % (Cel, Fah)) 

Imprime los grados Celsius y Fahrenheit con sus respectivas unidades en la consola.

