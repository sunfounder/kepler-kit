.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **ExpertenunterstÃ¼tzung**: LÃ¶sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre FÃ¤higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie frÃ¼hzeitigen Zugang zu neuen ProduktankÃ¼ndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: GenieÃŸen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    ðŸ‘‰ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _py_water:

2.14 Wasserstand erfÃ¼hlen
=====================================

|img_water_sensor|

Der Wasserstandssensor ist zur Wasserdetektion konzipiert und kann vielfÃ¤ltig zur Messung von RegenfÃ¤llen, Wasserstand und sogar FlÃ¼ssigkeitsaustritt eingesetzt werden.

Er misst den Wasserstand, indem er eine Reihe von freiliegenden parallelen Drahtspuren verwendet, um die GrÃ¶ÃŸe der Wassertropfen/das Volumen zu messen. Das Wasserstandsvolumen lÃ¤sst sich leicht in ein analoges Signal umwandeln, und der ausgegebene Analogwert kann direkt vom Hauptsteuerboard abgelesen werden, um den Wasserstandsalarm auszulÃ¶sen.

.. warning::

    Der Sensor darf nicht vollstÃ¤ndig unter Wasser getaucht werden. Lassen Sie nur den Teil, an dem sich die zehn Spuren befinden, mit Wasser in Kontakt kommen. Zudem wird das Einschalten des Sensors in einer feuchten Umgebung die Korrosion der Sonde beschleunigen und die Lebensdauer des Sensors verkÃ¼rzen. Es wird daher empfohlen, den Sensor nur beim Ablesen einzuschalten.

* :ref:`cpn_water_level`

**BenÃ¶tigte Komponenten**

FÃ¼r dieses Projekt benÃ¶tigen wir die folgenden Komponenten.

Es ist definitiv praktisch, ein ganzes Kit zu kaufen, hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name
        - ARTIKEL IN DIESEM KIT
        - LINK
    *   - Kepler Kit
        - 450+
        - |link_kepler_kit|

Sie kÃ¶nnen die Komponenten auch einzeln Ã¼ber die untenstehenden Links erwerben.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - KOMPONENTE
        - ANZAHL
        - LINK

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - Micro-USB-Kabel
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Mehrere
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_water_level`
        - 1
        - 

**Schaltplan**

|sch_water|


**Verdrahtung**

|wiring_water|

**Code**

.. note::

    * Ã–ffnen Sie die Datei ``2.14_feel_the_water_level.py`` im Verzeichnis ``kepler-kit-main/micropython`` oder kopieren Sie diesen Code in Thonny. Klicken Sie anschlieÃŸend auf "Aktuelles Skript ausfÃ¼hren" oder drÃ¼cken Sie einfach F5.

    * Vergessen Sie nicht, den "MicroPython (Raspberry Pi Pico)"-Interpreter in der rechten unteren Ecke auszuwÃ¤hlen.

    * FÃ¼r ausfÃ¼hrliche Tutorials verweisen wir auf :ref:`open_run_code_py`.

.. code-block:: python

    import machine
    import utime

    sensor = machine.ADC(28)

    while True:
        value=sensor.read_u16()
        print(value)
        utime.sleep_ms(200)


Nachdem das Programm ausgefÃ¼hrt wurde, tauchen Sie das Wasserstandsmodul langsam ins Wasser. Mit zunehmender Tiefe wird die Shell einen hÃ¶heren Wert ausgeben.

**Mehr erfahren**

Es gibt eine MÃ¶glichkeit, das Analogeingangsmodul als digitales Modul zu verwenden.

ZunÃ¤chst ermitteln Sie den Wert des Wasserstandssensors in einer trockenen Umgebung und verwenden diesen als Schwellenwert. Dann fÃ¼hren Sie die Programmierung durch und lesen den Wert des Wasserstandssensors erneut ab. Weicht der Messwert des Sensors deutlich vom Wert in einer trockenen Umgebung ab, ist er FlÃ¼ssigkeiten ausgesetzt. Mit anderen Worten: Platzieren Sie dieses GerÃ¤t in der NÃ¤he eines Wasserrohrs, kann es feststellen, ob ein Leck im Rohr vorliegt.

.. note::

    * Ã–ffnen Sie die Datei ``2.14_water_level_threshold.py`` im Verzeichnis ``kepler-kit-main/micropython`` oder kopieren Sie diesen Code in Thonny. Klicken Sie anschlieÃŸend auf "Aktuelles Skript ausfÃ¼hren" oder drÃ¼cken Sie einfach F5.

    * Vergessen Sie nicht, den "MicroPython (Raspberry Pi Pico)"-Interpreter in der rechten unteren Ecke auszuwÃ¤hlen.

    * FÃ¼r ausfÃ¼hrliche Tutorials verweisen wir auf :ref:`open_run_code_py`.

.. code-block:: python

    import machine
    import utime

    sensor = machine.ADC(28)
    threshold = 30000 #Dieser Wert muss an die Umgebung angepasst werden.

    while True:
        value=sensor.read_u16()
        if value > threshold :
            print("Liquid leakage!")
        utime.sleep_ms(200)

