.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino & ESP32 sur Facebook ! Plongez plus profond√©ment dans le monde du Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et concours** : Participez √† des concours et √† des promotions festives.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _py_room_temp:

7.2 Thermom√®tre de Pi√®ce
======================================

√Ä l'aide d'une thermistance et d'un √©cran LCD1602 I2C, nous pouvons cr√©er un thermom√®tre de pi√®ce.

Ce projet est tr√®s simple, il se base sur :ref:`py_temp` avec l'ajout d'un √©cran LCD1602 I2C pour afficher la temp√©rature.


**Composants Requis**

Dans ce projet, nous aurons besoin des composants suivants.

Il est plus pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - √âL√âMENTS DANS CE KIT
        - LIEN
    *   - Kit Kepler
        - 450+
        - |link_kepler_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - COMPOSANT
        - QUANTIT√â
        - LIEN

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - C√¢ble Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Plusieurs
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_resistor`
        - 1 (10KŒ©)
        - |link_resistor_buy|
    *   - 6
        - :ref:`cpn_thermistor`
        - 1
        - |link_thermistor_buy|
    *   - 7
        - :ref:`cpn_i2c_lcd`
        - 1
        - |link_i2clcd1602_buy|

**Sch√©ma**

|sch_room_temp|


**C√¢blage**

|wiring_room_temp|

**Code**

.. note::

    * Ouvrez le fichier ``7.2_room_temperature_meter.py`` sous le chemin ``kepler-kit-main/micropython`` ou copiez ce code dans Thonny, puis cliquez sur "Run Current Script" ou appuyez simplement sur F5 pour l'ex√©cuter.

    * N'oubliez pas de s√©lectionner l'interpr√©teur "MicroPython (Raspberry Pi Pico)" en bas √† droite.

    * Pour des tutoriels d√©taill√©s, veuillez consulter :ref:`open_run_code_py`.

.. code-block:: python

    from lcd1602 import LCD
    from machine import I2C, Pin
    import utime
    import math

    # Initialiser la thermistance (ADC sur la broche 28) et l'√©cran LCD
    thermistor = machine.ADC(28)  # Entr√©e analogique de la thermistance

    # Initialiser la communication I2C pour l'√©cran LCD1602
    i2c = I2C(1, sda=Pin(6), scl=Pin(7), freq=400000)

    # Cr√©er un objet LCD pour contr√¥ler l'√©cran LCD1602
    lcd = LCD(i2c)

    # Boucle principale pour lire en continu la temp√©rature et l'afficher
    while True:
        # Lire la valeur brute de l'ADC de la thermistance
        temperature_value = thermistor.read_u16()

        # Convertir la valeur brute de l'ADC en tension (gamme de 0-3,3V)
        Vr = 3.3 * float(temperature_value) / 65535  # Conversion de la valeur ADC en tension

        # Calculer la r√©sistance de la thermistance (en utilisant un diviseur de tension avec une r√©sistance de 10kŒ©)
        Rt = 10000 * Vr / (3.3 - Vr)  # Rt = r√©sistance de la thermistance

        # Utiliser l'√©quation de Steinhart-Hart pour calculer la temp√©rature en Kelvin
        # Les valeurs utilis√©es sont sp√©cifiques √† la thermistance (3950 est le coefficient b√™ta)
        temp = 1 / (((math.log(Rt / 10000)) / 3950) + (1 / (273.15 + 25)))  # Temp√©rature en Kelvin

        # Convertir la temp√©rature de Kelvin en Celsius
        Cel = temp - 273.15

        # Afficher la temp√©rature sur l'√©cran LCD en Celsius
        string = " Temperature is \n    " + str('{:.2f}'.format(Cel)) + " C"  # Format de la cha√Æne pour l'affichage LCD
        lcd.message(string)  # Afficher la cha√Æne sur l'√©cran LCD

        utime.sleep(1)  # Attendre 1 seconde
        lcd.clear()  # Effacer l'√©cran LCD pour la prochaine lecture


L'√©cran LCD affichera la valeur de la temp√©rature dans l'environnement actuel apr√®s le d√©marrage du programme.

.. note:: 
    Si le code et le c√¢blage sont corrects mais que l'√©cran LCD ne montre toujours rien, vous pouvez tourner le potentiom√®tre √† l'arri√®re pour augmenter le contraste.

