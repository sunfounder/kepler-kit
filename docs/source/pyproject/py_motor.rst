.. note::

    ¬°Hola! Bienvenido a la Comunidad de Entusiastas de SunFounder para Raspberry Pi, Arduino y ESP32 en Facebook. Sum√©rgete junto a otros entusiastas en temas avanzados sobre Raspberry Pi, Arduino y ESP32.

    **¬øPor qu√© unirse?**

    - **Soporte Experto**: Resuelve problemas posventa y desaf√≠os t√©cnicos con la ayuda de nuestra comunidad y equipo.
    - **Aprende y Comparte**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Previsualizaciones Exclusivas**: Obt√©n acceso anticipado a anuncios de nuevos productos y adelantos.
    - **Descuentos Especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s recientes.
    - **Promociones y Sorteos Festivos**: Participa en sorteos y promociones en d√≠as festivos.

    üëâ ¬øListo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y √∫nete hoy.

.. _py_motor:

3.5 Ventilador Peque√±o
============================

Ahora usaremos el TA6586 para controlar el motor de corriente continua (DC) y hacerlo girar en sentido horario y antihorario. 
Dado que el motor DC requiere una corriente relativamente alta, utilizamos un m√≥dulo de alimentaci√≥n para suministrarle energ√≠a de manera segura.

* :ref:`cpn_motor`
* :ref:`cpn_ta6586`
* :ref:`cpn_power_module`

**Componentes Necesarios**

En este proyecto, necesitaremos los siguientes componentes.

Es muy conveniente adquirir un kit completo; aqu√≠ tienes el enlace:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nombre	
        - ELEMENTOS EN ESTE KIT
        - ENLACE
    *   - Kit Kepler	
        - 450+
        - |link_kepler_kit|

Tambi√©n puedes comprarlos por separado en los enlaces a continuaci√≥n.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - COMPONENTE	
        - CANTIDAD
        - ENLACE

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - Cable Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Varios
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_ta6586`
        - 1
        - 
    *   - 6
        - :ref:`cpn_motor`
        - 1
        - |link_motor_buy| 
    *   - 7
        - :ref:`cpn_lipo_charger`
        - 1
        -  
    *   - 8
        - Bater√≠a 18650
        - 1
        -  
    *   - 9
        - Soporte para bater√≠a
        - 1
        -  

**Esquema**

|sch_motor|

**Conexiones**

.. note::

    * Dado que los motores DC requieren alta corriente, utilizamos aqu√≠ un m√≥dulo de carga Li-po para alimentar el motor de manera segura.
    * Aseg√∫rate de que el m√≥dulo de carga Li-po est√© conectado como se muestra en el diagrama. De lo contrario, un cortocircuito podr√≠a da√±ar tu bater√≠a y el circuito.

|wiring_motor|

**C√≥digo**

.. note::

    * Abre el archivo ``3.5_small_fan.py`` en la ruta de ``kepler-kit-main/micropython`` o copia este c√≥digo en Thonny, luego haz clic en "Run Current Script" o simplemente presiona F5 para ejecutarlo.

    * No olvides seleccionar el int√©rprete "MicroPython (Raspberry Pi Pico)" en la esquina inferior derecha.

    * Para tutoriales detallados, consulta :ref:`open_run_code_py`.

.. code-block:: python

    import machine
    import utime

    motor1A = machine.Pin(14, machine.Pin.OUT)
    motor2A = machine.Pin(15, machine.Pin.OUT)

    def clockwise():
        motor1A.high()
        motor2A.low()

    def anticlockwise():
        motor1A.low()
        motor2A.high()

    def stopMotor():
        motor1A.low()
        motor2A.low()

    while True:
        clockwise()
        utime.sleep(1)
        stopMotor()
        utime.sleep(1)
        anticlockwise()
        utime.sleep(1)
        stopMotor()
        utime.sleep(1)

Una vez que el programa est√© en ejecuci√≥n, el motor girar√° hacia adelante y hacia atr√°s en un patr√≥n regular.

.. note::

    * Si el motor sigue girando despu√©s de presionar el bot√≥n de detenci√≥n, necesitas resetear el pin **RUN** en el Pico W conect√°ndolo a GND mediante un cable y luego desconectar el cable para volver a ejecutar el c√≥digo.
    * Esto se debe a que el motor opera con mucha corriente, lo que puede causar que el Pico W se desconecte de la computadora.

    |wiring_run_reset|