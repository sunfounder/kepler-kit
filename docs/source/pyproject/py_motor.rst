.. note::

    Bonjour et bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Explorez plus en profondeur Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Assistance d'experts** : R√©solvez vos probl√®mes apr√®s-vente et vos d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus exclusifs.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et concours** : Participez √† des concours et promotions pendant les f√™tes.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _py_motor:

3.5 Petit ventilateur
=======================

Nous allons utiliser le TA6586 pour piloter le moteur √† courant continu (DC) afin de le faire tourner dans le sens horaire et antihoraire. 
√âtant donn√© que le moteur DC n√©cessite un courant relativement important, par mesure de s√©curit√©, 
nous utilisons ici un module d'alimentation pour alimenter le moteur.

* :ref:`cpn_motor`
* :ref:`cpn_ta6586`
* :ref:`cpn_power_module`

**Composants requis**

Pour ce projet, nous aurons besoin des composants suivants.

Il est plus pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - √âL√âMENTS DANS CE KIT
        - LIEN
    *   - Kit Kepler	
        - 450+
        - |link_kepler_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - COMPOSANT	
        - QUANTIT√â
        - LIEN

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - C√¢ble Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Plusieurs
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_ta6586`
        - 1
        - 
    *   - 6
        - :ref:`cpn_motor`
        - 1
        - |link_motor_buy| 
    *   - 7
        - :ref:`cpn_lipo_charger`
        - 1
        -  
    *   - 8
        - Batterie 18650
        - 1
        -  
    *   - 9
        - Support de batterie
        - 1
        -  

**Sch√©ma**

|sch_motor|

**C√¢blage**

.. note::

    * Comme les moteurs DC n√©cessitent un courant √©lev√©, nous utilisons ici un module chargeur Li-po pour alimenter le moteur par s√©curit√©.
    * Assurez-vous que votre module chargeur Li-po est connect√© comme indiqu√© dans le sch√©ma. Sinon, un court-circuit pourrait endommager votre batterie et votre circuiterie.

|wiring_motor|

**Code**

.. note::

    * Ouvrez le fichier ``3.5_small_fan.py`` sous le chemin ``kepler-kit-main/micropython`` ou copiez ce code dans Thonny, puis cliquez sur "Run Current Script" ou appuyez simplement sur F5 pour l'ex√©cuter.

    * N'oubliez pas de s√©lectionner l'interpr√©teur "MicroPython (Raspberry Pi Pico)" en bas √† droite.

    * Pour des tutoriels d√©taill√©s, veuillez vous r√©f√©rer √† :ref:`open_run_code_py`.

.. code-block:: python

    import machine
    import utime

    motor1A = machine.Pin(14, machine.Pin.OUT)
    motor2A = machine.Pin(15, machine.Pin.OUT)

    def clockwise():
        motor1A.high()
        motor2A.low()

    def anticlockwise():
        motor1A.low()
        motor2A.high()

    def stopMotor():
        motor1A.low()
        motor2A.low()

    while True:
        clockwise()
        utime.sleep(1)
        stopMotor()
        utime.sleep(1)
        anticlockwise()
        utime.sleep(1)
        stopMotor()
        utime.sleep(1)

Une fois le programme lanc√©, le moteur tournera d'avant en arri√®re selon un sch√©ma r√©gulier.

.. note::

    * Si le moteur continue de tourner apr√®s que vous ayez cliqu√© sur le bouton d'arr√™t, vous devez r√©initialiser la broche **RUN** sur le Pico W avec un fil connect√© √† la masse (GND), puis d√©brancher ce fil pour relancer le code.
    * Cela est d√ª au fait que le moteur fonctionne avec un courant trop √©lev√©, ce qui peut entra√Æner la d√©connexion du Pico W de l'ordinateur.

    |wiring_run_reset|