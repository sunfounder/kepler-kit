.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino & ESP32 sur Facebook ! Plongez plus profond√©ment dans l'univers du Raspberry Pi, de l'Arduino et de l'ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprenez & Partagez** : √âchangez des astuces et des tutoriels pour d√©velopper vos comp√©tences.
    - **Aper√ßus exclusifs** : Profitez d'un acc√®s anticip√© aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : B√©n√©ficiez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et concours** : Participez √† des concours et des promotions sp√©ciales.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _py_pot:

2.11 Tournez le Bouton
===========================

Dans les projets pr√©c√©dents, nous avons utilis√© les entr√©es num√©riques sur le Pico W.
Par exemple, un bouton peut faire passer une broche d'un niveau bas (√©teint) √† un niveau haut (allum√©). C'est un √©tat de fonctionnement binaire.

Cependant, le Pico W peut √©galement recevoir un autre type de signal d'entr√©e : l'entr√©e analogique.
Elle peut √™tre dans n'importe quel √©tat, allant de totalement ferm√© √† totalement ouvert, et pr√©sente une plage de valeurs possibles.
L'entr√©e analogique permet au microcontr√¥leur de percevoir l'intensit√© de la lumi√®re, du son, la temp√©rature, l'humidit√©, etc. du monde physique.

G√©n√©ralement, un microcontr√¥leur n√©cessite un mat√©riel suppl√©mentaire pour g√©rer les entr√©es analogiques - un convertisseur analogique-num√©rique (ADC).
Mais le Pico W dispose d'un ADC int√©gr√© que nous pouvons utiliser directement.


|pin_adc|

Le Pico W dispose de trois broches GPIO pouvant utiliser une entr√©e analogique : GP26, GP27, GP28. Celles-ci correspondent aux canaux analogiques 0, 1 et 2.
De plus, il existe un quatri√®me canal analogique, connect√© au capteur de temp√©rature int√©gr√©, mais il ne sera pas abord√© ici.

Dans ce projet, nous allons essayer de lire la valeur analogique d'un potentiom√®tre.

* :ref:`cpn_potentiometer`

**Composants Requis**

Dans ce projet, nous aurons besoin des composants suivants.

Il est plus pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - √âL√âMENTS DANS CE KIT
        - LIEN
    *   - Kit Kepler
        - 450+
        - |link_kepler_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - COMPOSANT
        - QUANTIT√â
        - LIEN

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - C√¢ble Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Plusieurs
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_resistor`
        - 1 (220Œ©)
        - |link_resistor_buy|
    *   - 6
        - :ref:`cpn_led`
        - 1
        - |link_led_buy|
    *   - 7
        - :ref:`cpn_potentiometer`
        - 1
        - |link_potentiometer_buy|

**Sch√©ma**

|sch_pot|

Le potentiom√®tre est un dispositif analogique, et lorsque vous le tournez dans deux directions diff√©rentes, il modifie sa r√©sistance.

Connectez la broche centrale du potentiom√®tre √† la broche analogique GP28. Le Raspberry Pi Pico W contient un convertisseur analogique-num√©rique multicanaux de 16 bits. Cela signifie qu'il convertit la tension d'entr√©e comprise entre 0 et la tension de fonctionnement (3,3 V) en une valeur enti√®re comprise entre 0 et 65535, donc la valeur de GP28 varie de 0 √† 65535.

La formule de calcul est la suivante :

    (Vp/3.3V) x 65535 = Ap

Ensuite, programmez la valeur de GP28 (potentiom√®tre) comme la valeur PWM de GP15 (LED).
De cette mani√®re, vous constaterez qu'en tournant le potentiom√®tre, la luminosit√© de la LED changera simultan√©ment.

**C√¢blage**

|wiring_pot|

**Code**

.. note::

    * Ouvrez le fichier ``2.11_turn_the_knob.py`` sous le chemin ``kepler-kit-main/micropython`` ou copiez ce code dans Thonny, puis cliquez sur "Run Current Script" ou appuyez simplement sur F5 pour l'ex√©cuter.

    * N'oubliez pas de s√©lectionner l'interpr√©teur "MicroPython (Raspberry Pi Pico)" en bas √† droite.

    * Pour des tutoriels d√©taill√©s, veuillez vous r√©f√©rer √† :ref:`open_run_code_py`.

.. code-block:: python

    import machine
    import utime

    potentiometer = machine.ADC(28)
    led = machine.PWM(machine.Pin(15))
    led.freq(1000)

    while True:
        value=potentiometer.read_u16()
        print(value)
        led.duty_u16(value)
        utime.sleep_ms(200)

Lorsque le programme est en cours d'ex√©cution, nous pouvons voir la valeur analogique actuellement lue par la broche GP28 dans la console. 
Tournez le bouton, et la valeur changera de 0 √† 65535.
En m√™me temps, la luminosit√© de la LED augmentera √† mesure que la valeur analogique augmente.

**Comment √ßa marche ?**

.. code-block:: python

    potentiometer = machine.ADC(28)

Acc√©dez √† l'ADC associ√© √† une source identifi√©e par id. Dans cet exemple, il s'agit de GP28.

.. code-block:: python

    potentiometer.read_u16()

Prenez une lecture analogique et renvoyez un entier compris entre 0 et 65535. La valeur de retour repr√©sente la lecture brute prise par l'ADC, mise √† l'√©chelle de sorte que la valeur minimale soit 0 et la valeur maximale soit 65535.

* `machine.ADC - MicroPython Docs <https://docs.micropython.org/en/latest/library/machine.ADC.html>`_