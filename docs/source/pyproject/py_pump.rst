.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino & ESP32 sur Facebook ! Plongez plus profond√©ment dans l'univers du Raspberry Pi, de l'Arduino et de l'ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprenez & Partagez** : √âchangez des astuces et des tutoriels pour d√©velopper vos comp√©tences.
    - **Aper√ßus exclusifs** : Profitez d'un acc√®s anticip√© aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : B√©n√©ficiez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et concours** : Participez √† des concours et des promotions sp√©ciales.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _py_pump:

3.6 Pompage
=======================


Les petites pompes centrifuges sont id√©ales pour les projets d'arrosage automatique des plantes.
Elles peuvent √©galement √™tre utilis√©es pour cr√©er de petites fontaines intelligentes.

Le composant de puissance de la pompe est un moteur √©lectrique, pilot√© exactement de la m√™me mani√®re qu'un moteur classique.

* :ref:`cpn_pump`
* :ref:`cpn_motor`
* :ref:`cpn_ta6586`
* :ref:`cpn_power_module`

.. note::

    #. Connectez le tuyau √† la sortie du moteur, immergez la pompe dans l'eau, puis mettez-la sous tension.
    #. Vous devez vous assurer que le niveau de l'eau est toujours plus haut que le moteur. Un fonctionnement √† vide peut endommager le moteur √† cause de la chaleur g√©n√©r√©e et produire √©galement du bruit.
    #. Si vous arrosez des plantes, veillez √† √©viter que la terre ne soit aspir√©e, car cela pourrait boucher la pompe.
    #. Si l'eau ne sort pas du tuyau, il peut y avoir de l'eau r√©siduelle bloquant le flux d'air dans le tuyau, qu'il faut d'abord √©vacuer.

**Composants Requis**

Dans ce projet, nous aurons besoin des composants suivants.

Il est plus pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - √âL√âMENTS DANS CE KIT
        - LIEN
    *   - Kit Kepler
        - 450+
        - |link_kepler_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - COMPOSANT
        - QUANTIT√â
        - LIEN

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - C√¢ble Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Plusieurs
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_ta6586`
        - 1
        - 
    *   - 6
        - :ref:`cpn_lipo_charger`
        - 1
        -  
    *   - 7
        - Batterie 18650
        - 1
        -  
    *   - 8
        - Support de batterie
        - 1
        -  
    *   - 9
        - :ref:`cpn_pump`
        - 1
        -  

**Sch√©ma**

|sch_pump|

**C√¢blage**

.. note::

    * Comme la pompe n√©cessite un courant √©lev√©, nous utilisons un module chargeur Li-po pour alimenter le moteur par s√©curit√©.
    * Assurez-vous que votre module chargeur Li-po est connect√© comme indiqu√© sur le sch√©ma. Sinon, un court-circuit pourrait endommager la batterie et le circuit.

|wiring_pump|

**Code**

.. note::

    * Ouvrez le fichier ``3.6_pumping.py`` sous le chemin ``kepler-kit-main/micropython`` ou copiez ce code dans Thonny, puis cliquez sur "Run Current Script" ou appuyez simplement sur F5 pour l'ex√©cuter.

    * N'oubliez pas de s√©lectionner l'interpr√©teur "MicroPython (Raspberry Pi Pico)" en bas √† droite.

    * Pour des tutoriels d√©taill√©s, veuillez vous r√©f√©rer √† :ref:`open_run_code_py`.

.. code-block:: python

    import machine
    import utime

    motor1A = machine.Pin(14, machine.Pin.OUT)
    motor2A = machine.Pin(15, machine.Pin.OUT)

    while True:
        motor1A.high()
        motor2A.low()

Apr√®s l'ex√©cution du code, la pompe commence √† fonctionner et vous verrez l'eau couler du tuyau en m√™me temps.

.. note::

    * Si le moteur continue de tourner apr√®s avoir cliqu√© sur le bouton Stop, vous devez r√©initialiser la broche **RUN** du Pico W avec un fil vers GND, puis d√©brancher ce fil pour relancer le code.
    * Cela est d√ª au fait que le moteur consomme un courant √©lev√©, ce qui peut provoquer la d√©connexion du Pico W de l'ordinateur.

    |wiring_run_reset|
