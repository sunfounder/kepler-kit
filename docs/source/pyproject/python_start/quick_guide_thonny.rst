.. note::

    こんにちは、SunFounderのRaspberry Pi & Arduino & ESP32愛好家コミュニティへようこそ！Facebook上でRaspberry Pi、Arduino、ESP32についてもっと深く掘り下げ、他の愛好家と交流しましょう。

    **参加する理由は？**

    - **エキスパートサポート**：コミュニティやチームの助けを借りて、販売後の問題や技術的な課題を解決します。
    - **学び＆共有**：ヒントやチュートリアルを交換してスキルを向上させましょう。
    - **独占的なプレビュー**：新製品の発表や先行プレビューに早期アクセスしましょう。
    - **特別割引**：最新製品の独占割引をお楽しみください。
    - **祭りのプロモーションとギフト**：ギフトや祝日のプロモーションに参加しましょう。

    👉 私たちと一緒に探索し、創造する準備はできていますか？[|link_sf_facebook|]をクリックして今すぐ参加しましょう！

1.5 Thonnyのクイックガイド
==================================

.. _open_run_code_py:

コードを直接開いて実行する
---------------------------------------------

プロジェクトのコードセクションでは、どのコードが使用されているかが正確に示されています。したがって、 ``kepler-kit-main/micropython/`` パス内のシリアル番号がついた ``.py`` ファイルをダブルクリックして開きます。

ただし、最初に :ref:`add_libraries_py` で説明されているように、パッケージをダウンロードしてライブラリをアップロードする必要があります。

#. コードを開く。

    例： ``2.1_hello_led.py``

    ダブルクリックすると、右側に新しいウィンドウが開きます。同時に複数のコードを開くことができます。

    |open_code|

#. 正しいインタプリターを選択

    マイクロUSBケーブルを使用して、Pico Wをコンピューターに接続し、「MicroPython（Raspberry Pi Pico）」インタプリターを選択します。

    |sec_inter|

#. コードを実行する

    スクリプトを実行するには、 **現在のスクリプトを実行** ボタンをクリックするか、F5を押します。

    |run_it|

    コードに出力する必要のある情報が含まれている場合、それはシェルに表示されます。そうでなければ、以下の情報のみが表示されます。

    Thonnyでシェルウィンドウが表示されない場合は、 **表示** -> **編集** をクリックしてシェルウィンドウを開きます。

        .. code-block::

            MicroPython vx.xx on xxxx-xx-xx; Raspberry Pi Pico W  With RP2040

            Type "help()" for more information.
            >>> %Run -c $EDITOR_CONTENT

    * 最初の行はMicroPythonのバージョン、日付、およびデバイス情報を示しています。
    * 2行目は「help()」を入力してヘルプを取得するように促しています。
    * 3行目は、Thonnyからのコマンドで、Pico W上のMicroPythonインタプリターにスクリプトエリアの内容（「EDITOR_CONTENT」）を実行するように指示しています。
    * 3行目以降にメッセージがある場合、通常はMicroPythonに出力するように指示したメッセージか、コードのエラーメッセージです。

#. 実行を停止する

    |stop_it|

    実行中のコードを停止するには、 **Stop/Restartバックエンド** ボタンをクリックします。 **%RUN -c $EDITOR_CONTENT** コマンドは停止後に消えます。

#. 保存または名前を付けて保存する

    開いている例に行った変更を保存するには、 **Ctrl + S** を押すか、Thonnyの **保存** ボタンをクリックします。

    コードは、 **ファイル** -> **名前を付けて保存** をクリックすることで、Raspberry Pi Pico W内の別のファイルとして保存できます。

    |save_as|

    **Raspberry Pi Pico** を選択します。

    |sec_pico|

    ファイル名と拡張子 **.py** を入力した後、 **OK** をクリックします。Raspberry Pi Pico Wドライブに、保存したファイルが表示されます。

    |sec_name|

    .. note::
        コードにどのような名前を付けるかに関わらず、それが何のコードであるかを説明する名前が最良です。意味のない名前（例： ``abc.py`` ）を付けないでください。
        コードを ``main.py`` として保存すると、電源を入れたときに自動的に実行されます。

新しいファイルを作成して実行する
-----------------------------------

コードはコードセクションに直接表示されます。これをThonnyにコピーして次のように実行できます。

#. 新しいファイルを作成する

    Thonny IDEを開き、 **新規作成** ボタンをクリックして新しい空のファイルを作成します。

    |new_file|

#. コードをコピーする

    プロジェクトからThonny IDEにコードをコピーします。

    |copy_file|

#. 正しいインタプリターを選択する

    マイクロUSBケーブルでPico Wをコンピューターに接続し、右下隅で「MicroPython（Raspberry Pi Pico）」インタプリターを選択します。

    |sec_inter|

#. コードを実行して保存する

    実行するには、 **現在のスクリプトを実行** をクリックするか、F5を押してください。コードが保存されていない場合、保存先として **このコンピューター** または **Raspberry Pi Pico** を選ぶポップアップウィンドウが表示されます。

    |where_save|

    .. note::
        Thonnyは、指示した場合にRaspberry Pi Pico Wにプログラムを保存します。したがって、Pico Wを抜いて他の人のコンピューターに接続しても、プログラムはそのままです。

    保存場所を選択し、ファイルに名前を付けて拡張子 **.py** を追加した後、OKをクリックします。

    |sec_name|

    .. note::
        コードにどのような名前を付けるかに関わらず、それが何のコードであるかを説明する名前が最良です。意味のない名前（例： ``abc.py`` ）を付けないでください。
        コードを ``main.py`` として保存すると、電源を入れたときに自動的に実行されます。

    プログラムが保存されると、自動的に実行され、シェルエリアに以下の情報が表示されます。

    Thonnyでシェルウィンドウが表示されない場合は、 **表示** -> **編集** をクリックしてシェルウィンドウを開きます。

    .. code-block::

        MicroPython vx.xx.x on xxxx-xx-xx; Raspberry Pi Pico W With RP2040

        Type "help()" for more information.
        >>> %Run -c $EDITOR_CONTENT

    * 最初の行はMicroPythonのバージョン、日付、およびデバイス情報を示しています。
    * 2行目は「help()」を入力してヘルプを取得するように促しています。
    * 3行目は、Thonnyからのコマンドで、Pico W上のMicroPythonインタプリターにスクリプトエリアの内容（「EDITOR_CONTENT」）を実行するように指示しています。
    * 3行目以降にメッセージがある場合、通常はMicroPythonに出力するように指示したメッセージか、コードのエラーメッセージです。

#. 実行を停止する

    |stop_it|

    実行中のコードを停止するには、 **Stop/Restartバックエンド** ボタンをクリックします。 **%RUN -c $EDITOR_CONTENT** コマンドは停止後に消えます。

#. ファイルを開く

    保存したコードファイルを開くには、2つの方法があります。

    * 第一の方法は、Thonnyのツールバーにある開くアイコンをクリックすることです。プログラムを保存するときと同様に、それを **このコンピューター** から開くか **Raspberry Pi Pico** から開くかを尋ねられます。例えば、 **Raspberry Pi Pico** をクリックすると、Pico Wに保存したすべてのプログラムの一覧が表示されます。
    * 第二の方法は、 **表示** -> **ファイル** -> をクリックして、対応する ``.py`` ファイルをダブルクリックして直接ファイルプレビューを開くことです。

