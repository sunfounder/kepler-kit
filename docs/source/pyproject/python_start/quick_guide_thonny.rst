.. note::

    Bonjour, bienvenue dans la communautÃ© des passionnÃ©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez plus profondÃ©ment dans le monde des Raspberry Pi, Arduino et ESP32 avec d'autres passionnÃ©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : RÃ©solvez les problÃ¨mes post-achat et les dÃ©fis techniques avec l'aide de notre communautÃ© et de notre Ã©quipe.
    - **Apprendre et partager** : Ã‰changez des astuces et des tutoriels pour amÃ©liorer vos compÃ©tences.
    - **Avant-premiÃ¨res exclusives** : BÃ©nÃ©ficiez d'un accÃ¨s anticipÃ© aux annonces de nouveaux produits et aux avant-premiÃ¨res.
    - **RÃ©ductions spÃ©ciales** : Profitez de rÃ©ductions exclusives sur nos derniers produits.
    - **Promotions festives et concours** : Participez Ã  des concours et promotions spÃ©ciales durant les fÃªtes.

    ðŸ‘‰ PrÃªt Ã  explorer et crÃ©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous dÃ¨s aujourd'hui !

1.5 Guide Rapide sur Thonny
==================================

.. _open_run_code_py:

Ouvrir et ExÃ©cuter du Code Directement
---------------------------------------------

La section de code des projets vous indique exactement quel code est utilisÃ©, il suffit donc de double-cliquer sur le fichier ``.py`` avec le numÃ©ro de sÃ©rie dans le chemin ``kepler-kit-main/micropython/`` pour l'ouvrir.

Cependant, vous devez d'abord tÃ©lÃ©charger le package et charger la bibliothÃ¨que, comme dÃ©crit dans :ref:`add_libraries_py`.

#. Ouvrir le code.

    Par exemple, ``2.1_hello_led.py``.

    Si vous double-cliquez dessus, une nouvelle fenÃªtre s'ouvrira sur la droite. Vous pouvez ouvrir plusieurs codes en mÃªme temps.

    |open_code|

#. SÃ©lectionner le bon interprÃ©teur

    Utilisez un cÃ¢ble micro USB pour connecter le Pico W Ã  votre ordinateur et sÃ©lectionnez l'interprÃ©teur "MicroPython (Raspberry Pi Pico)".

    |sec_inter|

#. ExÃ©cuter le code

    Pour exÃ©cuter le script, cliquez sur le bouton **ExÃ©cuter le script actuel** ou appuyez sur F5.

    |run_it|

    Si le code contient des informations Ã  imprimer, elles apparaÃ®tront dans le Shell ; sinon, seule l'information suivante apparaÃ®tra.

    Cliquez sur **Affichage** -> **Modifier** pour ouvrir la fenÃªtre Shell si elle n'apparaÃ®t pas sur votre Thonny.

        .. code-block::

            MicroPython vx.xx on xxxx-xx-xx; Raspberry Pi Pico W  With RP2040

            Type "help()" for more information.
            >>> %Run -c $EDITOR_CONTENT

    * La premiÃ¨re ligne indique la version de MicroPython, la date, et les informations de votre appareil.
    * La deuxiÃ¨me ligne vous invite Ã  entrer "help()" pour obtenir de l'aide.
    * La troisiÃ¨me ligne est une commande de Thonny qui demande Ã  l'interprÃ©teur MicroPython sur votre Pico W d'exÃ©cuter le contenu de la zone de script - "EDITOR_CONTENT".
    * Si un message apparaÃ®t aprÃ¨s la troisiÃ¨me ligne, il s'agit gÃ©nÃ©ralement d'un message que vous avez demandÃ© Ã  MicroPython d'imprimer, ou d'un message d'erreur pour le code.


#. ArrÃªter l'exÃ©cution

    |stop_it|

    Pour arrÃªter l'exÃ©cution du code, cliquez sur le bouton **ArrÃªter/RedÃ©marrer le backend**. La commande **%RUN -c $EDITOR_CONTENT** disparaÃ®tra aprÃ¨s l'arrÃªt.

#. Enregistrer ou enregistrer sous

    Vous pouvez enregistrer les modifications apportÃ©es Ã  l'exemple ouvert en appuyant sur **Ctrl+S** ou en cliquant sur le bouton **Enregistrer** sur Thonny.

    Le code peut Ãªtre enregistrÃ© comme un fichier distinct sur le Raspberry Pi Pico W en cliquant sur **Fichier** -> **Enregistrer sous**.

    |save_as|

    SÃ©lectionnez **Raspberry Pi Pico**.

    |sec_pico|

    Puis cliquez sur **OK** aprÃ¨s avoir entrÃ© le nom du fichier et l'extension **.py**. Sur le lecteur Raspberry Pi Pico W, vous verrez votre fichier enregistrÃ©.

    |sec_name|

    .. note::
        Quel que soit le nom que vous donnez Ã  votre code, il est prÃ©fÃ©rable de dÃ©crire le type de code et de ne pas lui donner un nom inutile comme ``abc.py``.
        Lorsque vous enregistrez le code sous ``main.py``, il s'exÃ©cutera automatiquement au dÃ©marrage.


CrÃ©er un Fichier et l'ExÃ©cuter
------------------------------------


Le code est directement affichÃ© dans la section de code. Vous pouvez le copier dans Thonny et l'exÃ©cuter comme suit.

#. CrÃ©er un nouveau fichier

    Ouvrez Thonny IDE, cliquez sur le bouton **Nouveau** pour crÃ©er un fichier vierge.

    |new_file|

#. Copier le code

    Copiez le code du projet dans Thonny IDE.

    |copy_file|

#. SÃ©lectionner le bon interprÃ©teur

    Branchez le Pico W sur votre ordinateur avec un cÃ¢ble micro USB et sÃ©lectionnez l'interprÃ©teur "MicroPython (Raspberry Pi Pico)" en bas Ã  droite.

    |sec_inter|

#. ExÃ©cuter et enregistrer le code

    Vous devez cliquer sur **ExÃ©cuter le script actuel** ou simplement appuyer sur F5 pour l'exÃ©cuter. Si votre code n'a pas Ã©tÃ© enregistrÃ©, une fenÃªtre apparaÃ®tra vous demandant d'enregistrer sur **Cet ordinateur** ou **Raspberry Pi Pico**.

    |where_save|

    .. note::
        Thonny enregistre votre programme sur le Raspberry Pi Pico W lorsque vous lui demandez, donc si vous dÃ©branchez le Pico W et le connectez Ã  l'ordinateur de quelqu'un d'autre, votre programme reste intact.

    Cliquez sur OK aprÃ¨s avoir sÃ©lectionnÃ© l'emplacement, nommÃ© le fichier et ajoutÃ© l'extension **.py**.

    |sec_name|

    .. note::
        Quel que soit le nom que vous donnez Ã  votre code, il est prÃ©fÃ©rable de dÃ©crire le type de code et de ne pas lui donner un nom inutile comme ``abc.py``.
        Lorsque vous enregistrez le code sous ``main.py``, il s'exÃ©cutera automatiquement au dÃ©marrage.

    Une fois votre programme enregistrÃ©, il s'exÃ©cutera automatiquement et vous verrez les informations suivantes dans la zone Shell.

    Cliquez sur **Affichage** -> **Modifier** pour ouvrir la fenÃªtre Shell si elle n'apparaÃ®t pas sur votre Thonny.

    .. code-block::

        MicroPython vx.xx.x on xxxx-xx-xx; Raspberry Pi Pico W With RP2040

        Type "help()" for more information.
        >>> %Run -c $EDITOR_CONTENT

    * La premiÃ¨re ligne indique la version de MicroPython, la date, et les informations de votre appareil.
    * La deuxiÃ¨me ligne vous invite Ã  entrer "help()" pour obtenir de l'aide.
    * La troisiÃ¨me ligne est une commande de Thonny qui demande Ã  l'interprÃ©teur MicroPython sur votre Pico W d'exÃ©cuter le contenu de la zone de script - "EDITOR_CONTENT".
    * Si un message apparaÃ®t aprÃ¨s la troisiÃ¨me ligne, il s'agit gÃ©nÃ©ralement d'un message que vous avez demandÃ© Ã  MicroPython d'imprimer, ou d'un message d'erreur pour le code.

#. ArrÃªter l'exÃ©cution

    |stop_it|

    Pour arrÃªter l'exÃ©cution du code, cliquez sur le bouton **ArrÃªter/RedÃ©marrer le backend**. La commande **%RUN -c $EDITOR_CONTENT** disparaÃ®tra aprÃ¨s l'arrÃªt.

#. Ouvrir un fichier

    Voici deux faÃ§ons d'ouvrir un fichier de code enregistrÃ©.

    * La premiÃ¨re mÃ©thode consiste Ã  cliquer sur l'icÃ´ne d'ouverture sur la barre d'outils de Thonny. Comme pour l'enregistrement d'un programme, vous serez invitÃ© Ã  choisir si vous souhaitez l'ouvrir depuis **cet ordinateur** ou **Raspberry Pi Pico**, par exemple, cliquez sur **Raspberry Pi Pico** et vous verrez la liste de tous les programmes que vous avez enregistrÃ©s sur le Pico W.
    * La seconde est d'ouvrir directement l'aperÃ§u du fichier en cliquant sur **Affichage** -> **Fichier** -> puis en double-cliquant sur le fichier ``.py`` correspondant pour l'ouvrir.
