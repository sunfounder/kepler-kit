.. note::

    Bonjour, bienvenue dans la communautÃ© des passionnÃ©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez plus profondÃ©ment dans le monde des Raspberry Pi, Arduino et ESP32 avec d'autres passionnÃ©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : RÃ©solvez les problÃ¨mes post-achat et les dÃ©fis techniques avec l'aide de notre communautÃ© et de notre Ã©quipe.
    - **Apprendre et partager** : Ã‰changez des astuces et des tutoriels pour amÃ©liorer vos compÃ©tences.
    - **Avant-premiÃ¨res exclusives** : BÃ©nÃ©ficiez d'un accÃ¨s anticipÃ© aux annonces de nouveaux produits et aux avant-premiÃ¨res.
    - **RÃ©ductions spÃ©ciales** : Profitez de rÃ©ductions exclusives sur nos derniers produits.
    - **Promotions festives et concours** : Participez Ã  des concours et promotions spÃ©ciales durant les fÃªtes.

    ðŸ‘‰ PrÃªt Ã  explorer et crÃ©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous dÃ¨s aujourd'hui !

.. _py_syntax_while:

Boucles While
====================

L'instruction ``while`` est utilisÃ©e pour exÃ©cuter un programme en boucle, c'est-Ã -dire pour rÃ©pÃ©ter une tÃ¢che tant qu'une certaine condition est remplie, permettant de traiter des actions rÃ©currentes.

Sa forme de base est :

.. code-block:: python

    while test expression:
        Body of while


Dans la boucle ``while``, l'``expression de test`` est d'abord vÃ©rifiÃ©e. Seulement si l'``expression de test`` est Ã©valuÃ©e Ã  ``True``, on entre dans le corps de la boucle. AprÃ¨s chaque itÃ©ration, l'``expression de test`` est vÃ©rifiÃ©e Ã  nouveau. Ce processus continue jusqu'Ã  ce que l'``expression de test`` devienne ``False``.

En MicroPython, le corps de la boucle ``while`` est dÃ©fini par l'indentation.

Le corps commence avec une indentation et se termine Ã  la premiÃ¨re ligne non indentÃ©e.

Python interprÃ¨te toute valeur non nulle comme ``True``. None et 0 sont interprÃ©tÃ©s comme ``False``.

**Organigramme de la boucle while**

.. image:: img/while_loop.png



.. code-block:: python

    x = 10

    while x > 0:
        print(x)
        x -= 1

>>> %Run -c $EDITOR_CONTENT
10
9
8
7
6
5
4
3
2
1

Instruction Break
-----------------------

Avec l'instruction break, nous pouvons arrÃªter la boucle mÃªme si la condition du while est vraie :

.. code-block:: python

    x = 10

    while x > 0:
        print(x)
        if x == 6:
            break
        x -= 1

>>> %Run -c $EDITOR_CONTENT
10
9
8
7
6

Boucle While avec Else
---------------------------
Comme avec la boucle ``if``, la boucle ``while`` peut Ã©galement avoir un bloc ``else`` optionnel.

Si la condition dans la boucle ``while`` est Ã©valuÃ©e Ã  ``False``, la partie ``else`` est exÃ©cutÃ©e.

.. code-block:: python

    x = 10

    while x > 0:
        print(x)
        x -= 1
    else:
        print("Game Over")

>>> %Run -c $EDITOR_CONTENT
10
9
8
7
6
5
4
3
2
1
Game Over