.. note::

    Bonjour, bienvenue dans la communautÃ© des passionnÃ©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez plus profondÃ©ment dans le monde des Raspberry Pi, Arduino et ESP32 avec d'autres passionnÃ©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : RÃ©solvez les problÃ¨mes post-achat et les dÃ©fis techniques avec l'aide de notre communautÃ© et de notre Ã©quipe.
    - **Apprendre et partager** : Ã‰changez des astuces et des tutoriels pour amÃ©liorer vos compÃ©tences.
    - **Avant-premiÃ¨res exclusives** : BÃ©nÃ©ficiez d'un accÃ¨s anticipÃ© aux annonces de nouveaux produits et aux avant-premiÃ¨res.
    - **RÃ©ductions spÃ©ciales** : Profitez de rÃ©ductions exclusives sur nos derniers produits.
    - **Promotions festives et concours** : Participez Ã  des concours et promotions spÃ©ciales durant les fÃªtes.

    ðŸ‘‰ PrÃªt Ã  explorer et crÃ©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous dÃ¨s aujourd'hui !

Variables
=============
Les variables sont des conteneurs utilisÃ©s pour stocker des valeurs de donnÃ©es.

CrÃ©er une variable est trÃ¨s simple. Il suffit de lui donner un nom et de lui attribuer une valeur. Vous n'avez pas besoin de spÃ©cifier le type de donnÃ©es de la variable lors de l'affectation, car la variable est une rÃ©fÃ©rence qui accÃ¨de Ã  des objets de diffÃ©rents types de donnÃ©es via l'affectation.

Les noms de variables doivent suivre les rÃ¨gles suivantes :

* Les noms de variables peuvent uniquement contenir des chiffres, des lettres et des underscores.
* Le premier caractÃ¨re du nom de la variable doit Ãªtre une lettre ou un underscore.
* Les noms de variables sont sensibles Ã  la casse.

CrÃ©er une Variable
---------------------
Il n'y a pas de commande pour dÃ©clarer des variables en MicroPython. Les variables sont crÃ©Ã©es lorsque vous leur attribuez une valeur pour la premiÃ¨re fois. Il n'est pas nÃ©cessaire d'utiliser une dÃ©claration de type spÃ©cifique, et vous pouvez mÃªme changer le type aprÃ¨s avoir dÃ©fini la variable.

.. code-block:: python

    x = 8       # x is of type int
    x = "lily" # x is now of type str
    print(x)

>>> %Run -c $EDITOR_CONTENT
lily

Conversion de Type (Casting)
------------------------------------
Si vous souhaitez spÃ©cifier le type de donnÃ©es pour la variable, vous pouvez le faire par conversion (casting).

.. code-block:: python

    x = int(5)    # y will be 5
    y = str(5)    # x will be '5'
    z = float(5)  # z will be 5.0
    print(x,y,z)

>>> %Run -c $EDITOR_CONTENT
5 5 5.0

Obtenir le Type
-------------------
Vous pouvez obtenir le type de donnÃ©es d'une variable avec la fonction `type()`.

.. code-block:: python

    x = 5
    y = "hello"
    z = 5.0
    print(type(x),type(y),type(z))

>>> %Run -c $EDITOR_CONTENT
<class 'int'> <class 'str'> <class 'float'>

Guillemets Simples ou Doubles ?
------------------------------------
En MicroPython, vous pouvez utiliser des guillemets simples ou doubles pour dÃ©finir des variables de chaÃ®ne de caractÃ¨res.

.. code-block:: python

    x = "hello"
    # Ã©quivaut Ã 
    x = 'hello'

SensibilitÃ© Ã  la Casse
--------------------------
Les noms de variables sont sensibles Ã  la casse.

.. code-block:: python

    a = 5
    A = "lily"
    # A ne remplacera pas a
    print(a, A)

>>> %Run -c $EDITOR_CONTENT
5 lily


