.. note::

    こんにちは、SunFounderのRaspberry Pi & Arduino & ESP32愛好家コミュニティへようこそ！Facebook上でRaspberry Pi、Arduino、ESP32についてもっと深く掘り下げ、他の愛好家と交流しましょう。

    **参加する理由は？**

    - **エキスパートサポート**：コミュニティやチームの助けを借りて、販売後の問題や技術的な課題を解決します。
    - **学び＆共有**：ヒントやチュートリアルを交換してスキルを向上させましょう。
    - **独占的なプレビュー**：新製品の発表や先行プレビューに早期アクセスしましょう。
    - **特別割引**：最新製品の独占割引をお楽しみください。
    - **祭りのプロモーションとギフト**：ギフトや祝日のプロモーションに参加しましょう。

    👉 私たちと一緒に探索し、創造する準備はできていますか？[|link_sf_facebook|]をクリックして今すぐ参加しましょう！

$1$2$3$4

変数
========== 
変数はデータ値を格納するためのコンテナです。

変数を作成するのは非常に簡単です。名前を付けて値を割り当てるだけです。変数は参照であり、割り当てを通じて異なるデータ型のオブジェクトにアクセスするので、データ型を指定する必要はありません。

変数の命名には次のルールに従う必要があります：

* 変数名は数字、文字、アンダースコアしか含めることができません
* 変数名の最初の文字は文字またはアンダースコアでなければなりません
* 変数名は大文字と小文字を区別します

変数の作成
------------------ 
MicroPythonには変数を宣言するコマンドはありません。初めて値を割り当てたときに変数が作成されます。特定の型宣言を使用する必要はありませんし、変数を設定した後に型を変更することもできます。

.. code-block:: python

    x = 8       # xはint型です
    x = "lily"  # xは現在str型です
    print(x)

>>> %Run -c $EDITOR_CONTENT
lily

型変換（キャスティング）
--------------------------

変数のデータ型を明示的に指定したい場合は、キャスティングを使用できます。

.. code-block:: python

    x = int(5)    # yは5になります
    y = str(5)    # xは'5'になります
    z = float(5)  # zは5.0になります
    print(x, y, z)

>>> %Run -c $EDITOR_CONTENT
5 5 5.0

型の取得
------------------- 
`type()` 関数を使用して変数のデータ型を取得できます。

.. code-block:: python

    x = 5
    y = "hello"
    z = 5.0
    print(type(x), type(y), type(z))

>>> %Run -c $EDITOR_CONTENT
<class 'int'> <class 'str'> <class 'float'>

シングルクォートかダブルクォートか？
--------------------------------------

MicroPythonでは、文字列変数を定義するためにシングルクォートまたはダブルクォートを使用できます。

.. code-block:: python

    x = "hello"
    # は
    x = 'hello'
    # と同じです

大文字・小文字の区別
---------------------
変数名は大文字と小文字を区別します。

.. code-block:: python

    a = 5
    A = "lily"
    # Aはaを上書きしません
    print(a, A)

>>> %Run -c $EDITOR_CONTENT
5 lily
