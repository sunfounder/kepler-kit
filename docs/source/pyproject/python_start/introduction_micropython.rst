.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

1.1 Einf√ºhrung in MicroPython
======================================

MicroPython ist eine in C geschriebene Software-Implementierung einer Programmiersprache, die weitgehend mit Python 3 kompatibel ist und f√ºr den Betrieb auf Mikrocontrollern optimiert wurde.

MicroPython besteht aus einem Python-Compiler f√ºr Bytecode und einem Laufzeitinterpreter dieses Bytecodes. Dem Benutzer wird eine interaktive Eingabeaufforderung (die REPL) zur Verf√ºgung gestellt, √ºber die sofort unterst√ºtzte Befehle ausgef√ºhrt werden k√∂nnen. Dar√ºber hinaus sind ausgew√§hlte Python-Basisbibliotheken enthalten. MicroPython bietet Module, die dem Programmierer Zugang zur Low-Level-Hardware erm√∂glichen.

* Referenz: `MicroPython - Wikipedia <https://de.wikipedia.org/wiki/MicroPython>`_

Die Geschichte beginnt hier
--------------------------------

Die Dinge √§nderten sich 2013, als Damien George eine Crowdfunding-Kampagne (Kickstarter) startete.

Damien war ein Student der Universit√§t Cambridge und ein begeisterter Roboterprogrammierer. Er wollte die Welt von Python von einer Gigabyte-Maschine auf einen Kilobyte verkleinern. Seine Kickstarter-Kampagne sollte seine Entwicklungsarbeit unterst√ºtzen, w√§hrend er seinen Prototyp in eine fertige Implementierung verwandelte.

MicroPython wird von einer vielf√§ltigen Pythonista-Gemeinschaft unterst√ºtzt, die ein gro√ües Interesse am Erfolg des Projekts hat.

Neben dem Testen und Unterst√ºtzen des Codebasis stellten die Entwickler Tutorials, Codebibliotheken und Hardware-Portierungen bereit, sodass Damien sich auf andere Aspekte des Projekts konzentrieren konnte.

* Referenz: `realpython <https://realpython.com/micropython/>`_

Warum MicroPython?
------------------

Obwohl die urspr√ºngliche Kickstarter-Kampagne MicroPython als Entwicklungsboard "pyboard" mit STM32F4 herausbrachte, unterst√ºtzt MicroPython viele ARM-basierte Produktarchitekturen. Zu den haupts√§chlich unterst√ºtzten Ports geh√∂ren ARM Cortex-M (viele STM32-Boards, TI CC3200/WiPy, Teensy-Boards, Nordic nRF-Serie, SAMD21 und SAMD51), ESP8266, ESP32, 16-Bit-PIC, Unix, Windows, Zephyr und JavaScript. 
Zweitens erm√∂glicht MicroPython schnelles Feedback, da man REPL f√ºr interaktive Befehlseingaben nutzen und sofortige Antworten erhalten kann. Man kann sogar Code anpassen und ihn sofort ausf√ºhren, anstatt den Code-Kompilieren-Hochladen-Ausf√ºhren-Zyklus zu durchlaufen.

W√§hrend Python dieselben Vorteile bietet, sind einige Mikrocontrollerboards wie der Raspberry Pi Pico klein, einfach und haben wenig Speicher, um die Python-Sprache √ºberhaupt auszuf√ºhren. Deshalb hat sich MicroPython weiterentwickelt, hat die wichtigsten Python-Funktionen beibehalten und eine Reihe neuer Funktionen hinzugef√ºgt, um mit diesen Mikrocontrollerboards zu arbeiten.

Als N√§chstes lernen Sie, wie Sie MicroPython auf den Raspberry Pi Pico installieren k√∂nnen.

* Referenz: `MicroPython - Wikipedia <https://de.wikipedia.org/wiki/MicroPython>`_
* Referenz: `realpython <https://realpython.com/micropython/>`_

