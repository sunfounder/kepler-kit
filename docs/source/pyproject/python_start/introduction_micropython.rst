.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez plus profond√©ment dans le monde des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes post-achat et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Avant-premi√®res exclusives** : B√©n√©ficiez d'un acc√®s anticip√© aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et concours** : Participez √† des concours et promotions sp√©ciales durant les f√™tes.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

1.1 Introduction √† MicroPython
======================================

MicroPython est une impl√©mentation logicielle d'un langage de programmation largement compatible avec Python 3, √©crite en C, et optimis√©e pour fonctionner sur un microcontr√¥leur.

MicroPython se compose d'un compilateur Python en bytecode et d'un interpr√©teur qui ex√©cute ce bytecode. L'utilisateur dispose d'un invite interactive (le REPL) pour ex√©cuter imm√©diatement les commandes prises en charge. MicroPython inclut une s√©lection de biblioth√®ques Python de base et des modules permettant d'acc√©der au mat√©riel √† bas niveau.

* R√©f√©rence : `MicroPython - Wikipedia <https://en.wikipedia.org/wiki/MicroPython>`_

L'histoire commence ici
--------------------------------

Tout a chang√© en 2013 lorsque Damien George a lanc√© une campagne de financement participatif (Kickstarter).

Damien √©tait √©tudiant √† l'universit√© de Cambridge et passionn√© de programmation robotique. Il souhaitait r√©duire le monde de Python d'une machine de gigaoctets √† un kilooctet. Sa campagne Kickstarter visait √† soutenir son d√©veloppement pendant qu'il transformait sa preuve de concept en une impl√©mentation finalis√©e.

MicroPython est soutenu par une communaut√© diversifi√©e de Pythonistes qui ont un int√©r√™t marqu√© pour le succ√®s du projet.

En plus de tester et de soutenir la base de code, les d√©veloppeurs ont fourni des tutoriels, des biblioth√®ques de code et du portage mat√©riel, ce qui a permis √† Damien de se concentrer sur d'autres aspects du projet.

* R√©f√©rence : `realpython <https://realpython.com/micropython/>`_


Pourquoi MicroPython ?
----------------------------

Bien que la campagne Kickstarter originale ait lanc√© MicroPython sous forme de carte de d√©veloppement "pyboard" avec STM32F4, MicroPython prend en charge de nombreuses architectures de produits bas√©es sur ARM. Les ports pris en charge en ligne principale incluent ARM Cortex-M (nombreuses cartes STM32, TI CC3200/WiPy, cartes Teensy, s√©rie Nordic nRF, SAMD21 et SAMD51), ESP8266, ESP32, PIC 16 bits, Unix, Windows, Zephyr et JavaScript.
Ensuite, MicroPython permet une r√©troaction rapide. Cela est d√ª au fait que vous pouvez utiliser le REPL pour entrer des commandes de mani√®re interactive et obtenir des r√©ponses imm√©diates. Vous pouvez m√™me modifier le code et l'ex√©cuter instantan√©ment au lieu de passer par le cycle code-compilation-t√©l√©versement-ex√©cution.

Bien que Python offre les m√™mes avantages, certaines cartes de microcontr√¥leur comme le Raspberry Pi Pico sont petites, simples et ont peu de m√©moire pour ex√©cuter le langage Python. C'est pourquoi MicroPython a √©volu√©, en conservant les principales fonctionnalit√©s de Python et en ajoutant de nouvelles pour fonctionner avec ces cartes de microcontr√¥leurs.

Ensuite, vous apprendrez √† installer MicroPython sur le Raspberry Pi Pico.

* R√©f√©rence : `MicroPython - Wikipedia <https://en.wikipedia.org/wiki/MicroPython>`_
* R√©f√©rence : `realpython <https://realpython.com/micropython/>`_

