.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts sur Facebook ! Plongez plus profond√©ment dans le monde du Raspberry Pi, de l'Arduino et de l'ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-go√ªts.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et tirages au sort** : Participez √† des promotions sp√©ciales et √† des concours.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _play_sc:

9. Jouer avec le contr√¥leur @SunFounder
===========================================

Dans ce projet, vous apprendrez √† cr√©er un projet √† distance en utilisant l'application Sunfounder Controller.
Dans un environnement LAN, vous pouvez contr√¥ler votre circuit Pico W avec votre t√©l√©phone ou votre tablette.
Vous trouverez cette application tr√®s utile si vous souhaitez construire un robot simple avec le Pico W.

Ici, nous utiliserons la barre de curseur de l'application pour contr√¥ler l'angle du servo et le manom√®tre de l'application pour afficher la distance d√©tect√©e par le capteur ultrasonique.

**1. Composants requis**

Dans ce projet, nous avons besoin des composants suivants.

Il est d√©finitivement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kepler Kit
        - 450+
        - |link_kepler_kit|

Vous pouvez √©galement les acheter s√©par√©ment √† partir des liens ci-dessous.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - COMPOSANT
        - QUANTIT√â
        - LIEN

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - C√¢ble Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Plusieurs
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_servo`
        - 1
        - |link_servo_buy|
    *   - 6
        - :ref:`cpn_ultrasonic`
        - 1
        - |link_ultrasonic_buy|
    *   - 7
        - :ref:`cpn_lipo_charger`
        - 1
        -  
    *   - 8
        - Batterie 18650
        - 1
        -  
    *   - 9
        - Support de batterie
        - 1
        -  

**2. Construire le circuit**

.. warning::

    Assurez-vous que votre module de charge Li-po est connect√© comme indiqu√© sur le sch√©ma. Sinon, un court-circuit pourrait endommager votre batterie et votre circuit.

.. image:: img/wiring/9.sc_bb.png
    :width: 800


**3. Configurer le contr√¥leur SunFounder**

1. Installez `SunFounder Controller APP <https://docs.sunfounder.com/projects/sf-controller/en/latest/>`_ depuis l'**APP Store (iOS)** ou **Google Play (Android)**.

2. Ouvrez l'application et cliquez sur le bouton **+** sur la page d'accueil pour cr√©er un contr√¥leur.

    .. image:: img/sc-a-2.jpg
        :width: 800

3. Ici, nous choisissons **Blank** et **Dual Stick**.

    .. image:: img/sc-a-3.jpg
        :width: 800

4. Vous obtenez maintenant un contr√¥leur vide.

    .. image:: img/sc-a-4.jpg
        :width: 800

5. Cliquez sur la zone **H** et ajoutez un widget **Slider**.

    .. image:: img/sc-a-5.jpg
        :width: 800

6. Cliquez sur l'engrenage du contr√¥le pour ouvrir la fen√™tre des param√®tres.

    .. image:: img/sc-a-6.png
        :width: 300

7. R√©glez Maximum √† 180 et Minimum √† 0, puis cliquez sur **Confirmer**.

    .. image:: img/sc-a-7.jpg
        :width: 800

8. Cliquez sur la zone L et ajoutez un widget Gauge.

    .. image:: img/sc-a-8.jpg
        :width: 800

9. Cliquez sur l'engrenage du Gauge, ouvrez la fen√™tre des param√®tres, r√©glez Maximum √† 100, Minimum √† 0 et unit√© √† cm.

    .. image:: img/sc-a-9.jpg
        :width: 800

10. Apr√®s avoir termin√© les r√©glages des widgets, cliquez sur Sauvegarder.

    .. image:: img/sc-a-10.png
        :width: 300

**4. Ex√©cuter le code**

.. note:: 
    Si votre Pico W utilise actuellement le firmware Anvil, vous devrez :ref:`install_micropython_on_pico`.

1. T√©l√©chargez ``ws.py`` et ``websocket_helper.py`` depuis le chemin ``kepler-kit-main/libs`` vers le Raspberry Pi Pico W.

    .. image:: img/9_sc3.png

2. Double-cliquez sur le script ``ws.py`` et renseignez les ``SSID`` et ``PASSWORD`` de votre r√©seau Wi-Fi.

    .. image:: img/9_sc1.png

3. Ouvrez ``9_sunfounder_controller.py`` dans le chemin ``kepler-kit-main/iot``. Cliquez sur le bouton **Run current script** ou appuyez sur F5 pour l'ex√©cuter. Apr√®s une connexion r√©ussie, vous verrez l'adresse IP de Pico W.

    .. image:: img/9_sc2.png

    .. note::
        Si vous souhaitez que ce script se lance au d√©marrage, vous pouvez le sauvegarder sur le Raspberry Pi Pico W en tant que ``main.py``.

4. Retournez sur l'application SunFounder Controller et cliquez sur le bouton **Connect**.

    .. image:: img/sc-c-4.jpg
        :width: 300

5. Si Pico W est d√©tect√©, touchez-le directement pour vous connecter.

    .. image:: img/sc-c-5.jpg
        :width: 300

6. S'il ne se connecte pas automatiquement, vous pouvez aussi entrer manuellement l'adresse IP pour vous connecter.

    .. image:: img/sc-c-6.png
        :width: 800

7. Lorsque vous faites glisser la barre de curseur dans la zone H apr√®s avoir cliqu√© sur le bouton Run, le servo ajustera son angle. Le manom√®tre dans la zone L affichera la distance si votre main se trouve √† moins de 100 cm du capteur ultrasonique.

    .. image:: img/sc-c-8.jpg
        :width: 300

**Comment √ßa marche ?**

La classe ``WS_Server`` dans la biblioth√®que ``ws.py`` permet de communiquer avec l'application. Voici le cadre pour impl√©menter sa fonctionnalit√© de base.

.. code-block:: python

    from ws import WS_Server
    import json
    import time

    ws = WS_Server(8765) # init websocket 

    def main():
        ws.start()
        while True:
            status,result=ws.transfer()
            time.sleep_ms(100)

    try:
        main()
    finally:
        ws.stop()

Tout d'abord, nous devons cr√©er un objet ``WS_Server``.

.. code-block:: python

    ws = WS_Server(8765) 

Lancer le serveur.

.. code-block:: python

    ws.start()

Ensuite, une boucle ``while True`` est utilis√©e pour effectuer le transfert de donn√©es entre Pico W et l'application SunFounder Controller.

.. code-block:: python

    while True:
        # transfert des donn√©es via websocket
        status, result = ws.transfer()

        # √©tat du transfert de donn√©es
        print(status)

        # donn√©es re√ßues
        print(result)

        # donn√©es envoy√©es
        print(ws.send_dict)
        
        time.sleep_ms(100)

``status`` est ``False`` si la r√©ception des donn√©es de l'application √©choue.

Et ``result`` contient les donn√©es que Pico W a r√©cup√©r√©es depuis l'application. 
En les affichant, vous verrez quelque chose comme ceci, qui repr√©sente les valeurs de toutes les zones des widgets.

.. code-block:: 

    {'C': None, 'B': None, 'M': None,,,,, 'A': None, 'R': None}

Dans cet exemple, nous imprimons les valeurs de la zone H s√©par√©ment et les utilisons pour contr√¥ler le circuit.

.. code-block:: python

        status,result=ws.transfer()
        #print(result)
        if status == True:
            print(result['H'])


Le dictionnaire ``ws.send_dict`` contient les donn√©es que Pico W envoie √† l'application SunFounder Controller. Il est cr√©√© dans la classe ``WS_Server`` et est envoy√© lorsque ``ws.transfer()`` est ex√©cut√©.

Le message est illustr√© ci-dessous.

.. code-block:: python

    {'Check': 'SunFounder Controller', 'Name': 'PicoW', 'Type': 'Blank'}

C'est un message vierge, pour copier les donn√©es sur le widget de l'application, nous devons attribuer une valeur √† la zone correspondante du dictionnaire. Par exemple, attribuer la valeur ``50`` √† la zone L.

.. code-block:: python

        ws.send_dict['L'] = 50

Les donn√©es appara√Ætront ainsi :

.. code-block:: python

    {'L': 50, 'Type': 'Blank', 'Name': 'PicoW', 'Check': 'SunFounder Controller'}


Pour plus de d√©tails sur l'utilisation de SunFounder Controller, veuillez consulter `SunFounder Controller APP <https://docs.sunfounder.com/projects/sf-controller/en/latest/>`_.
