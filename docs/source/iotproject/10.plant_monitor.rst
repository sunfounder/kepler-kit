.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi & Arduino & ESP32 sur Facebook ! Plongez au c≈ìur de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et concours** : Participez √† des concours et des promotions de vacances.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

10. Moniteur de Plantes avec @SunFounder Controller
=====================================================

Avec ce projet, vous apprendrez √† construire un syst√®me d'arrosage pour plantes en utilisant l'application SunFounder Controller.

Dans l'application, vous pouvez v√©rifier la temp√©rature et l'humidit√© actuelles de l'environnement, ainsi que le niveau d'eau des plantes en pot. 
Pour arroser les plantes, vous pouvez √©galement cliquer sur un bouton dans l'application.


**Composants n√©cessaires**

Dans ce projet, nous avons besoin des composants suivants.

Il est tr√®s pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - √âL√âMENTS DANS CE KIT
        - LIEN
    *   - Kit Kepler	
        - 450+
        - |link_kepler_kit|

Vous pouvez √©galement les acheter s√©par√©ment avec les liens ci-dessous.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - COMPOSANT	
        - QUANTIT√â
        - LIEN

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - C√¢ble Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Plusieurs
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_dht11`
        - 1
        - |link_dht22_buy|
    *   - 6
        - :ref:`cpn_water_level`
        - 1
        - 
    *   - 7
        - :ref:`cpn_ta6586`
        - 1
        - 
    *   - 8
        - :ref:`cpn_lipo_charger`
        - 1
        -  
    *   - 9
        - Batterie 18650
        - 1
        -  
    *   - 10
        - Support de batterie
        - 1
        -  
    *   - 11
        - :ref:`cpn_pump`
        - 1
        -  

**√âtapes**

.. note::
    Il est recommand√© de compl√©ter le projet pr√©c√©dent :ref:`play_sc`, car cela vous aidera √† vous familiariser avec l'utilisation de base de l'application SunFounder Controller.

#. Construisez le circuit.

    .. image:: img/wiring/10.sc_2_bb.png

#. Cr√©ez un nouveau contr√¥leur, ajoutez les widgets suivants et modifiez leurs noms.

    .. image:: img/10_plant2.jpg
        :width: 800

#. Ouvrez ``10_plant_monitor.py`` dans le chemin ``kepler-kit-main/iot``. Cliquez sur le bouton **Run current script** ou appuyez sur F5 pour l'ex√©cuter. Apr√®s une connexion r√©ussie, vous verrez l'adresse IP de Pico W.

    .. image:: img/10_plant_monitor.png

#. Retournez √† l'application SunFounder, cliquez sur Run apr√®s vous √™tre connect√© au Pico W. Dans l'application, vous pourrez voir la temp√©rature et l'humidit√© de l'environnement, ainsi que le niveau d'eau de la plante en pot. Vous pouvez cliquer sur le bouton pour arroser la plante pendant cinq secondes si vous pensez qu'elle manque d'eau.

    .. image:: img/10_plant2.jpg
        :width: 800

#. Si vous souhaitez que ce script se lance au d√©marrage, vous pouvez le sauvegarder sur le Raspberry Pi Pico W en tant que ``main.py``.



**Comment √ßa marche ?**

Ce projet fonctionne essentiellement de la m√™me mani√®re que :ref:`play_sc`.

En plus, le projet utilise √©galement le DHT11, la pompe et le module de niveau d'eau. Vous pouvez voir les d√©tails d'utilisation de ces composants dans :ref:`py_dht11`, :ref:`py_pump`, :ref:`py_water`.
