.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

10. Pflanzen√ºberwachung mit dem @SunFounder Controller
========================================================

In diesem Projekt lernen Sie, wie Sie mit der Sunfounder Controller-App ein automatisches Bew√§sserungssystem f√ºr Pflanzen aufbauen k√∂nnen.

In der App k√∂nnen Sie die aktuelle Temperatur und Luftfeuchtigkeit der Umgebung sowie den Wasserstand in den Blument√∂pfen √ºberpr√ºfen. Zum Gie√üen der Pflanzen k√∂nnen Sie ebenfalls den Button in der App dr√ºcken.

**Ben√∂tigte Komponenten**

F√ºr dieses Projekt ben√∂tigen wir die folgenden Bauteile.

Es ist nat√ºrlich bequem, ein ganzes Set zu kaufen. Hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name
        - ELEMENTE IN DIESEM SET
        - LINK
    *   - Kepler-Kit
        - 450+
        - |link_kepler_kit|

Sie k√∂nnen die Einzelteile auch √ºber die folgenden Links separat erwerben.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - KOMPONENTE
        - ANZAHL
        - LINK

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - Micro-USB-Kabel
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Mehrere
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_dht11`
        - 1
        - |link_dht22_buy|
    *   - 6
        - :ref:`cpn_water_level`
        - 1
        - 
    *   - 7
        - :ref:`cpn_ta6586`
        - 1
        - 
    *   - 8
        - :ref:`cpn_lipo_charger`
        - 1
        -  
    *   - 9
        - 18650 Batterie
        - 1
        -  
    *   - 10
        - Batteriehalter
        - 1
        -  
    *   - 11
        - :ref:`cpn_pump`
        - 1
        -  

**Ablauf**

.. note::
    Es wird empfohlen, das vorherige Projekt :ref:`play_sc` abzuschlie√üen, da es Ihnen den grundlegenden Umgang mit dem SunFounder Controller n√§herbringt.

#. Verdrahten Sie den Schaltkreis.

    .. image:: img/wiring/10.sc_2_bb.png

#. Erstellen Sie einen neuen Controller, f√ºgen Sie die folgenden Widgets hinzu und √§ndern Sie deren Namen.

    .. image:: img/10_plant2.jpg
        :width: 800

#. √ñffnen Sie die Datei ``10_plant_monitor.py`` im Pfad ``kepler-kit-main/iot``. Klicken Sie auf die Schaltfl√§che **Aktuelles Skript ausf√ºhren** oder dr√ºcken Sie F5, um es zu starten. Nach erfolgreicher Verbindung wird die IP von Pico W angezeigt.

    .. image:: img/10_plant_monitor.png

#. Kehren Sie zur SunFounder-App zur√ºck und klicken Sie auf "Start", nachdem Sie sich mit PicoW verbunden haben. In der App k√∂nnen Sie die Temperatur und Luftfeuchtigkeit der Umgebung sowie den Wasserstand der Topfpflanze sehen. Wenn Sie der Meinung sind, dass die Pflanze mehr Wasser ben√∂tigt, k√∂nnen Sie den Button dr√ºcken, um sie f√ºr f√ºnf Sekunden zu bew√§ssern.

    .. image:: img/10_plant2.jpg
        :width: 800

#. Wenn Sie m√∂chten, dass dieses Skript automatisch startet, k√∂nnen Sie es als ``main.py`` auf dem Raspberry Pi Pico W speichern.

**Wie funktioniert das Ganze?**

Dieses Projekt funktioniert im Grunde genommen genauso wie :ref:`play_sc`.

Zus√§tzlich verwendet das Projekt auch den DHT11, eine Pumpe und ein Wasserstandmodul. Details zur Verwendung dieser Komponenten finden Sie unter :ref:`py_dht11`, :ref:`py_pump`, :ref:`py_water`.
