.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino & ESP32 sur Facebook ! Explorez en profondeur le Raspberry Pi, l'Arduino et l'ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Avant-premi√®res exclusives** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus exclusifs.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos nouveaux produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et promotions sp√©ciales.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _iot_access:

1. Acc√®s au R√©seau
===========================

Le Raspberry Pi Pico W est tr√®s similaire au Raspberry Pi Pico, avec les m√™mes GPIO, port microUSB et dimensions. La seule diff√©rence est l'ajout de la puce Wi-Fi CYW43439 2,4 GHz d'Infineon. Voyons maintenant comment il se connecte √† notre r√©seau Wi-Fi.

**Composants requis**

Pour ce projet, nous aurons besoin des composants suivants.

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - DANS CE KIT
        - LIEN
    *   - Kepler Kit	
        - 450+
        - |link_kepler_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - COMPOSANT	
        - QUANTIT√â
        - LIEN

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - C√¢ble Micro USB
        - 1
        - 

1. Connexion √† Internet
------------------------------------

Avec seulement cinq lignes de MicroPython, notre Raspberry Pi Pico W se connecte joyeusement √† Internet.

Ces 5 lignes de code peuvent √™tre ex√©cut√©es directement depuis le Shell, en appuyant sur ``Enter`` apr√®s les avoir tap√©es. 
Ou r√©f√©rez-vous √† la m√©thode suivante et cr√©ez un nouveau fichier ``.py`` pour les ex√©cuter.

.. code-block:: python

    import network
    wlan = network.WLAN(network.STA_IF)
    wlan.active(True)
    wlan.connect("SSID","PASSWORD")
    print(wlan.isconnected())

#. Cr√©ez un nouveau script en cliquant sur le bouton **New** dans Thonny, copiez et collez le code ci-dessus, en changeant ``SSID`` et ``PASSWORD`` par les v√¥tres.

    .. image:: img/access1.png

#. Pour ex√©cuter le script, cliquez sur le bouton **Run current script** ou appuyez sur F5. Si la connexion est r√©ussie, ``true`` s'affichera.

    .. note::

        Assurez-vous que le Raspberry Pi Pico W est connect√© √† l'ordinateur via un c√¢ble USB, puis cliquez en bas √† droite pour s√©lectionner MicroPython (Raspberry Pi Pico).COMXxx comme interpr√©teur.

    .. image:: img/access2.png

2. Gestion des d√©lais et affichage de l'IP
-----------------------------------------------


En tenant compte de certaines conditions r√©seau m√©diocres, ajoutons une gestion de d√©lai au code.

Si la connexion est r√©ussie, l'IP du Pico W s'affichera apr√®s avoir copi√© et ex√©cut√© le script.

.. code-block:: python

    import network
    import time

    wlan = network.WLAN(network.STA_IF)
    wlan.active(True)
    wlan.connect("SSID","PASSWORD")

    # Attendre la connexion ou l'√©chec
    wait = 10
    while wait > 0:
        if wlan.status() < 0 or wlan.status() >= 3:
            break
        wait -= 1
        print('waiting for connection...')
        time.sleep(1)

    # G√©rer l'erreur de connexion
    if wlan.status() != 3:
        raise RuntimeError('wifi connection failed')
    else:
        print('connected')
        print('IP: ', wlan.ifconfig()[0])

.. image:: img/access3.png

* Fonction ``wlan.status()`` : Renvoie le statut actuel de la connexion sans fil, la valeur retourn√©e est indiqu√©e dans le tableau ci-dessous.

    .. list-table::
        :widths: 40 10 50

        * - Statut
          - Valeur
          - Description
        * - STAT_IDLE 
          - 0 
          - pas de connexion et aucune activit√©,
        * - STAT_CONNECTING 
          - 1 
          - connexion en cours,
        * - STAT_WRONG_PASSWORD 
          - -3 
          - √©chec en raison d'un mot de passe incorrect,
        * - STAT_NO_AP_FOUND 
          - -2 
          - √©chec car aucun point d'acc√®s n'a r√©pondu,
        * - STAT_CONNECT_FAIL 
          - -1 
          - √©chec pour d'autres raisons,
        * - STAT_GOT_IP 
          - 3 
          - connexion r√©ussie.

* Fonction ``wlan.ifconfig()`` : Obtient les adresses IP, les masques de sous-r√©seau, les passerelles et les serveurs DNS. Cette m√©thode retourne un tuple contenant ces informations. Dans ce cas, nous n'affichons que l'adresse IP.

*  `class WLAN ‚Äì MicroPython Docs <https://docs.micropython.org/en/latest/library/network.WLAN.html>`_

.. _create_secrets:

3. Enregistrer les informations priv√©es dans ``secrets.py``
----------------------------------------------------------------

Lorsque vous partagez votre projet Pico W, vous ne voulez probablement pas que d'autres voient votre mot de passe Wi-Fi ou votre cl√© API.
Pour une meilleure s√©curit√©, nous pouvons cr√©er un fichier ``secrets.py`` pour stocker vos informations priv√©es.

#. Copiez le code suivant dans un nouveau fichier script sur Thonny. N'oubliez pas de changer ``SSID`` et ``PASSWORD`` par les v√¥tres.

    .. code-block:: python

        secrets = {
        'ssid': 'SSID',
        'password': 'PASSWORD',
        }

#. Choisissez Raspberry Pi Pico dans la fen√™tre qui appara√Æt lorsque vous cliquez sur le bouton Save ou appuyez sur ``Ctrl+S``.

    .. image:: img/access4.png

#. Nommez le fichier ``secrets.py``.

    .. image:: img/access5.png

#. Vous verrez maintenant ce script dans votre Raspberry Pi Pico W.

    .. image:: img/access6.png

#. Dans d'autres scripts, vous pouvez l'appeler comme suit. Si vous l'ex√©cutez, vous verrez une connexion Wi-Fi r√©ussie. Le fichier ``secrets.py`` est import√© en tant que biblioth√®que, vous n'avez donc pas √† vous soucier de la fuite d'informations.

    .. code-block:: python
        :emphasize-lines: 3,7

        import network
        import time
        from secrets import secrets

        wlan = network.WLAN(network.STA_IF)
        wlan.active(True)
        wlan.connect(secrets['ssid'], secrets['password'])

        # Attendre la connexion ou l'√©chec
        wait = 10
        while wait > 0:
            if wlan.status() < 0 or wlan.status() >= 3:
                break
            wait -= 1
            print('waiting for connection...')
            time.sleep(1)

        # G√©rer l'erreur de connexion
        if wlan.status() != 3:
            raise RuntimeError('wifi connection failed')
        else:
            print('connected')
            print('IP: ', wlan.ifconfig()[0])

    .. image:: img/access8.png

.. _do_connect:

4. Connectez-vous √† Internet via ``do_connect.py``
--------------------------------------------------------------

√âtant donn√© que chacun de nos prochains projets n√©cessitera une connexion r√©seau, pourquoi ne pas cr√©er un nouveau fichier ``do_connect.py`` et y √©crire les fonctions pertinentes pour les r√©utiliser, ce qui simplifiera consid√©rablement le code des projets complexes.

#. Copiez le code suivant dans un nouveau fichier script et enregistrez-le dans le Raspberry Pi Pico sous le nom ``do_connect.py``.

    .. code-block:: python

        import network
        import time
        from secrets import *

        def do_connect(ssid=secrets['ssid'],psk=secrets['password']):
            wlan = network.WLAN(network.STA_IF)
            wlan.active(True)
            wlan.connect(ssid, psk)

            # Attendre la connexion ou l'√©chec
            wait = 10
            while wait > 0:
                if wlan.status() < 0 or wlan.status() >= 3:
                    break
                wait -= 1
                print('waiting for connection...')
                time.sleep(1)

            # G√©rer l'erreur de connexion
            if wlan.status() != 3:
                raise RuntimeError('wifi connection failed')
            else:
                print('connected')
                ip=wlan.ifconfig()[0]
                print('network config: ', ip)
                return ip

    .. image:: img/access7.png

#. En l'appelant dans d'autres scripts de la mani√®re suivante, le Raspberry Pi Pico W se connectera au r√©seau.

    .. code-block:: python

        from do_connect import *
        do_connect()


.. https://www.tomshardware.com/reviews/raspberry-pi-pico-w
