.. note::

    ¬°Hola! Bienvenido a la Comunidad de Entusiastas de SunFounder para Raspberry Pi, Arduino y ESP32 en Facebook. Sum√©rgete en el mundo de Raspberry Pi, Arduino y ESP32 junto a otros entusiastas.

    **¬øPor qu√© unirse?**

    - **Soporte Experto**: Resuelve problemas posventa y desaf√≠os t√©cnicos con la ayuda de nuestra comunidad y equipo.
    - **Aprende y Comparte**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Previsualizaciones Exclusivas**: Obt√©n acceso anticipado a anuncios de nuevos productos y adelantos exclusivos.
    - **Descuentos Especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s recientes.
    - **Promociones Festivas y Sorteos**: Participa en sorteos y promociones de temporada.

    üëâ ¬øListo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y √∫nete hoy.

.. _iot_access:

1. Acceso a la Red
===========================

Raspberry Pi Pico W es muy similar a Raspberry Pi Pico, con el mismo GPIO, 
puerto microUSB y tama√±o. La √∫nica diferencia es la adici√≥n del chip Wi-Fi 
CYW43439 de 2,4 GHz de Infineon. Veamos c√≥mo se conecta a nuestra red Wi-Fi.

**Componentes Requeridos**

Para este proyecto, necesitamos los siguientes componentes.

Es conveniente adquirir el kit completo, aqu√≠ est√° el enlace: 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nombre	
        - COMPONENTES DEL KIT
        - ENLACE
    *   - Kit Kepler	
        - 450+
        - |link_kepler_kit|

Tambi√©n puedes comprarlos por separado a trav√©s de los enlaces a continuaci√≥n.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - N.¬∫
        - COMPONENTE	
        - CANTIDAD
        - ENLACE

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - Cable Micro USB
        - 1
        - 

1. Conexi√≥n a Internet
------------------------------------

Con solo cinco l√≠neas de c√≥digo en MicroPython, nuestra Raspberry Pi Pico W puede conectarse a Internet.

Estas 5 l√≠neas de c√≥digo pueden ejecutarse directamente en la consola, presionando ``Enter`` despu√©s de escribir cada l√≠nea. O sigue el siguiente m√©todo y crea un nuevo archivo ``.py`` para ejecutarlo.

.. code-block:: python

    import network
    wlan = network.WLAN(network.STA_IF)
    wlan.active(True)
    wlan.connect("SSID","PASSWORD")
    print(wlan.isconnected())

#. Crea un nuevo script haciendo clic en el bot√≥n **Nuevo** en Thonny y copia el c√≥digo anterior, cambiando ``SSID`` y ``PASSWORD`` por los tuyos.

    .. image:: img/access1.png

#. Para ejecutar el script, haz clic en el bot√≥n **Ejecutar script actual** o presiona F5. Si la conexi√≥n es exitosa, se imprimir√° ``true``. 

    .. note::

        Aseg√∫rate de que la Raspberry Pi Pico W est√© conectada a la computadora mediante un cable USB y selecciona MicroPython (Raspberry Pi Pico).COMXxx como int√©rprete en la esquina inferior derecha.

    .. image:: img/access2.png


2. Evaluaci√≥n de Tiempo de Espera y Muestra de IP
----------------------------------------------------


Considerando condiciones de red deficientes, a√±adiremos una evaluaci√≥n de tiempo de espera al c√≥digo.

Si la conexi√≥n es exitosa, se mostrar√° la IP de la Pico W despu√©s de ejecutar el script.

.. code-block:: python

    import network
    import time

    wlan = network.WLAN(network.STA_IF)
    wlan.active(True)
    wlan.connect("SSID","PASSWORD")

    # Espera hasta conectar o fallar
    wait = 10
    while wait > 0:
        if wlan.status() < 0 or wlan.status() >= 3:
            break
        wait -= 1
        print('waiting for connection...')
        time.sleep(1)

    # Manejo de error de conexi√≥n
    if wlan.status() != 3:
        raise RuntimeError('wifi connection failed')
    else:
        print('connected')
        print('IP: ', wlan.ifconfig()[0])

.. image:: img/access3.png

* Funci√≥n ``wlan.status()``: Devuelve el estado actual de la conexi√≥n inal√°mbrica, el valor devuelto se muestra en la tabla a continuaci√≥n.

    .. list-table::
        :widths: 40 10 50

        * - Estado
          - Valor
          - Descripci√≥n
        * - STAT_IDLE 
          - 0 
          - sin conexi√≥n ni actividad,
        * - STAT_CONNECTING 
          - 1 
          - en progreso de conexi√≥n,
        * - STAT_WRONG_PASSWORD 
          - -3 
          - fallo debido a contrase√±a incorrecta,
        * - STAT_NO_AP_FOUND 
          - -2 
          - fallo porque ning√∫n punto de acceso respondi√≥,
        * - STAT_CONNECT_FAIL 
          - -1 
          - fallo por otros problemas,
        * - STAT_GOT_IP 
          - 3 
          - conexi√≥n exitosa.

* Funci√≥n ``wlan.ifconfig()``: Obtiene direcciones IP, m√°scaras de subred, puertas de enlace y servidores DNS. Esta funci√≥n devuelve una tupla con esta informaci√≥n; en este caso, imprimimos solo la direcci√≥n IP.

*  `class WLAN ‚Äì MicroPython Docs <https://docs.micropython.org/en/latest/library/network.WLAN.html>`_

.. _create_secrets:

3. Guarda la Informaci√≥n Privada en ``secrets.py``
----------------------------------------------------------

Al compartir tu proyecto con Pico W, probablemente no desees que otros vean tu contrase√±a Wi-Fi o clave de API. Para mejorar la seguridad, podemos crear un archivo ``secrets.py`` y almacenar tu informaci√≥n privada all√≠.

#. Copia el siguiente c√≥digo en un nuevo archivo de script en Thonny. Cambia ``SSID`` y ``PASSWORD`` a tus datos.

    .. code-block:: python

        secrets = {
        'ssid': 'SSID',
        'password': 'PASSWORD',
        }

#. Elige Raspberry Pi Pico en la ventana emergente al hacer clic en el bot√≥n Guardar o presiona ``Ctrl+S``.

    .. image:: img/access4.png

#. Nombra el archivo como ``secrets.py``.

    .. image:: img/access5.png

#. Ahora puedes ver este script en tu Raspberry Pi Pico W.

    .. image:: img/access6.png

#. En otros scripts, puedes llamarlo de la siguiente manera. Al ejecutarlo, ver√°s una conexi√≥n Wi-Fi exitosa. El archivo ``secrets.py`` se importa como una biblioteca, por lo que no hay riesgo de exponer la informaci√≥n.

    .. code-block:: python
        :emphasize-lines: 3,7

        import network
        import time
        from secrets import secrets

        wlan = network.WLAN(network.STA_IF)
        wlan.active(True)
        wlan.connect(secrets['ssid'], secrets['password'])

        # Espera hasta conectar o fallar
        wait = 10
        while wait > 0:
            if wlan.status() < 0 or wlan.status() >= 3:
                break
            wait -= 1
            print('waiting for connection...')
            time.sleep(1)

        # Manejo de error de conexi√≥n
        if wlan.status() != 3:
            raise RuntimeError('wifi connection failed')
        else:
            print('connected')
            print('IP: ', wlan.ifconfig()[0])

    .. image:: img/access8.png

.. _do_connect:

4. Conexi√≥n a Internet con ``do_connect.py``
--------------------------------------------------------------

Dado que en cada proyecto necesitaremos una conexi√≥n a la red, ¬øpor qu√© no crear un nuevo archivo ``do_connect.py`` con funciones relevantes para su reutilizaci√≥n, lo que simplifica el c√≥digo de proyectos complejos?

#. Copia el siguiente c√≥digo en un nuevo archivo de script y gu√°rdalo en la Raspberry Pi Pico como ``do_connect.py``.

    .. code-block:: python

        import network
        import time
        from secrets import *

        def do_connect(ssid=secrets['ssid'],psk=secrets['password']):
            wlan = network.WLAN(network.STA_IF)
            wlan.active(True)
            wlan.connect(ssid, psk)

            # Espera hasta conectar o fallar
            wait = 10
            while wait > 0:
                if wlan.status() < 0 or wlan.status() >= 3:
                    break
                wait -= 1
                print('waiting for connection...')
                time.sleep(1)

            # Manejo de error de conexi√≥n
            if wlan.status() != 3:
                raise RuntimeError('wifi connection failed')
            else:
                print('connected')
                ip=wlan.ifconfig()[0]
                print('network config: ', ip)
                return ip

    .. image:: img/access7.png

#. Llamando a esta funci√≥n en otros scripts, permitir√° que la Raspberry Pi Pico W se conecte a la red.

    .. code-block:: python

        from do_connect import *
        do_connect()


.. https://www.tomshardware.com/reviews/raspberry-pi-pico-w
