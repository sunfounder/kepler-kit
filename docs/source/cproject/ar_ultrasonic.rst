.. note::

    ¬°Hola! Bienvenido a la Comunidad de Entusiastas de SunFounder para Raspberry Pi, Arduino y ESP32 en Facebook. Sum√©rgete en el mundo de Raspberry Pi, Arduino y ESP32 junto a otros apasionados.

    **¬øPor qu√© unirse?**

    - **Soporte Experto**: Resuelve problemas postventa y desaf√≠os t√©cnicos con la ayuda de nuestra comunidad y equipo.
    - **Aprende y Comparte**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Previsualizaciones Exclusivas**: Obt√©n acceso anticipado a anuncios de nuevos productos y adelantos.
    - **Descuentos Especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s recientes.
    - **Promociones Festivas y Sorteos**: Participa en sorteos y promociones especiales de temporada.

    üëâ ¬øListo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y √∫nete hoy.

.. _ar_ultrasonic:

6.1 - Medici√≥n de Distancia
======================================

El m√≥dulo sensor ultras√≥nico funciona bajo el principio de sonar y radar para determinar la distancia a un objeto.

* :ref:`cpn_ultrasonic`

**Componentes Necesarios**

En este proyecto, necesitaremos los siguientes componentes.

Es muy conveniente adquirir un kit completo; aqu√≠ est√° el enlace:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nombre
        - ELEMENTOS EN ESTE KIT
        - LINK DE COMPRA
    *   - Kit Kepler
        - 450+
        - |link_kepler_kit|

Tambi√©n puedes comprarlos por separado en los enlaces a continuaci√≥n.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - N¬∞
        - INTRODUCCI√ìN DEL COMPONENTE
        - CANTIDAD
        - LINK DE COMPRA

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - Cable Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Varios
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_ultrasonic`
        - 1
        - |link_ultrasonic_buy|

**Esquema**

|sch_ultrasonic|

**Cableado**

|wiring_ultrasonic|

**C√≥digo**

.. note::

    * Puedes abrir el archivo ``6.1_ultrasonic.ino`` en la ruta ``kepler-kit-main/arduino/6.1_ultrasonic``.
    * O copia este c√≥digo en **Arduino IDE**.
    * No olvides seleccionar la placa (Raspberry Pi Pico) y el puerto correcto antes de hacer clic en el bot√≥n **Subir**.

.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/631a1663-ce45-4d46-b8f0-7d10f32097a9/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

Una vez que el programa est√© en funcionamiento, el Monitor Serial imprimir√° la distancia entre el sensor ultras√≥nico y el obst√°culo delante de √©l.


**¬øC√≥mo funciona?**

Para la aplicaci√≥n del sensor ultras√≥nico, podemos consultar directamente la subfunci√≥n.

.. code-block:: arduino

    float readSensorData(){// ...}

``PING`` se activa mediante un pulso HIGH de 2 microsegundos o m√°s. (Antes de esto, env√≠a un pulso corto LOW para asegurar un pulso limpio de HIGH).

.. code-block:: arduino

    digitalWrite(trigPin, LOW); 
    delayMicroseconds(2);
    digitalWrite(trigPin, HIGH); 
    delayMicroseconds(10);
    digitalWrite(trigPin, LOW); 

El pin echo se usa para leer la se√±al de PING, un pulso HIGH cuya duraci√≥n es 
el tiempo (en microsegundos) desde el env√≠o del ping hasta la recepci√≥n del eco 
reflejado por el objeto.

.. code-block:: arduino

    microsecond=pulseIn(echoPin, HIGH);

La velocidad del sonido es de 340 m/s o 29 microsegundos por cent√≠metro.

Esto da la distancia recorrida por el ping (ida y vuelta), as√≠ que dividimos 
por 2 para obtener la distancia al obst√°culo.

.. code-block:: arduino

    float distance = microsecond / 29.00 / 2;  

Ten en cuenta que el sensor ultras√≥nico pausar√° el programa mientras est√© 
funcionando, lo que puede causar cierto retraso al escribir proyectos m√°s complejos.
