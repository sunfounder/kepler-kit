.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi, Arduino & ESP32 sur Facebook ! Explorez plus en profondeur Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et tutoriels pour am√©liorer vos comp√©tences.
    - **Avant-premi√®res exclusives** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus exclusifs.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et promotions sp√©ciales.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _ar_relay:

2.16 - Contr√¥ler un autre circuit
======================================

Dans notre vie quotidienne, nous appuyons sur un interrupteur pour allumer ou √©teindre une lampe. 
Mais que faire si vous voulez contr√¥ler la lampe avec le Pico W pour qu'elle s'√©teigne automatiquement apr√®s dix minutes ?

Un relais peut vous aider √† r√©aliser cette id√©e.

Un relais est en r√©alit√© un type particulier d'interrupteur, contr√¥l√© par un c√¥t√© du circuit (g√©n√©ralement un circuit basse tension) et utilis√© pour contr√¥ler l'autre c√¥t√© (g√©n√©ralement un circuit haute tension).
Cela permet de rendre nos appareils m√©nagers programmables, en les transformant en dispositifs intelligents, voire connect√©s √† Internet.

.. warning::
    La modification d'appareils √©lectriques pr√©sente de grands dangers, ne l'essayez pas √† la l√©g√®re, faites-le sous la supervision de professionnels.

* :ref:`cpn_relay`

Ici, nous utilisons un simple circuit aliment√© par un module d'alimentation de breadboard comme exemple pour montrer comment le contr√¥ler avec un relais.

* :ref:`cpn_power_module`

**Composants requis**

Dans ce projet, nous avons besoin des composants suivants.

Il est pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN D'ACHAT
    *   - Kit Kepler	
        - 450+
        - |link_kepler_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - N¬∞
        - INTRODUCTION DES COMPOSANTS	
        - QUANTIT√â
        - LIEN D'ACHAT

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - C√¢ble Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Plusieurs
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_transistor`
        - 1(S8050)
        - |link_transistor_buy|
    *   - 6
        - :ref:`cpn_diode`
        - 1
        - 
    *   - 7
        - :ref:`cpn_relay`
        - 1
        - |link_relay_buy|

**C√¢blage**

Tout d'abord, construisez un circuit basse tension pour contr√¥ler un relais.
La commande du relais n√©cessite un courant √©lev√©, d'o√π la n√©cessit√© d'un transistor ; ici, nous utilisons le S8050.

|sch_relay_1|

|wiring_relay_1|

Une diode (diode de roue libre) est utilis√©e ici pour prot√©ger le circuit. Le c√¥t√© cathode, marqu√© par la bande argent√©e, est connect√© √† l'alimentation, et l'anode est reli√©e au transistor.

Lorsque la tension d'entr√©e passe de haut (5V) √† bas (0V), le transistor passe de la saturation (amplification, saturation et coupure) √† la coupure, et le courant ne peut plus circuler dans la bobine.

Sans cette diode, la bobine produirait une tension auto-induite √† ses extr√©mit√©s, plusieurs fois sup√©rieure √† la tension d'alimentation, risquant de br√ªler les composants. 

Avec la diode ajout√©e, la bobine et la diode forment instantan√©ment un nouveau circuit aliment√© par l'√©nergie stock√©e dans la bobine, ce qui permet de d√©charger l'exc√®s de tension et de prot√©ger les composants comme les transistors.

* :ref:`cpn_diode`    
* `Flyback Diode - Wikipedia <https://en.wikipedia.org/wiki/Flyback_diode>`_

√Ä ce stade, le programme est pr√™t √† fonctionner, et apr√®s ex√©cution, vous entendrez un bruit de "tik tok", qui est le son de la bobine interne du relais qui s'active et se d√©sactive.

Ensuite, connectez les deux extr√©mit√©s du circuit de charge aux broches 3 et 6 du relais.

..(Prenons le circuit simple aliment√© par le module d'alimentation de breadboard d√©crit dans l'article pr√©c√©dent comme exemple.)

|sch_relay_2|

|wiring_relay_2|

√Ä ce stade, le relais pourra contr√¥ler l'√©tat du circuit de charge.

**Code**

.. note::

    * Vous pouvez ouvrir le fichier ``2.16_relay.ino`` sous le chemin ``kepler-kit-main/arduino/2.16_relay``. 
    * Ou copiez ce code dans l'**Arduino IDE**.
    * N'oubliez pas de s√©lectionner la carte (Raspberry Pi Pico) et le port correct avant de cliquer sur le bouton **Upload**.

.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/3be98f10-8223-49f2-8238-2acc53ebbf80/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>


Lorsque le code est ex√©cut√©, le relais basculera l'√©tat de fonctionnement du circuit contr√¥l√© toutes les deux secondes.
Vous pouvez commenter manuellement certaines lignes pour mieux comprendre la correspondance entre le circuit du relais et celui de la charge.


**En savoir plus**


La broche 3 du relais est normalement ouverte et ne se ferme que lorsque la bobine du contacteur fonctionne ; la broche 4 est normalement ferm√©e et se ferme lorsque la bobine est aliment√©e.
La broche 1 est connect√©e √† la broche 6 et constitue le terminal commun du circuit de charge.

En d√©pla√ßant une extr√©mit√© du circuit de charge de la broche 3 √† la broche 4, vous obtiendrez un √©tat de fonctionnement oppos√©.
