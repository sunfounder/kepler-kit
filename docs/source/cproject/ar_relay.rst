.. note::

    こんにちは、SunFounderのRaspberry Pi & Arduino & ESP32愛好家コミュニティへようこそ！Facebook上でRaspberry Pi、Arduino、ESP32についてもっと深く掘り下げ、他の愛好家と交流しましょう。

    **参加する理由は？**

    - **エキスパートサポート**：コミュニティやチームの助けを借りて、販売後の問題や技術的な課題を解決します。
    - **学び＆共有**：ヒントやチュートリアルを交換してスキルを向上させましょう。
    - **独占的なプレビュー**：新製品の発表や先行プレビューに早期アクセスしましょう。
    - **特別割引**：最新製品の独占割引をお楽しみください。
    - **祭りのプロモーションとギフト**：ギフトや祝日のプロモーションに参加しましょう。

    👉 私たちと一緒に探索し、創造する準備はできていますか？[|link_sf_facebook|]をクリックして今すぐ参加しましょう！

.. _ar_relay:

2.16 - 別の回路を制御する
=================================

日常生活で、スイッチを押すだけでランプを点灯または消灯できます。
しかし、Pico Wを使って、10分後に自動的に消灯するようにランプを制御したい場合はどうでしょうか？

このアイデアを実現するためには、リレーが役立ちます。

リレーは、一方の回路（通常は低電圧回路）によって制御され、他方の回路（通常は高電圧回路）を制御する特殊な種類のスイッチです。
これにより、プログラムで制御できるスマートデバイスになるように、またはインターネットにアクセスできるように、家庭用電器を改造するのが現実的になります。

.. warning::
    電気製品の改造は非常に危険ですので、専門家の指導のもとで行ってください。

* :ref:`cpn_relay`

ここでは、ブレッドボード電源モジュールで駆動される簡単な回路を例に、リレーを使ってどのように制御するかを示します。

* :ref:`cpn_power_module`

**必要なコンポーネント**

このプロジェクトには、以下のコンポーネントが必要です。

全体のキットを購入することは非常に便利です。リンクは以下のとおりです：

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - 名前	
        - このキットに含まれるアイテム
        - 購入リンク
    *   - ケプラーキット	
        - 450+
        - |link_kepler_kit|

以下のリンクから個別に購入することもできます。

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - 番号
        - コンポーネント紹介	
        - 数量
        - 購入リンク

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - Micro USBケーブル
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - 数本
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_transistor`
        - 1(S8050)
        - |link_transistor_buy|
    *   - 6
        - :ref:`cpn_diode`
        - 1
        - 
    *   - 7
        - :ref:`cpn_relay`
        - 1
        - |link_relay_buy|

**配線**

まず、リレーを制御するための低電圧回路を作成します。
リレーの駆動には高電流が必要なため、ここではトランジスタS8050を使用します。

|sch_relay_1|

|wiring_relay_1|

ここでは、回路を保護するためにダイオード（フリーホイーリングダイオード）が使用されています。カソードは、電源に接続された銀色のリボンの端であり、アノードはトランジスタに接続されています。

電圧入力がHigh（5V）からLow（0V）に変わると、トランジスタは飽和（増幅、飽和、カットオフ）からカットオフに変わり、コイルを通る電流の道が突如なくなります。

この時点で、このフリーホイーリングダイオードが存在しない場合、コイルは供給電圧の数倍にもなる自己誘導電位を両端で生成します。この電圧プラストランジスタ電源の電圧は、それを焼き尽くすほどです。

ダイオードを追加することで、コイルとダイオードは瞬時にコイルに蓄えられたエネルギーで駆動される新しい回路を形成し、放電します。これにより、回路上のトランジスタなどのデバイスが過度な電圧で損傷するのを防ぎます。

* :ref:`cpn_diode`
* `Flyback Diode - Wikipedia <https://en.wikipedia.org/wiki/Flyback_diode>`_

この時点でプログラムは実行可能です。実行すると「チクタク」という音がしますが、これはリレー内のコンタクタコイルが吸い寄せられて破れる音です。

次に、負荷回路の両端をそれぞれリレーのピン3と6に接続します。

..（前述のブレッドボード電源モジュールで駆動される簡単な回路を例に取ります。）

|sch_relay_2|

|wiring_relay_2|

この時点で、リレーは負荷回路のオンとオフを制御できるようになります。

**コード**

.. note::

   * ファイル ``2.16_relay.ino`` は、 ``kepler-kit-main/arduino/2.16_relay`` のパスで開くことができます。
   * または、このコードを **Arduino IDE** にコピーしてください。

   * **Upload** ボタンをクリックする前に、ボード（Raspberry Pi Pico）と正確なポートを選択することを忘れないでください。

.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/3be98f10-8223-49f2-8238-2acc53ebbf80/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>


コードが実行されると、リレーは制御された回路の動作状態を2秒ごとに切り替えます。
リレー回路と負荷回路の対応関係をさらに明確にするために、1行を手動でコメントアウトできます。

**もっと詳しく**

リレーのピン3は通常開いており、コンタクタコイルが動作しているときだけオンになります。ピン4は通常閉じており、コンタクタコイルが通電されたときにオンになります。
ピン1はピン6に接続されており、負荷回路の共通端子です。

負荷回路の一端をピン3からピン4に切り替えると、正確に反対の動作状態が得られます。
