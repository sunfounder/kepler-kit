.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **ExpertenunterstÃ¼tzung**: LÃ¶sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre FÃ¤higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie frÃ¼hzeitigen Zugang zu neuen ProduktankÃ¼ndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: GenieÃŸen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    ğŸ‘‰ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

1.4 Bibliotheken installieren (Wichtig)
===========================================

**Code herunterladen**

Laden Sie den relevanten Code Ã¼ber den untenstehenden Link herunter.

* :download:`SunFounder Kepler Kit Beispiel <https://github.com/sunfounder/kepler-kit/archive/refs/heads/main.zip>`

* Oder schauen Sie sich den Code auf `Kepler Kit - GitHub <https://github.com/sunfounder/kepler-kit>`_ an.

.. _add_libraries_ar:

Bibliotheken hinzufÃ¼gen
--------------------------
Eine Bibliothek, die einige Funktionsdefinitionen und Header-Dateien zusammenfasst, enthÃ¤lt normalerweise zwei Dateien: .h (Header-Datei, inklusive Funktionsdeklaration, Makrodefinition, Konstruktordefinition usw.) und .cpp (AusfÃ¼hrungsdatei, mit Funktionsimplementierung, Variablendefinition etc.). Wenn Sie eine Funktion aus einer solchen Bibliothek nutzen mÃ¶chten, mÃ¼ssen Sie lediglich die entsprechende Header-Datei einfÃ¼gen (z.B. #include <dht.h>) und dann die Funktion aufrufen. Dies macht Ihren Code kompakter. Falls Sie die Bibliothek nicht verwenden mÃ¶chten, kÃ¶nnen Sie die Funktionsdefinition auch direkt im Code hinterlegen. Dies fÃ¼hrt jedoch zu einem lÃ¤ngeren und weniger Ã¼bersichtlichen Code.

Einige Bibliotheken sind bereits in der Arduino IDE integriert, wÃ¤hrend andere erst hinzugefÃ¼gt werden mÃ¼ssen. Sehen wir uns nun an, wie das funktioniert.

#. Ã–ffnen Sie die Arduino IDE und navigieren Sie zu **Skizze** -> **Bibliothek einbinden** -> **.ZIP-Bibliothek hinzufÃ¼gen**.

   .. image:: img/a2dp_add_zip.png

#. Navigieren Sie zu dem Verzeichnis, in dem sich die Bibliotheksdateien befinden, etwa dem Ordner ``kepler-kit-main\arduino\libraries``, und wÃ¤hlen Sie die gewÃ¼nschte Bibliotheksdatei aus, wie z.B. ``LiquidCrystal_I2C.zip``. Klicken Sie dann auf **Ã–ffnen**.

   .. image:: img/a2dp_choose.png

#. Nach kurzer Zeit erhalten Sie eine Benachrichtigung, die eine erfolgreiche Installation bestÃ¤tigt.

   .. image:: img/a2dp_success.png

#. Wiederholen Sie diesen Vorgang, um weitere Bibliotheken hinzuzufÃ¼gen.


.. note::

   Die installierten Bibliotheken finden Sie im Standardbibliotheksverzeichnis der Arduino IDE, das normalerweise unter ``C:\Users\xxx\Documents\Arduino\libraries`` zu finden ist.

   Falls Ihr Bibliotheksverzeichnis abweicht, kÃ¶nnen Sie dieses Ã¼berprÃ¼fen, indem Sie zu **Datei** -> **Einstellungen** navigieren.

      .. image:: img/install_lib1.png

