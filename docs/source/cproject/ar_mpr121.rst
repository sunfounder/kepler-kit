.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi, Arduino & ESP32 sur Facebook ! Plongez au c≈ìur de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez vos probl√®mes apr√®s-vente et d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et tutoriels pour am√©liorer vos comp√©tences.
    - **Avant-premi√®res exclusives** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus exclusifs.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et promotions sp√©ciales.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _ar_mpr121:

4.3 - Clavier √† √âlectrodes
================================

Le MPR121 est un excellent choix si vous souhaitez ajouter un grand nombre de boutons tactiles √† votre projet. Il dispose d'√©lectrodes qui peuvent √™tre √©tendues avec des conducteurs. 
Si vous connectez les √©lectrodes √† une banane, vous pouvez transformer cette banane en interrupteur tactile.

* :ref:`cpn_mpr121`

**Composants requis**

Dans ce projet, nous avons besoin des composants suivants. 

Il est pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN D'ACHAT
    *   - Kit Kepler	
        - 450+
        - |link_kepler_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - N¬∞
        - INTRODUCTION DES COMPOSANTS	
        - QUANTIT√â
        - LIEN D'ACHAT

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - C√¢ble Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Plusieurs
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_mpr121`
        - 1
        - 

**Sch√©ma**

|sch_mpr121_ar|


**C√¢blage**

|wiring_mpr121_ar|

**Code**

.. note::

    * Vous pouvez ouvrir le fichier ``4.3_electrode_keyboard.ino`` sous le chemin ``kepler-kit-main/arduino/4.3_electrode_keyboard``. 
    * Ou copiez ce code dans l'**Arduino IDE**.
    * Ensuite, s√©lectionnez la carte Raspberry Pi Pico et le port correct avant de cliquer sur le bouton Upload.
    * La biblioth√®que ``Adafruit MPR121`` est utilis√©e ici, vous pouvez l'installer depuis le **Gestionnaire de Biblioth√®ques**.

      .. image:: img/lib_mpr121.png

.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/f31048b7-0f98-4d49-8c2e-26b3908e98cb/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

Apr√®s le lancement du programme, vous pouvez toucher les douze √©lectrodes du module MPR121 avec la main, et l'√©tat de contact de ces √©lectrodes sera enregistr√© dans un tableau bool√©en de 12 bits qui sera affich√© sur le moniteur s√©rie. 
Si la premi√®re et la onzi√®me √©lectrode sont touch√©es, ``100000000010`` s'affiche.

Vous pouvez √©tendre les √©lectrodes en connectant d'autres conducteurs tels que des fruits, des fils, du papier aluminium, etc. Cela vous permettra de trouver davantage de moyens de d√©clencher ces √©lectrodes.

**Comment √ßa fonctionne ?**

Initialisez l'objet ``MPR121``. √Ä ce stade, l'√©tat des √©lectrodes du module sera enregistr√© comme valeurs initiales. 
Si vous √©tendez les √©lectrodes, vous devrez relancer l'exemple pour r√©initialiser les valeurs de d√©part.

.. code-block:: arduino

    #include "Adafruit_MPR121.h"

    Adafruit_MPR121 cap = Adafruit_MPR121();

    void setup() {
        Serial.begin(9600);
        int check = cap.begin(0x5A);
        if (!check) {
            Serial.println("MPR121 not found, check wiring?");
            while (1);
        }
        Serial.println("MPR121 found!");
    }

R√©cup√®re la valeur de l'√©lectrode actuelle, obtenant ainsi une valeur binaire de 12 bits. Si vous touchez la premi√®re et la onzi√®me √©lectrode, vous obtenez ``100000000010``.

.. code-block:: arduino

    // R√©cup√©rer les pads actuellement touch√©s
    currtouched = cap.touched();

D√©termine si l'√©tat des √©lectrodes a chang√©.

.. code-block:: arduino

    void loop() {
        currtouched = cap.touched();
        if (currtouched != lasttouched) {}

        // R√©initialiser notre √©tat
        lasttouched = currtouched;
    }

Si un changement d'√©tat est d√©tect√©, les valeurs de ``currtouched`` sont stock√©es bit par bit dans le tableau ``touchStates[12]``. Enfin, le tableau est affich√©.

.. code-block:: arduino

    if (currtouched != lasttouched) {
        for (int i = 0; i < 12; i++) {
            if (currtouched & (1 << i)) touchStates[i] = 1;
            else touchStates[i] = 0;
        }
        for (int i = 0; i < 12; i++){
            Serial.print(touchStates[i]);
        }
        Serial.println();
    }