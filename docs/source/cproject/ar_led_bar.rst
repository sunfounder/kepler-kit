.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers du Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour perfectionner vos comp√©tences.
    - **Avant-premi√®res exclusives** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus exclusifs.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des tirages au sort et des promotions sp√©ciales.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _ar_led_bar:

2.2 - Afficher le Niveau
=============================

Le premier projet consistait simplement √† faire clignoter une LED. Dans ce projet, nous allons utiliser une barre de LED, compos√©e de 10 LED regroup√©es dans un bo√Ætier en plastique, g√©n√©ralement utilis√©e pour afficher des niveaux de puissance ou de volume.

|img_led_bar_pin|

* :ref:`cpn_led_bar`

**Composants requis**

Dans ce projet, nous avons besoin des composants suivants. 

Il est plus pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN D'ACHAT
    *   - Kit Kepler	
        - 450+
        - |link_kepler_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - N¬∞
        - INTRODUCTION DES COMPOSANTS	
        - QUANTIT√â
        - LIEN D'ACHAT

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - C√¢ble Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Plusieurs
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_resistor`
        - 10(220Œ©)
        - |link_resistor_buy|
    *   - 6
        - :ref:`cpn_led_bar`
        - 1
        - 

**Sch√©ma**

|sch_ledbar|

La barre de LED contient 10 LED, chacune √©tant contr√¥lable individuellement. Ici, l'anode de chacune des 10 LED est connect√©e aux broches GP6 √† GP15, et la cathode est reli√©e √† une r√©sistance de 220 ohms, puis √† la masse (GND).

**C√¢blage**

|wiring_ledbar|

**Code**

.. note::

    * Vous pouvez ouvrir le fichier ``2.2_display_the_level.ino`` sous le chemin ``kepler-kit-main/arduino/2.2_display_the_level``. 
    * Ou copiez ce code dans l'**Arduino IDE**.
    * N'oubliez pas de s√©lectionner la carte (Raspberry Pi Pico) et le port correct avant de cliquer sur le bouton **Upload**.

.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/ae60e723-430e-4a58-ac39-566b9d1828e8/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>
    

Lorsque le programme est en cours d'ex√©cution, vous verrez les LED de la barre s'allumer puis s'√©teindre successivement.


**Comment √ßa fonctionne ?**

Chacune des dix LED de la barre doit √™tre contr√¥l√©e par une broche, ce qui signifie que nous devons d√©finir ces dix broches.

Les lignes de code dans ``setup()`` utilisent une boucle for pour initialiser les broches 6 √† 15 en mode sortie.

.. code-block:: C

    for(int i=6;i<=15;i++)
    {
        pinMode(i,OUTPUT);
    }   

La boucle for est utilis√©e dans ``loop()`` pour faire clignoter les LED (allum√©es pendant 0,5s, puis √©teintes pendant 0,5s) en s√©quence.

.. code-block:: C

    for(int i=6;i<=15;i++)
    {
        digitalWrite(i,HIGH);
        delay(500);
        digitalWrite(i,LOW);
        delay(500);    
    }
