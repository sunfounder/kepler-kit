.. note::

    ¬°Hola! Bienvenido a la comunidad de entusiastas de SunFounder para Raspberry Pi, Arduino y ESP32 en Facebook. Explora a fondo Raspberry Pi, Arduino y ESP32 junto a otros apasionados.

    **¬øPor qu√© unirse?**

    - **Soporte de expertos**: Resuelve problemas postventa y desaf√≠os t√©cnicos con la ayuda de nuestra comunidad y equipo.
    - **Aprende y comparte**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Previsualizaciones exclusivas**: Obt√©n acceso anticipado a anuncios y adelantos de nuevos productos.
    - **Descuentos especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s recientes.
    - **Promociones festivas y sorteos**: Participa en sorteos y promociones de temporada.

    üëâ ¬øListo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y √∫nete hoy mismo.

.. _ar_mpu6050:

6.3 - Seguimiento de Movimiento en 6 Ejes
=============================================

El MPU-6050 es un dispositivo de seguimiento de movimiento en 6 ejes (combinando un giroscopio de 3 ejes y un aceler√≥metro de 3 ejes).


Un aceler√≥metro es una herramienta que mide la aceleraci√≥n propia. Por ejemplo, un aceler√≥metro en reposo en la superficie terrestre medir√° una aceleraci√≥n debida a la gravedad de la Tierra, orientada hacia arriba [3], con un valor aproximado de g ‚âà 9.81 m/s¬≤.

Los aceler√≥metros tienen muchos usos en la industria y la ciencia. Ejemplos incluyen sistemas de navegaci√≥n inercial para aviones y misiles, y para mantener im√°genes en dispositivos como tabletas y c√°maras digitales en posici√≥n vertical.

Los giroscopios se utilizan para medir la orientaci√≥n y la velocidad angular de un dispositivo. Sus aplicaciones incluyen sistemas 
de antirrolido y de bolsas de aire para autom√≥viles, sistemas de detecci√≥n de movimiento para dispositivos inteligentes, sistemas de estabilizaci√≥n de actitud para drones, entre otros.

* :ref:`cpn_mpu6050`

**Componentes necesarios**

En este proyecto, necesitamos los siguientes componentes.

Es muy conveniente comprar un kit completo, aqu√≠ est√° el enlace:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nombre	
        - ITEMS EN ESTE KIT
        - LINK DE COMPRA
    *   - Kit Kepler	
        - 450+
        - |link_kepler_kit|

Tambi√©n puedes comprarlos por separado en los enlaces a continuaci√≥n.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - N¬∞	
        - INTRODUCCI√ìN DEL COMPONENTE	
        - CANTIDAD
        - LINK DE COMPRA

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - Cable Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Varios
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_mpu6050`
        - 1
        - 

**Esquema**

|sch_mpu6050_ar|

**Conexi√≥n**

|wiring_mpu6050_ar|

**C√≥digo**

.. note::

    * Puedes abrir el archivo ``6.3_6axis_motion_tracking.ino`` en la ruta ``kepler-kit-main/arduino/6.3_6axis_motion_tracking``.
    * O copiar este c√≥digo en el **IDE de Arduino**.
    * Luego selecciona la placa (Raspberry Pi Pico) y el puerto correcto antes de hacer clic en el bot√≥n **Upload**.
    * Aqu√≠ se utiliza la biblioteca ``Adafruit MPU6050``, que puedes instalar desde el **Library Manager**.

      .. image:: img/lib_mpu6050.png

.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/318f62d3-1d7b-4ee6-a1a2-97e783cf2d5e/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>
    

Despu√©s de ejecutar el programa, ver√°s que los valores del aceler√≥metro en 3 ejes y del giroscopio en 3 ejes 
aparecen en la salida de manera continua. En este momento, si giras el MPU6050 en cualquier direcci√≥n, notar√°s 
c√≥mo estos valores cambian en consecuencia. Para facilitar la visualizaci√≥n, puedes comentar alguna l√≠nea de 
impresi√≥n y concentrarte en otro conjunto de datos.

**¬øC√≥mo funciona?**

Instancia un objeto ``MPU6050``.

.. code-block:: arduino

    #include <Adafruit_MPU6050.h>
    #include <Wire.h>

    Adafruit_MPU6050 mpu;

Inicializa el MPU6050 y configura su precisi√≥n.

.. code-block:: arduino

    void setup(void) {
        Serial.begin(115200);
        while (!Serial)
            delay(10); // pausar√° Zero, Leonardo, etc. hasta que se abra la consola serial

        Serial.println("Adafruit MPU6050 test!");

        // Intenta inicializar
        if (!mpu.begin()) {
            Serial.println("Failed to find MPU6050 chip");
            while (1) {
                delay(10);
            }
        }
        Serial.println("MPU6050 Found!");

        // Configura el rango
        mpu.setAccelerometerRange(MPU6050_RANGE_8_G);
        mpu.setGyroRange(MPU6050_RANGE_500_DEG);
        mpu.setFilterBandwidth(MPU6050_BAND_21_HZ);

        Serial.println("");
        delay(100);
    }

Obt√©n nuevos eventos de sensor con las lecturas.

.. code-block:: arduino

    sensors_event_t a, g, temp;
    mpu.getEvent(&a, &g, &temp);

Posteriormente, podr√°s obtener valores de aceleraci√≥n y velocidad angular en tiempo real en los datos ``a.acceleration.x``, ``a.acceleration.y``, ``a.acceleration.z``, ``g.gyro.x``, ``g.gyro.y``, ``g.gyro.z``.

.. code-block:: arduino

    Serial.print("Acceleration X: ");
    Serial.print(a.acceleration.x);
    Serial.print(", Y: ");
    Serial.print(a.acceleration.y);
    Serial.print(", Z: ");
    Serial.print(a.acceleration.z);
    Serial.println(" m/s^2");

    Serial.print("Rotation X: ");
    Serial.print(g.gyro.x);
    Serial.print(", Y: ");
    Serial.print(g.gyro.y);
    Serial.print(", Z: ");
    Serial.print(g.gyro.z);
    Serial.println(" rad/s");