.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi, Arduino & ESP32 sur Facebook ! Plongez au c≈ìur de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez vos probl√®mes apr√®s-vente et d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et tutoriels pour am√©liorer vos comp√©tences.
    - **Avant-premi√®res exclusives** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus exclusifs.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et promotions sp√©ciales.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _ar_mpu6050:

6.3 - Suivi de Mouvement 6 Axes
===================================

Le MPU-6050 est un dispositif de suivi de mouvement √† 6 axes (combinant un gyroscope √† 3 axes et un acc√©l√©rom√®tre √† 3 axes).


Un acc√©l√©rom√®tre est un outil qui mesure l'acc√©l√©ration propre. Par exemple, un acc√©l√©rom√®tre au repos √† la surface de la Terre mesurera une acc√©l√©ration due √† la gravit√© terrestre, orient√©e vers le haut, avec une valeur d'environ g ‚âà 9,81 m/s¬≤.

Les acc√©l√©rom√®tres ont de nombreuses applications dans l'industrie et la science, comme les syst√®mes de navigation inertielle pour avions et missiles, le maintien d'images verticales sur les tablettes et les appareils photo num√©riques, etc.

Les gyroscopes sont utilis√©s pour mesurer l'orientation et la vitesse angulaire d'un appareil. Les applications incluent les syst√®mes anti-renversement et 
airbags pour automobiles, les syst√®mes de d√©tection de mouvement pour les appareils intelligents, les syst√®mes de stabilisation d'attitude pour les drones, et bien plus encore.

* :ref:`cpn_mpu6050`

**Composants requis**

Dans ce projet, nous avons besoin des composants suivants. 

Il est pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN D'ACHAT
    *   - Kit Kepler	
        - 450+
        - |link_kepler_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - N¬∞
        - INTRODUCTION DES COMPOSANTS	
        - QUANTIT√â
        - LIEN D'ACHAT

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - C√¢ble Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Plusieurs
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_mpu6050`
        - 1
        - 

**Sch√©ma**

|sch_mpu6050_ar|

**C√¢blage**

|wiring_mpu6050_ar|

**Code**

.. note::

    * Vous pouvez ouvrir le fichier ``6.3_6axis_motion_tracking.ino`` sous le chemin ``kepler-kit-main/arduino/6.3_6axis_motion_tracking``. 
    * Ou copiez ce code dans l'**Arduino IDE**.
    * Ensuite, s√©lectionnez la carte Raspberry Pi Pico et le port correct avant de cliquer sur le bouton Upload.
    * La biblioth√®que ``Adafruit MPU6050`` est utilis√©e ici, vous pouvez l'installer depuis le **Gestionnaire de Biblioth√®ques**.

      .. image:: img/lib_mpu6050.png

.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/318f62d3-1d7b-4ee6-a1a2-97e783cf2d5e/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>
    

Apr√®s avoir lanc√© le programme, vous verrez les valeurs de l'acc√©l√©rom√®tre √† 3 axes et celles du gyroscope √† 3 axes d√©filer dans la sortie. 
√Ä ce moment-l√†, si vous faites tourner le MPU6050, ces valeurs changeront en cons√©quence. 
Pour rendre les changements plus visibles, vous pouvez commenter une des lignes d'impression et vous concentrer sur un autre jeu de donn√©es.


**Comment √ßa fonctionne ?**

Instanciez un objet ``MPU6050``.

.. code-block:: arduino

    #include <Adafruit_MPU6050.h>
    #include <Wire.h>

    Adafruit_MPU6050 mpu;

Initialisez le MPU6050 et d√©finissez sa pr√©cision.

.. code-block:: arduino

    void setup(void) {
        Serial.begin(115200);
        while (!Serial)
            delay(10); // pause pour Zero, Leonardo, etc. jusqu'√† l'ouverture de la console s√©rie

        Serial.println("Adafruit MPU6050 test!");

        // Tentez l'initialisation !
        if (!mpu.begin()) {
            Serial.println("√âchec de d√©tection de la puce MPU6050");
            while (1) {
            delay(10);
            }
        }
        Serial.println("MPU6050 Found!");

        // D√©finir la plage
        mpu.setAccelerometerRange(MPU6050_RANGE_8_G);
        mpu.setGyroRange(MPU6050_RANGE_500_DEG);
        mpu.setFilterBandwidth(MPU6050_BAND_21_HZ);

        Serial.println("");
        delay(100);
    }

Obtenez de nouveaux √©v√©nements capteurs avec les lectures.

.. code-block:: arduino

    sensors_event_t a, g, temp;
    mpu.getEvent(&a, &g, &temp);

Ensuite, vous pourrez obtenir les valeurs d'acc√©l√©ration et de vitesse angulaire en temps r√©el avec les donn√©es ``a.acceleration.x``, ``a.acceleration.y``, ``a.acceleration.z``, ``g.gyro.x``, ``g.gyro.y``, ``g.gyro.z``.

.. code-block:: arduino

    Serial.print("Acceleration X: ");
    Serial.print(a.acceleration.x);
    Serial.print(", Y: ");
    Serial.print(a.acceleration.y);
    Serial.print(", Z: ");
    Serial.print(a.acceleration.z);
    Serial.println(" m/s^2");

    Serial.print("Rotation X: ");
    Serial.print(g.gyro.x);
    Serial.print(", Y: ");
    Serial.print(g.gyro.y);
    Serial.print(", Z: ");
    Serial.print(g.gyro.z);
    Serial.println(" rad/s");