.. note::

    ¬°Hola! Bienvenido a la Comunidad de Entusiastas de SunFounder para Raspberry Pi, Arduino y ESP32 en Facebook. Explora a fondo Raspberry Pi, Arduino y ESP32 junto a otros apasionados.

    **¬øPor qu√© unirte?**

    - **Soporte de expertos**: Resuelve problemas postventa y desaf√≠os t√©cnicos con ayuda de nuestra comunidad y equipo.
    - **Aprende y comparte**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Previsualizaciones exclusivas**: Obt√©n acceso anticipado a nuevos anuncios de productos y adelantos.
    - **Descuentos especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s recientes.
    - **Promociones y sorteos festivos**: Participa en sorteos y promociones de temporada.

    üëâ ¬øListo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y √∫nete hoy mismo.

.. _ar_pa_buz:


3.2 - Tono personalizado
==========================================


En el proyecto anterior usamos un zumbador activo; esta vez utilizaremos un zumbador pasivo.

Al igual que el zumbador activo, el zumbador pasivo tambi√©n utiliza el fen√≥meno de la inducci√≥n electromagn√©tica para funcionar. La diferencia es que un zumbador pasivo no tiene una fuente de oscilaci√≥n, por lo que no emitir√° sonido si se utiliza una se√±al de corriente continua (DC). Sin embargo, esto permite que el zumbador pasivo ajuste su propia frecuencia de oscilaci√≥n y emita diferentes notas como ‚Äúdo, re, mi, fa, sol, la, si‚Äù.

¬°Hagamos que el zumbador pasivo emita una melod√≠a!

* :ref:`Buzzer`

**Componentes necesarios**

En este proyecto, necesitamos los siguientes componentes.

Es muy conveniente comprar un kit completo; aqu√≠ est√° el enlace:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nombre	
        - ITEMS EN ESTE KIT
        - LINK DE COMPRA
    *   - Kit Kepler	
        - 450+
        - |link_kepler_kit|

Tambi√©n puedes comprarlos por separado en los enlaces a continuaci√≥n.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - N¬∞
        - INTRODUCCI√ìN DEL COMPONENTE	
        - CANTIDAD
        - LINK DE COMPRA

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - Cable Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Varios
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_transistor`
        - 1 (S8050)
        - |link_transistor_buy|
    *   - 6
        - :ref:`cpn_resistor`
        - 1 (1KŒ©)
        - |link_resistor_buy|
    *   - 7
        - Zumbador pasivo :ref:`cpn_buzzer`
        - 1
        - |link_passive_buzzer_buy|

**Esquema**

|sch_buzzer|

Cuando la salida de GP15 est√° en alto, despu√©s de pasar por el resistor limitador de corriente de 1K (para proteger el transistor), el S8050 (transistor NPN) conducir√°, haciendo que el zumbador emita sonido.

El transistor S8050 (NPN) tiene el rol de amplificar la corriente para hacer que el zumbador suene m√°s fuerte. En realidad, puedes conectar el zumbador directamente al pin GP15, pero notar√°s que el sonido es m√°s bajo.

**Conexi√≥n**

|img_buzzer|

En el kit se incluyen dos zumbadores; aqu√≠ usaremos el zumbador pasivo (el que tiene una PCB expuesta en la parte trasera).

El zumbador necesita un transistor para funcionar; aqu√≠ utilizamos el S8050.

|wiring_buzzer|

**C√≥digo**

.. note::

    * Puedes abrir el archivo ``3.2_custom_tone.ino`` en la ruta ``kepler-kit-main/arduino/3.2_custom_tone``.
    * O copiar este c√≥digo en el **IDE de Arduino**.
    * No olvides seleccionar la placa Raspberry Pi Pico y el puerto correcto antes de hacer clic en el bot√≥n **Upload**.

.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/69c55e56-9eeb-46bb-b3a8-b354c500cc17/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

**¬øC√≥mo funciona?**

Si se proporciona una se√±al digital al zumbador pasivo, solo mover√° la membrana sin producir sonido.

Por lo tanto, usamos la funci√≥n ``tone()`` para generar la se√±al PWM que hace sonar el zumbador pasivo.

Esta funci√≥n tiene tres par√°metros:

  * **pin**, el pin GPIO que controla el zumbador.
  * **frecuencia**, determina el tono del zumbador; a mayor frecuencia, mayor tono.
  * **duraci√≥n**, el tiempo durante el cual se emite el tono.

* `tone <https://www.arduino.cc/reference/en/language/functions/advanced-io/tone/>`_

**Aprende m√°s**

Podemos simular tonos espec√≠ficos seg√∫n la frecuencia fundamental del piano, y as√≠ reproducir una pieza completa.

* `Piano key frequencies - Wikipedia <https://en.wikipedia.org/wiki/Piano_key_frequencies>`_

.. note::

    * Puedes abrir el archivo ``3.2_custom_tone_2.ino`` en la ruta ``kepler-kit-main/arduino/3.2_custom_tone_2``.
    * O copiar este c√≥digo en el **Arduino IDE**.
    * No olvides seleccionar la placa Raspberry Pi Pico y el puerto correcto antes de hacer clic en el bot√≥n **Upload**.

.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/f934c785-7204-4972-aae5-01edde3c79cc/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>