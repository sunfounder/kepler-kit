.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _ar_pa_buz:

3.2 - Individueller Ton
==========================================

Im vorherigen Projekt haben wir einen aktiven Summer verwendet. Diesmal greifen wir auf einen passiven Summer zur√ºck.

√Ñhnlich wie der aktive Summer funktioniert auch der passive Summer auf Grundlage der elektromagnetischen Induktion. Der Unterschied besteht darin, dass ein passiver Summer keine eigene Schwingungsquelle hat. Deshalb gibt er keinen Ton ab, wenn Gleichstromsignale verwendet werden. Dies erm√∂glicht es jedoch dem passiven Summer, seine eigene Schwingungsfrequenz anzupassen und unterschiedliche T√∂ne wie "Do, Re, Mi, Fa, Sol, La, Si" auszugeben.

Lassen Sie den passiven Summer eine Melodie spielen!

* :ref:`cpn_buzzer`

**Erforderliche Bauteile**

F√ºr dieses Projekt ben√∂tigen wir die folgenden Bauteile.

Ein komplettes Set zu kaufen ist definitiv praktisch, hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Bezeichnung
        - ELEMENTE IN DIESEM KIT
        - KAUF-LINK
    *   - Kepler Kit
        - 450+
        - |link_kepler_kit|

Alternativ k√∂nnen Sie die Teile auch einzeln √ºber die folgenden Links erwerben.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - KOMPONENTENBESCHREIBUNG
        - ANZAHL
        - KAUF-LINK

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - Micro-USB-Kabel
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Mehrere
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_transistor`
        - 1 (S8050)
        - |link_transistor_buy|
    *   - 6
        - :ref:`cpn_resistor`
        - 1 (1KŒ©)
        - |link_resistor_buy|
    *   - 7
        - Passive :ref:`cpn_buzzer`
        - 1
        - |link_passive_buzzer_buy|

**Schaltplan**

|sch_buzzer|

Wenn der GP15-Ausgang hoch ist, leitet der S8050 (NPN-Transistor) nach dem 1K-Strombegrenzungswiderstand (zum Schutz des Transistors) den Strom, sodass der Summer ert√∂nt.

Die Aufgabe des S8050 (NPN-Transistor) besteht darin, den Strom zu verst√§rken und den Klang des Summers lauter zu machen. Tats√§chlich k√∂nnten Sie den Summer auch direkt an GP15 anschlie√üen, w√ºrden jedoch feststellen, dass der Ton leiser ist.

**Verkabelung**

|img_buzzer|

Im Kit sind zwei Summer enthalten; wir verwenden einen passiven Summer (einen mit freiliegender Leiterplatte auf der R√ºckseite).

F√ºr die Funktion des Summers ist ein Transistor erforderlich; hier verwenden wir den S8050.

|wiring_buzzer|

**Code**

.. note::

   * Die Datei ``3.2_custom_tone.ino`` finden Sie unter dem Pfad ``kepler-kit-main/arduino/3.2_custom_tone``.
   * Oder kopieren Sie diesen Code in die **Arduino IDE**.

   * Vergessen Sie nicht, die Platine (Raspberry Pi Pico) und den korrekten Port auszuw√§hlen, bevor Sie auf die Schaltfl√§che **Hochladen** klicken.



.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/69c55e56-9eeb-46bb-b3a8-b354c500cc17/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>


**Wie funktioniert es?**

Wenn dem passiven Summer ein digitales Signal gegeben wird, kann er nur die Membran bewegen, ohne einen Ton zu erzeugen.

Daher verwenden wir die Funktion ``tone()`` um das PWM-Signal zu erzeugen, das den passiven Summer zum Klingen bringt.

Diese Funktion hat drei Parameter:

  * **pin**, der GPIO-Pin, der den Summer steuert.
  * **frequency**, die Tonh√∂he des Summers wird durch die Frequenz bestimmt; je h√∂her die Frequenz, desto h√∂her die Tonh√∂he.
  * **Duration**, die Dauer des Tons.

* `tone <https://www.arduino.cc/reference/de/language/functions/advanced-io/tone/>`_

**Mehr erfahren**

Wir k√∂nnen den spezifischen Ton gem√§√ü der Grundfrequenz des Klaviers simulieren, um ein vollst√§ndiges Musikst√ºck zu spielen.

* `Piano key frequencies - Wikipedia <https://de.wikipedia.org/wiki/Frequenzen_der_gleichstufigen_Stimmung>`_

.. note::

   * Die Datei ``3.2_custom_tone_2.ino`` finden Sie unter dem Pfad ``kepler-kit-main/arduino/3.2_custom_tone_2``.
   * Oder kopieren Sie diesen Code in die **Arduino IDE**.

   * Vergessen Sie nicht, die Platine (Raspberry Pi Pico) und den korrekten Port auszuw√§hlen, bevor Sie auf die Schaltfl√§che **Hochladen** klicken.


.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/f934c785-7204-4972-aae5-01edde3c79cc/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>
