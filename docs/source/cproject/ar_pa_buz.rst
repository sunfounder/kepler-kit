.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi, Arduino & ESP32 sur Facebook ! Plongez au c≈ìur de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez vos probl√®mes apr√®s-vente et d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et tutoriels pour am√©liorer vos comp√©tences.
    - **Avant-premi√®res exclusives** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus exclusifs.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et promotions sp√©ciales.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _ar_pa_buz:


3.2 - Tonalit√© personnalis√©e
==========================================

Dans le projet pr√©c√©dent, nous avons utilis√© un buzzer actif. Cette fois, nous utiliserons un buzzer passif.

Tout comme le buzzer actif, le buzzer passif fonctionne gr√¢ce au ph√©nom√®ne d'induction 
√©lectromagn√©tique. La diff√©rence r√©side dans le fait qu'un buzzer passif ne poss√®de pas 
de source d'oscillation int√©gr√©e, il ne produit donc pas de son avec des signaux continus DC. 
Cependant, cela permet au buzzer passif de modifier sa fr√©quence d'oscillation et d'√©mettre 
diff√©rentes notes comme "do, r√©, mi, fa, sol, la, si".

Faisons jouer une m√©lodie au buzzer passif !

* :ref:`Buzzer`

**Composants requis**

Dans ce projet, nous avons besoin des composants suivants. 

Il est pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN D'ACHAT
    *   - Kit Kepler	
        - 450+
        - |link_kepler_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - N¬∞
        - INTRODUCTION DES COMPOSANTS	
        - QUANTIT√â
        - LIEN D'ACHAT

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - C√¢ble Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Plusieurs
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_transistor`
        - 1 (S8050)
        - |link_transistor_buy|
    *   - 6
        - :ref:`cpn_resistor`
        - 1 (1KŒ©)
        - |link_resistor_buy|
    *   - 7
        - Buzzer passif :ref:`cpn_buzzer`
        - 1
        - |link_passive_buzzer_buy|

**Sch√©ma**

|sch_buzzer|

Lorsque la sortie de GP15 est haute, apr√®s le passage par la r√©sistance de limitation de courant de 1K (pour prot√©ger le transistor), le S8050 (transistor NPN) conduit, permettant ainsi au buzzer de sonner.

Le r√¥le du S8050 (transistor NPN) est d'amplifier le courant et de rendre le son du buzzer plus fort. En fait, vous pouvez √©galement connecter le buzzer directement √† GP15, mais le son sera plus faible.


**C√¢blage**

|img_buzzer|

Deux buzzers sont inclus dans le kit, nous utilisons un buzzer passif (celui avec le PCB visible √† l'arri√®re).

Le buzzer n√©cessite un transistor pour fonctionner, nous utilisons ici le S8050.

|wiring_buzzer|

**Code**


.. note::

    * Vous pouvez ouvrir le fichier ``3.2_custom_tone.ino`` sous le chemin ``kepler-kit-main/arduino/3.2_custom_tone``. 
    * Ou copiez ce code dans l'**Arduino IDE**.
    * N'oubliez pas de s√©lectionner la carte (Raspberry Pi Pico) et le port correct avant de cliquer sur le bouton Upload.




.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/69c55e56-9eeb-46bb-b3a8-b354c500cc17/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>



**Comment √ßa fonctionne ?**

Si un signal num√©rique est appliqu√© au buzzer passif, il ne fera que d√©placer la membrane sans produire de son.

Nous utilisons donc la fonction ``tone()`` pour g√©n√©rer le signal PWM permettant au buzzer passif de produire un son.

Cette fonction a trois param√®tres :

  * **pin**, le pin GPIO qui contr√¥le le buzzer.
  * **frequency**, la hauteur du son du buzzer est d√©termin√©e par la fr√©quence ; plus la fr√©quence est √©lev√©e, plus le son est aigu.
  * **duration**, la dur√©e de la tonalit√©.


* `tone <https://www.arduino.cc/reference/en/language/functions/advanced-io/tone/>`_

**En savoir plus**

Nous pouvons simuler des notes sp√©cifiques en fonction des fr√©quences fondamentales du piano, afin de jouer une pi√®ce musicale compl√®te.

* `Piano key frequencies - Wikipedia <https://en.wikipedia.org/wiki/Piano_key_frequencies>`_

.. note::

    * Vous pouvez ouvrir le fichier ``3.2_custom_tone_2.ino`` sous le chemin ``kepler-kit-main/arduino/3.2_custom_tone_2``. 
    * Ou copiez ce code dans l'**Arduino IDE**.
    * N'oubliez pas de s√©lectionner la carte (Raspberry Pi Pico) et le port correct avant de cliquer sur le bouton Upload.



.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/f934c785-7204-4972-aae5-01edde3c79cc/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>