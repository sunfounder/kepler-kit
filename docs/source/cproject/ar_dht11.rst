.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers du Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour perfectionner vos comp√©tences.
    - **Avant-premi√®res exclusives** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus exclusifs.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des tirages au sort et des promotions sp√©ciales.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _ar_dht11:

6.2 - Temp√©rature - Humidit√©
=======================================

L'humidit√© et la temp√©rature sont √©troitement li√©es, que ce soit en tant que grandeurs physiques ou dans notre vie quotidienne.
La temp√©rature et l'humidit√© de notre environnement influencent directement la r√©gulation thermique et le transfert de chaleur du corps humain.
Cela peut √©galement affecter notre activit√© mentale et notre √©tat d'esprit, et par cons√©quent, l'efficacit√© de nos √©tudes et de notre travail.

La temp√©rature est l'une des sept grandeurs physiques de base dans le Syst√®me international d'unit√©s, utilis√©e pour mesurer le degr√© de chaleur d'un objet.
Le Celsius est l'une des √©chelles de temp√©rature les plus utilis√©es dans le monde, exprim√©e par le symbole "‚ÑÉ".

L'humidit√© d√©signe la concentration de vapeur d'eau pr√©sente dans l'air.
L'humidit√© relative de l'air est couramment utilis√©e au quotidien et est exprim√©e en %RH. L'humidit√© relative est √©troitement li√©e √† la temp√©rature.
Pour un volume de gaz ferm√©, plus la temp√©rature est √©lev√©e, plus l'humidit√© relative est faible, et plus la temp√©rature est basse, plus l'humidit√© relative est √©lev√©e.

|img_Dht11|

Un capteur num√©rique de temp√©rature et d'humidit√© de base, le **DHT11**, est fourni dans ce kit.
Il utilise un capteur d'humidit√© capacitif et une thermistance pour mesurer l'air ambiant et fournit un signal num√©rique sur les broches de donn√©es (aucune broche d'entr√©e analogique n'est n√©cessaire).

* :ref:`cpn_dht11`

**Composants requis**

Dans ce projet, nous avons besoin des composants suivants.

Il est plus pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN D'ACHAT
    *   - Kit Kepler	
        - 450+
        - |link_kepler_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - N¬∞
        - INTRODUCTION DES COMPOSANTS	
        - QUANTIT√â
        - LIEN D'ACHAT

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - C√¢ble Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Plusieurs
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_dht11`
        - 1
        - |link_dht22_buy|

**Sch√©ma**

|sch_dht11|

**C√¢blage**

|wiring_dht11|

**Code**

.. note::

    * Vous pouvez ouvrir le fichier ``6.2_dht11.ino`` sous le chemin ``kepler-kit-main/arduino/6.2_dht11``. 
    * Ou copiez ce code dans l'**Arduino IDE**.
    * Ensuite, s√©lectionnez la carte Raspberry Pi Pico et le port correct avant de cliquer sur le bouton Upload.
    * La biblioth√®que ``DHT sensor library`` est utilis√©e ici, vous pouvez l'installer via le **Gestionnaire de Biblioth√®ques**.

      .. image:: img/lib_dht.png

.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/b9e96e99-59d4-48ca-b41f-c03577acfb8f/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

Apr√®s l'ex√©cution du code, vous verrez le Moniteur S√©rie afficher en continu la temp√©rature et l'humidit√©, et au fur et √† mesure que le programme fonctionne de mani√®re stable, ces deux valeurs deviendront de plus en plus pr√©cises.

**Comment √ßa fonctionne ?**

#. Inclusion des biblioth√®ques n√©cessaires et d√©finition des constantes.
   Cette partie du code inclut la biblioth√®que du capteur DHT et d√©finit le num√©ro de broche et le type de capteur utilis√©s dans ce projet.

   .. code-block:: arduino
    
      #include <DHT.h>
      #define DHTPIN 16       // D√©finir la broche utilis√©e pour connecter le capteur
      #define DHTTYPE DHT11  // D√©finir le type de capteur

#. Cr√©ation de l'objet DHT.
   Ici, nous cr√©ons un objet DHT en utilisant le num√©ro de broche et le type de capteur d√©finis.

   .. code-block:: arduino

      DHT dht(DHTPIN, DHTTYPE);  // Cr√©er un objet DHT

#. Cette fonction est ex√©cut√©e une fois lorsque l'Arduino d√©marre. Nous initialisons la communication s√©rie et le capteur DHT dans cette fonction.

   .. code-block:: arduino

      void setup() {
        Serial.begin(9600);
        Serial.println(F("DHT11 test!"));
        dht.begin();  // Initialiser le capteur DHT
      }

#. Boucle principale.
   La fonction ``loop()`` s'ex√©cute en continu apr√®s la fonction setup. Ici, nous lisons les valeurs d'humidit√© et de temp√©rature, calculons l'indice de chaleur, et affichons ces valeurs sur le moniteur s√©rie. Si la lecture du capteur √©choue (retourne NaN), un message d'erreur est imprim√©.

   .. note::
    
      L'|link_heat_index| est une mani√®re de mesurer la sensation de chaleur ext√©rieure en combinant la temp√©rature de l'air et l'humidit√©. On l'appelle √©galement la "temp√©rature ressentie" ou "temp√©rature apparente".

   .. code-block:: arduino

      void loop() {
        delay(2000);
        float h = dht.readHumidity();
        float t = dht.readTemperature();
        float f = dht.readTemperature(true);
        if (isnan(h) || isnan(t) || isnan(f)) {
          Serial.println(F("Failed to read from DHT sensor!"));
          return;
        }
        float hif = dht.computeHeatIndex(f, h);
        float hic = dht.computeHeatIndex(t, h, false);
        Serial.print(F("Humidity: "));
        Serial.print(h);
        Serial.print(F("%  Temperature: "));
        Serial.print(t);
        Serial.print(F("¬∞C "));
        Serial.print(f);
        Serial.print(F("¬∞F  Heat index: "));
        Serial.print(hic);
        Serial.print(F("¬∞C "));
        Serial.print(hif);
        Serial.println(F("¬∞F"));
      }
