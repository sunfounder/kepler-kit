.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers du Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour perfectionner vos comp√©tences.
    - **Avant-premi√®res exclusives** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus exclusifs.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des tirages au sort et des promotions sp√©ciales.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _ar_74hc_led:

5.1 - Microchip - 74HC595
================================

Un circuit int√©gr√© (integrated circuit) est un dispositif √©lectronique miniature ou composant, repr√©sent√© par la lettre "IC" dans les sch√©mas.

Un certain proc√©d√© est utilis√© pour interconnecter les transistors, r√©sistances, condensateurs, inducteurs et autres composants et c√¢blages n√©cessaires dans un circuit, fabriqu√©s sur une ou plusieurs petites plaquettes semi-conductrices ou substrats di√©lectriques, puis encapsul√©s pour former une microstructure avec les fonctions de circuit requises ; tous les composants sont structur√©s comme un tout, ce qui permet aux composants √©lectroniques de faire un grand pas vers la miniaturisation, la faible consommation d'√©nergie, l'intelligence et la haute fiabilit√©.

Les inventeurs des circuits int√©gr√©s sont Jack Kilby (circuits int√©gr√©s bas√©s sur le germanium (Ge)) et Robert Norton Noyce (circuits int√©gr√©s bas√©s sur le silicium (Si)).

Ce kit est √©quip√© d'un CI, le 74HC595, qui permet de r√©duire consid√©rablement l'utilisation des broches GPIO.
Concr√®tement, il peut remplacer 8 broches pour la sortie de signaux num√©riques en √©crivant un nombre binaire de 8 bits.

* `Binary number - Wikipedia <https://en.wikipedia.org/wiki/Binary_number>`_

* :ref:`74HC595`

**Composants requis**

Pour ce projet, nous avons besoin des composants suivants.

Il est plus pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - ARTICLES DANS CE KIT
        - LIEN D'ACHAT
    *   - Kit Kepler
        - 450+
        - |link_kepler_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - N¬∞
        - INTRODUCTION DES COMPOSANTS
        - QUANTIT√â
        - LIEN D'ACHAT

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - C√¢ble Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Plusieurs
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_resistor`
        - 8 (220Œ©)
        - |link_resistor_buy|
    *   - 6
        - :ref:`cpn_led`
        - 8
        - |link_led_buy|
    *   - 7
        - :ref:`cpn_74hc595`
        - 1
        - |link_74hc595_buy|

**Sch√©ma**

|sch_74hc_led|

* Lorsque MR (broche 10) est en niveau haut et OE (broche 13) est en niveau bas, les donn√©es sont entr√©es au front montant de SHcp et vont au registre de m√©moire par le front montant de SHcp.
* Si les deux horloges sont connect√©es ensemble, le registre √† d√©calage est toujours une impulsion plus t√¥t que le registre de m√©moire.
* Il y a une broche d'entr√©e de d√©calage s√©rie (Ds), une broche de sortie s√©rie (Q) et un bouton de r√©initialisation asynchrone (niveau bas) dans le registre de m√©moire.
* Le registre de m√©moire produit un bus en parall√®le de 8 bits et en trois √©tats.
* Lorsque OE est activ√© (niveau bas), les donn√©es du registre de m√©moire sont sorties vers le bus (Q0 ~ Q7).

**C√¢blage**

|wiring_74hc_led|

**Code**

.. note::

    * Vous pouvez ouvrir le fichier ``5.1_microchip_74hc595.ino`` sous le chemin ``kepler-kit-main/arduino/5.1_microchip_74hc595``.
    * Ou copiez ce code dans l'**Arduino IDE**.
    * N'oubliez pas de s√©lectionner la carte (Raspberry Pi Pico) et le port correct avant de cliquer sur le bouton **Upload**.

.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/71854882-0c1b-4d09-b3e7-5ef7272f7293/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

Lorsque le programme est en cours d'ex√©cution, vous verrez les LED s'allumer une par une.

**Comment √ßa marche ?**

D√©clarez un tableau, stockez plusieurs nombres binaires de 8 bits qui sont utilis√©s pour changer l'√©tat de fonctionnement des huit LED contr√¥l√©es par le 74HC595.

.. code-block:: arduino

    int datArray[] = {0b00000000, 0b00000001, 0b00000011, 0b00000111, 0b00001111, 0b00011111, 0b00111111, 0b01111111, 0b11111111};

R√©glez ``STcp`` sur niveau bas puis sur niveau haut. Cela g√©n√©rera une impulsion de front montant de ``STcp``.

.. code-block:: arduino

    digitalWrite(STcp,LOW); 

``shiftOut()`` est utilis√© pour d√©caler un octet de donn√©es un bit √† la fois, ce qui signifie d√©placer un octet de donn√©es dans datArray[num] vers le registre de d√©calage avec la broche DS. MSBFIRST signifie d√©placer √† partir des bits de poids fort.

.. code-block:: arduino

    shiftOut(DS,SHcp,MSBFIRST,datArray[num]);

Apr√®s que ``digitalWrite(STcp,HIGH)`` soit ex√©cut√©, STcp sera au front montant. √Ä ce moment, les donn√©es du registre de d√©calage seront d√©plac√©es vers le registre de m√©moire.

.. code-block:: arduino

    digitalWrite(STcp,HIGH);

Un octet de donn√©es sera transf√©r√© dans le registre de m√©moire apr√®s 8 it√©rations. Ensuite, les donn√©es du registre de m√©moire sont sorties vers le bus (Q0-Q7). Par exemple, d√©caler ``B00000001`` allumera la LED contr√¥l√©e par Q0 et √©teindra les LED contr√¥l√©es par Q1~Q7.
