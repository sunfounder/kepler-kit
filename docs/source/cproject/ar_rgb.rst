.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi, Arduino & ESP32 sur Facebook ! Plongez plus profond√©ment dans Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et tutoriels pour am√©liorer vos comp√©tences.
    - **Avant-premi√®res exclusives** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus exclusifs.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et promotions sp√©ciales.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _ar_rgb:

2.4 - Lumi√®re color√©e
==============================================

Comme nous le savons, la lumi√®re peut √™tre superpos√©e. Par exemple, m√©langer de la lumi√®re bleue et verte donne de la lumi√®re cyan, et de la lumi√®re rouge et verte donne de la lumi√®re jaune. 
Cela s'appelle le "m√©lange additif des couleurs".

* `Additive color - Wikipedia <https://en.wikipedia.org/wiki/Additive_color>`_

Sur la base de cette m√©thode, nous pouvons utiliser les trois couleurs primaires pour m√©langer la lumi√®re visible de n'importe quelle couleur en ajustant leur intensit√© respective. Par exemple, l'orange peut √™tre produit avec plus de rouge et moins de vert.

Dans ce chapitre, nous allons utiliser une LED RGB pour explorer le myst√®re du m√©lange additif des couleurs !

Une LED RGB √©quivaut √† encapsuler une LED rouge, une LED verte et une LED bleue sous un m√™me capuchon, et les trois LED partagent une cathode commune.
Comme le signal √©lectrique est fourni pour chaque anode, la lumi√®re de la couleur correspondante peut √™tre affich√©e. En changeant l'intensit√© du signal √©lectrique de chaque anode, il est possible de produire diverses couleurs.

* :ref:`cpn_rgb`

**Composants requis**

Dans ce projet, nous avons besoin des composants suivants.

Il est pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN D'ACHAT
    *   - Kit Kepler	
        - 450+
        - |link_kepler_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - N¬∞
        - INTRODUCTION DES COMPOSANTS	
        - QUANTIT√â
        - LIEN D'ACHAT

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - C√¢ble Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Plusieurs
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_resistor`
        - 3(1-330Œ©, 2-220Œ©)
        - |link_resistor_buy|
    *   - 6
        - :ref:`cpn_rgb`
        - 1
        - |link_rgb_led_buy|

**Sch√©ma**

|sch_rgb|

Les broches PWM GP13, GP14 et GP15 contr√¥lent respectivement les broches rouge, verte et bleue de la LED RGB, et la cathode commune est connect√©e √† la masse (GND). Cela permet √† la LED RGB d'afficher une couleur sp√©cifique en superposant les lumi√®res sur ces broches avec diff√©rentes valeurs PWM.

**C√¢blage**

|img_rgb_pin|

Une LED RGB poss√®de 4 broches : la plus longue est la cathode commune, qui est g√©n√©ralement connect√©e √† GND, la broche √† gauche de la plus longue est la broche rouge, et les deux broches √† droite sont les broches verte et bleue.

|wiring_rgb|

**Code**

Ici, nous pouvons choisir notre couleur pr√©f√©r√©e dans un logiciel de dessin (comme Paint) et l'afficher avec la LED RGB.

.. note::

    * Vous pouvez ouvrir le fichier ``2.4_colorful_light.ino`` dans le chemin ``kepler-kit-main/arduino/2.4_colorful_light``.
    * Ou copiez ce code dans **Arduino IDE**.
    * N'oubliez pas de s√©lectionner la carte (Raspberry Pi Pico) et le port correct avant de cliquer sur le bouton **Upload**.

.. raw:: html
    
    <iframe src=https://create.arduino.cc/editor/sunfounder01/c869191c-026c-4aac-8396-09eaf6ee2204/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

|img_take_color|

√âcrivez la valeur RGB dans ``color_set()``, et vous verrez la LED RGB s'allumer avec les couleurs que vous souhaitez.


**Comment √ßa marche ?**

Dans cet exemple, la fonction utilis√©e pour assigner des valeurs aux trois broches de la LED RGB est encapsul√©e dans une sous-fonction ind√©pendante ``color()``.

.. code-block:: C

    void color (unsigned char red, unsigned char green, unsigned char blue)
    {
        analogWrite(redPin, red);
        analogWrite(greenPin, green);
        analogWrite(bluePin, blue);
    }

Dans ``loop()``, les valeurs RGB fonctionnent comme argument d'entr√©e pour appeler la fonction ``color()`` afin que la LED RGB puisse √©mettre diff√©rentes couleurs.

.. code-block:: C

    void loop() 
    {    
        color(255, 0, 0); // rouge 
        delay(1000); 
        color(0, 255, 0); // vert  
        delay(1000);  
        color(0, 0, 255); // bleu  
        delay(1000);
    }

