.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _per_swing_servo:

2.7 Schwenk-Servo
=====================

In diesem Projekt verwenden wir ein Servo und ein Potentiometer, um ein Lenkrad zu simulieren. Das Drehen des Potentiometers bewirkt, dass das Servo gleichzeitig schwenkt.

**Ben√∂tigte Komponenten**

F√ºr dieses Projekt ben√∂tigen wir die folgenden Komponenten.

Es ist definitiv praktisch, ein komplettes Set zu kaufen. Hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name
        - KOMPONENTEN IN DIESEM SET
        - LINK
    *   - Kepler Kit
        - 450+
        - |link_kepler_kit|

Alternativ k√∂nnen Sie die Komponenten auch einzeln √ºber die untenstehenden Links kaufen.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - KOMPONENTE
        - ANZAHL
        - LINK

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - Micro-USB-Kabel
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Mehrere
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_servo`
        - 1
        - |link_servo_buy|
    *   - 6
        - :ref:`cpn_potentiometer`
        - 1
        - |link_potentiometer_buy|

**Verkabelung**

|controllable_servo0|

* Das orangefarbene Kabel (Signal) des Servos ist mit GP15 verbunden, das rote Kabel (Strom) mit VBUS und das braune Kabel (Masse) mit GND.
* Das Potentiometer ist ein Widerstandselement mit 3 Anschl√ºssen: Die beiden √§u√üeren Pins sind mit 5V und GND verbunden, der mittlere Pin mit GP26(A0).

**Code**

.. note::

    * Sie k√∂nnen sich an der untenstehenden Abbildung orientieren, um den Code per Drag-and-Drop zu erstellen.
    * Importieren Sie ``2.7_swing_servo.png`` aus dem Pfad ``kepler-kit-main\piper``. Detaillierte Anleitungen finden Sie unter :ref:`import_code_piper`.

|controllable_servo|

* Nach dem Anschluss des Pico W klicken Sie auf die **Start**-Taste und der Code wird ausgef√ºhrt.
* Drehen Sie das Potentiometer und das Servo folgt. Um es deutlich zu sehen, k√∂nnen Sie einen Steuerkn√ºppel in die Servo-Welle einsetzen.

**Funktionsweise**

|controllable_servo1|

Stellen Sie die Rotationsgeschwindigkeit von Pin 15 (Servo) auf 15% ein.

* [servo pin() set speed to ()%]: Dient zur Einstellung der Rotationsgeschwindigkeit des Servo-Pins. Der Bereich liegt zwischen 0% und 100%.

|controllable_servo2|

Erstellen Sie eine Variable [Winkel], lesen Sie dann die Spannung von A0. Verwenden Sie den Block [Wert () von () bis () umrechnen], um die Spannung von A0 im Bereich von 0 bis 3,3V auf einen Winkelbereich von 0 bis 180¬∞ umzurechnen. Nutzen Sie den umgerechneten Winkel als Rotationswinkel des Servos.

* [Wert () von () bis () umrechnen]: Ein Wert wird von einem Bereich in einen anderen umgerechnet.

.. note::
    Die Spannung von A0~A2 liegt im Bereich von 0~3,3V, selbst wenn Ihre Stromversorgung an VBUS (5V) angeschlossen ist.
