.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder des passionn√©s de Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez au c≈ìur des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour d√©velopper vos comp√©tences.
    - **Aper√ßus exclusifs** : Recevez en avant-premi√®re les annonces de nouveaux produits et des aper√ßus exclusifs.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et promotions festives.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _per_swing_servo:


2.7 Balancement du Servo
============================

Dans ce projet, nous utilisons un servo et un potentiom√®tre pour simuler un volant. En tournant le potentiom√®tre, le servo tourne √©galement.

**Composants requis**

Pour ce projet, nous avons besoin des composants suivants.

Il est tr√®s pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - COMPOSANTS DANS CE KIT
        - LIEN
    *   - Kit Kepler
        - 450+
        - |link_kepler_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - N¬∞
        - COMPOSANT
        - QUANTIT√â
        - LIEN

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - C√¢ble Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Plusieurs
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_servo`
        - 1
        - |link_servo_buy|
    *   - 6
        - :ref:`cpn_potentiometer`
        - 1
        - |link_potentiometer_buy|


**C√¢blage**

|controllable_servo0|

* Le fil orange (signal) du servo est connect√© √† GP15, le fil rouge (alimentation) est connect√© √† VBUS, et le fil marron (masse) est connect√© √† GND.
* Le potentiom√®tre est un √©l√©ment r√©sistif √† 3 bornes, les 2 broches lat√©rales sont connect√©es √† 5V et GND, et la broche centrale est connect√©e √† GP26(A0).

**Code**

.. note::

    * Vous pouvez vous r√©f√©rer √† l'image ci-dessous pour √©crire le code en glissant-d√©posant.
    * Importez ``2.7_swing_servo.png`` depuis le chemin ``kepler-kit-main\piper``. Pour des tutoriels d√©taill√©s, veuillez consulter :ref:`import_code_piper`.

|controllable_servo|

* Apr√®s avoir connect√© le Pico W, cliquez sur le bouton **Start** et le code commencera √† s'ex√©cuter.
* Tournez le potentiom√®tre et le servo suivra. Pour mieux voir le mouvement, vous pouvez ins√©rer un bras oscillant sur l'axe du servo.

**Comment √ßa fonctionne ?**

|controllable_servo1|

R√©glez la vitesse de rotation de la broche 15 (servo) √† 15%.

* [servo pin() set speed to ()%] : Utilis√© pour r√©gler la vitesse de rotation de la broche du servo, la plage est de 0 % √† 100 %.

|controllable_servo2|

Cr√©ez une variable [angle], puis lisez la tension de A0. Utilisez le bloc [map value () from () to ()], mappez la tension de A0 de la plage de 0 √† 3,3V √† une plage de 0 √† 180¬∞, puis utilisez l'angle mapp√© comme angle de rotation du servo.

* [map value () from () to ()] : permet de mapper une valeur d'une plage √† une autre.

.. note::
    La tension des broches A0~A2 se situe dans la plage de 0 √† 3,3V, m√™me si votre alimentation est connect√©e √† VBUS (5V).
