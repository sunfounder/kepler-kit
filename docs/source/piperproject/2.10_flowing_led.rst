.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _per_flowing_leds:

2.10 Flie√üende LEDs
====================

Das Kit ist mit einem WS2812 RGB LED-Streifen ausgestattet, der bunte Farben anzeigen kann, und jede LED kann unabh√§ngig gesteuert werden.

In diesem Projekt verwenden wir den Neigungsschalter, um die Flie√ürichtung der LEDs auf dem WS2812 RGB LED-Streifen zu steuern.

**Ben√∂tigte Komponenten**

F√ºr dieses Projekt ben√∂tigen wir die folgenden Komponenten.

Ein komplettes Set zu kaufen ist definitiv praktisch. Hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name	
        - KOMPONENTEN IN DIESEM SET
        - LINK
    *   - Kepler Kit	
        - 450+
        - |link_kepler_kit|

Sie k√∂nnen die Komponenten auch einzeln √ºber die untenstehenden Links erwerben.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - KOMPONENTE	
        - ANZAHL
        - LINK
    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - Micro-USB-Kabel
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Mehrere
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_resistor`
        - 1(10KŒ©)
        - |link_resistor_buy|
    *   - 6
        - :ref:`cpn_tilt`
        - 1
        - 
    *   - 7
        - :ref:`cpn_ws2812`
        - 1
        - |link_ws2812_buy|

**Verkabelung**

|WS2812_Flow_friz|

**Code**

.. note::

    * Sie k√∂nnen sich an der Abbildung unten orientieren, um den Code per Drag-and-Drop zu schreiben. 
    * Importieren Sie ``2.10_flowing_led.png`` aus dem Verzeichnis ``kepler-kit-main\piper``. Detaillierte Anleitungen finden Sie unter :ref:`import_code_piper`.

|neopixel|

Nach dem Anschluss des Pico W klicken Sie auf die **Start**-Taste, und der Code wird ausgef√ºhrt.

Wenn der Neigungsschalter vertikal positioniert ist, leuchten die LEDs auf dem WS2812 RGB LED-Streifen nacheinander in Gr√ºn auf. Wenn der Neigungsschalter horizontal positioniert ist, leuchten die LEDs in umgekehrter Richtung in Gr√ºn auf.

**Programmierung**

**Schritt 1**: Verwenden Sie den [setup neopixel pin() pixels()] Block aus der **Actions**-Palette, um den WS2812 RGB LED-Streifen zu initialisieren. **0** bedeutet, dass der angeschlossene Pin GP0 ist und **8** bedeutet, dass 8 RGB-LEDs auf dem WS2812 RGB LED-Streifen vorhanden sind.

|neo1|

**Schritt 2**: Klicken Sie in der **Variables**-Palette auf den **Create variable**-Button, um eine Variable namens **i** zu erstellen, die die LEDs auf dem WS2812 RGB LED-Streifen repr√§sentiert.

|neo2|

**Schritt 3**: Setzen Sie den Anfangswert der Variable **i** auf 1 (die LED in der N√§he der Kabel), verwenden Sie dann im [repeat forever]-Block [() mod ()], um den Wert von i von 0 bis 7 festzulegen.

|neo3|

**Schritt 4**: Setzen Sie alle Neopixel auf Schwarz, um alle LEDs auszuschalten, und verwenden Sie dann [updates neopixels], um diesen Effekt auf den WS2812 RGB LED-Streifen zu √ºbertragen.

|neo4|

**Schritt 5**: Wenn Pin14 hoch gelesen wird, lassen Sie die LEDs auf dem WS2812 RGB LED-Streifen nacheinander in Gr√ºn aufleuchten, ansonsten leuchten sie in umgekehrter Reihenfolge in Gr√ºn auf.

|neo5|

* [change () by ()]: Wird verwendet, um den Wert einer Variable um einen bestimmten Schritt zu erh√∂hen (positiv) oder zu verringern (negativ).
