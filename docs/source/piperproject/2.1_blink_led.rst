.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder des passionn√©s de Raspberry Pi, Arduino et ESP32 sur Facebook ! Explorez plus en profondeur Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus exclusifs.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et concours** : Participez √† des concours et √† des promotions sp√©ciales pour les f√™tes.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _per_blink:

2.1 Faire clignoter une LED
===============================

Dans ce projet, nous allons faire clignoter une LED externe. Pour utiliser des composants √©lectroniques √©tendus, une plaque de prototypage sans soudure sera le partenaire id√©al pour les utilisateurs d√©butants.

La plaque de prototypage est une plaque en plastique rectangulaire avec une s√©rie de petits trous. Ces trous nous permettent d'ins√©rer facilement des composants √©lectroniques et de construire des circuits √©lectroniques. La plaque ne fixe pas d√©finitivement les composants, ce qui rend facile la r√©paration du circuit et le red√©marrage en cas d'erreur.

**Composants requis**

Pour ce projet, nous avons besoin des composants suivants.

Il est tr√®s pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - COMPOSANTS DANS CE KIT
        - LIEN
    *   - Kit Kepler
        - 450+
        - |link_kepler_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - N¬∞
        - COMPOSANT
        - QUANTIT√â
        - LIEN

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - C√¢ble Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Plusieurs
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_resistor`
        - 1(220Œ©)
        - |link_resistor_buy|
    *   - 6
        - :ref:`cpn_led`
        - 1
        - |link_led_buy|

**C√¢blage**

|wiring_led|

* Les anneaux de couleur de la r√©sistance de 220 ohms sont rouge, rouge, noir, noir et marron.

* La patte la plus longue de la LED est appel√©e anode (+), la patte la plus courte est la cathode (-).


**Code**

.. note::

    * Vous pouvez vous r√©f√©rer √† l'image ci-dessous pour √©crire le code en glissant-d√©posant.
    * Importez ``2.1_blink_led.png`` depuis le chemin ``kepler-kit-main\piper``. Pour des tutoriels d√©taill√©s, veuillez consulter :ref:`import_code_piper`.


|blink1|

Apr√®s avoir connect√© le Pico W, cliquez sur le bouton **Start** et vous verrez la LED clignoter. Pour plus de d√©tails, vous pouvez vous r√©f√©rer √† :ref:`quick_guide_piper`.

**Comment √ßa marche ?**

Voici le fonctionnement de la boucle : activez la broche 15 pour allumer la LED, attendez une seconde, puis d√©sactivez la broche 15 pour √©teindre la LED. Attendez une seconde puis relancez le cycle pr√©c√©dent, vous verrez ainsi la LED alterner entre allum√©e et √©teinte.

* [start] : Ce bloc constitue la structure de base du programme et repr√©sente le d√©but du programme.
* [repeat forever do() wait()seconds] : Indique que les blocs √† l'int√©rieur seront ex√©cut√©s en boucle, et l'intervalle de temps d'ex√©cution est d√©fini par vous-m√™me.
* [turn pin () ON/OFF] : Indique qu'une broche est plac√©e en niveau haut (ON) ou en niveau bas (OFF).
* [wait () seconds] : D√©finit l'intervalle d'ex√©cution entre les blocs.
