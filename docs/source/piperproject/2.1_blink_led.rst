.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _per_blink:

2.1 LED Blinken Lassen
=======================

F√ºr dieses Projekt wollen wir eine externe LED zum Blinken bringen. Ein steckbares Breadboard ist dabei der beste Partner f√ºr Anf√§nger, wenn es um den Einsatz erweiterter elektronischer Bauteile geht.

Das Breadboard ist eine rechteckige Kunststoffplatte mit einer Reihe kleiner L√∂cher. Diese L√∂cher erm√∂glichen uns das einfache Einstecken von elektronischen Bauteilen und das Aufbauen von Schaltkreisen. Die Bauteile werden dabei nicht permanent fixiert, was die Fehlerkorrektur und das Neustarten des Projekts erleichtert.

**Ben√∂tigte Bauteile**

F√ºr dieses Projekt ben√∂tigen wir folgende Komponenten.

Es ist definitiv praktisch, ein komplettes Set zu kaufen, hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Bezeichnung
        - ARTIKEL IN DIESEM SET
        - LINK
    *   - Kepler Kit
        - 450+
        - |link_kepler_kit|

Die Bauteile k√∂nnen auch einzeln √ºber die unten stehenden Links erworben werden.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - KOMPONENTE
        - ANZAHL
        - LINK

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - Micro-USB-Kabel
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Mehrere
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_resistor`
        - 1 (220Œ©)
        - |link_resistor_buy|
    *   - 6
        - :ref:`cpn_led`
        - 1
        - |link_led_buy|

**Verdrahtung**

|wiring_led|

* Der Farbring des 220-Ohm-Widerstands ist rot, rot, schwarz, schwarz und braun.

* Das l√§ngere Bein der LED ist als Anode (+) bekannt, das k√ºrzere als Kathode (-).

**Code**

.. Hinweis::

    * Um den Code zu schreiben, k√∂nnen Sie sich an dem unten stehenden Bild orientieren.
    * Importieren Sie ``2.1_blink_led.png`` aus dem Verzeichnis ``kepler-kit-main\piper``. F√ºr detaillierte Anleitungen siehe :ref:`import_code_piper`.

|blink1|

Nachdem der Pico W angeschlossen wurde, klicken Sie auf die **Start**-Schaltfl√§che, und die LED wird anfangen zu blinken. Weitere Details finden Sie unter :ref:`quick_guide_piper`.

**Funktionsweise**

Dies ist der Hauptteil der Schleife: Schalten Sie den Pin15 ein, um die LED leuchten zu lassen, warten Sie eine Sekunde und schalten Sie den Pin15 aus, damit die LED erlischt. Warten Sie eine weitere Sekunde und wiederholen Sie den vorherigen Zyklus, sodass die LED zwischen den Zust√§nden Ein und Aus wechselt.

* [start]: Dieser Block stellt das Grundger√ºst des Programms dar und markiert dessen Beginn.
* [repeat forever do() wait()seconds]: Besagt, dass die darin enthaltenen Bl√∂cke wiederholt ausgef√ºhrt werden, wobei das Ausf√ºhrungsintervall selbst definiert wird.
* [turn pin () ON/OFF]: Legt fest, dass ein bestimmter Pin auf hohem (ON) oder niedrigem (OFF) Niveau liegt.
* [wait () seconds]: Setzt das Ausf√ºhrungsintervall zwischen den Bl√∂cken fest.
