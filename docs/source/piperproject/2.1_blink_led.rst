.. note::

    こんにちは、SunFounderのRaspberry Pi & Arduino & ESP32愛好家コミュニティへようこそ！Facebook上でRaspberry Pi、Arduino、ESP32についてもっと深く掘り下げ、他の愛好家と交流しましょう。

    **参加する理由は？**

    - **エキスパートサポート**：コミュニティやチームの助けを借りて、販売後の問題や技術的な課題を解決します。
    - **学び＆共有**：ヒントやチュートリアルを交換してスキルを向上させましょう。
    - **独占的なプレビュー**：新製品の発表や先行プレビューに早期アクセスしましょう。
    - **特別割引**：最新製品の独占割引をお楽しみください。
    - **祭りのプロモーションとギフト**：ギフトや祝日のプロモーションに参加しましょう。

    👉 私たちと一緒に探索し、創造する準備はできていますか？[|link_sf_facebook|]をクリックして今すぐ参加しましょう！

.. _per_blink:

2.1 LEDの点滅
===============

このプロジェクトでは、拡張LEDライトを点滅させることを目的としています。拡張電子部品を使用するには、はんだなしのブレッドボードが初心者にとって最も強力なパートナーとなるでしょう。

ブレッドボードは、多数の小さな穴が開いた長方形のプラスチック板です。これらの穴によって、簡単に電子部品を挿入し、電子回路を組むことができます。ブレッドボードは電子部品を永久に固定しないため、回路を修理したり、失敗した場合にやり直すことが容易です。

**必要な部品**

このプロジェクトで必要な部品は以下の通りです。

一式を購入する方が確実に便利です、リンクはこちらです： 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - 名前	
        - このキットに含まれるアイテム
        - リンク
    *   - ケプラーキット	
        - 450以上
        - |link_kepler_kit|

以下のリンクから個別にも購入可能です。

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - 部品	
        - 個数
        - リンク

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - マイクロUSBケーブル
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - 数本
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_resistor`
        - 1（220Ω）
        - |link_resistor_buy|
    *   - 6
        - :ref:`cpn_led`
        - 1
        - |link_led_buy|

**配線**

|wiring_led|

* 220オームの抵抗のカラーリングは、赤、赤、黒、黒、茶です。

* LEDの長いリードはアノード（+）、短いリードはカソード（-）として知られています。

**コード**

.. note::

    * 下の画像を参考に、ドラッグアンドドロップでコードを書くことができます。
    * 詳細なチュートリアルについては、 :ref:`import_code_piper` を参照してください。

|blink1|

Pico Wに接続した後、 **スタート** ボタンをクリックするとLEDが点滅します。詳細については、 :ref:`quick_guide_piper` を参照してください。

**仕組み**

これがループの本体です：ピン15をオンにしてLEDを点灯し、1秒待ってから、ピン15をオフにしてLEDを消灯します。1秒待ってから前のサイクルを再実行するので、LEDは点灯と消灯を交互に繰り返している状態になります。

* [start]: このブロックはプログラムの基本的なフレームワークであり、プログラムの開始を表しています。
* [repeat forever do() wait()seconds]: これに含まれるブロックが繰り返し実行され、実行時間間隔は自分で定義します。
* [turn pin () ON/OFF]: 特定のピンを高レベル（ON）または低レベル（OFF）にすることを示しています。
* [wait () seconds]: ブロック間の実行間隔を設定します。

