.. note::

    Ciao, benvenuto nella Community di SunFounder Raspberry Pi & Arduino & ESP32 su Facebook! Approfondisci l'uso di Raspberry Pi, Arduino e ESP32 con altri appassionati.

    **Perch√© unirti a noi?**

    - **Supporto Esperto**: Risolvi problemi post-vendita e sfide tecniche con l'aiuto della nostra community e del nostro team.
    - **Impara e Condividi**: Scambia suggerimenti e tutorial per migliorare le tue competenze.
    - **Anteprime Esclusive**: Accedi in anteprima agli annunci di nuovi prodotti e alle anteprime esclusive.
    - **Sconti Speciali**: Goditi sconti esclusivi sui nostri prodotti pi√π recenti.
    - **Promozioni Festive e Giveaway**: Partecipa a giveaway e promozioni festive.

    üëâ Pronto a esplorare e creare con noi? Clicca su [|link_sf_facebook|] e unisciti oggi stesso!

.. _per_blink:

2.1 Lampeggio LED
====================

In questo progetto, intendiamo far lampeggiare il LED esterno. Per utilizzare componenti elettronici estesi, una breadboard senza saldature sar√† il partner pi√π potente per gli utenti principianti.

La breadboard √® una piastra rettangolare di plastica con un sacco di piccoli fori. Questi fori ci permettono di inserire facilmente componenti elettronici e costruire circuiti elettronici. La breadboard non fissa permanentemente i componenti elettronici, il che ci facilita la riparazione del circuito e il ripristino quando commettiamo un errore.

**Componenti Necessari**

In questo progetto, abbiamo bisogno dei seguenti componenti.

√à sicuramente conveniente acquistare un kit completo, ecco il link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nome
        - ELEMENTI IN QUESTO KIT
        - LINK
    *   - Kepler Kit
        - 450+
        - |link_kepler_kit|

Puoi anche acquistarli separatamente dai link qui sotto.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - COMPONENTE
        - QUANTIT√Ä
        - LINK

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - Cavo Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Diversi
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_resistor`
        - 1 (220Œ©)
        - |link_resistor_buy|
    *   - 6
        - :ref:`cpn_led`
        - 1
        - |link_led_buy|

**Cablaggio**

|wiring_led|

* L'anello colorato della resistenza da 220 ohm √® rosso, rosso, nero, nero e marrone.

* Il terminale pi√π lungo del LED √® noto come anodo (+), mentre il terminale pi√π corto √® il catodo (-).

**Codice**

.. note::

    * Puoi fare riferimento all'immagine sottostante per scrivere il codice trascinando e rilasciando i blocchi.
    * Importa ``2.1_blink_led.png`` dal percorso ``kepler-kit-main\piper``. Per tutorial dettagliati, fai riferimento a :ref:`import_code_piper`.

|blink1|

Dopo aver collegato il Pico W, fai clic sul pulsante **Start** e vedrai il LED lampeggiare. Per ulteriori dettagli, puoi fare riferimento a :ref:`quick_guide_piper`.


**Come Funziona?**


Questo √® il corpo del ciclo: accendi il pin15 per accendere il LED, attendi un secondo, quindi spegni il pin15 per spegnere il LED. Attendi un secondo e poi ripeti il ciclo precedente, in modo che il LED alterni tra acceso e spento.

* [start]: Questo blocco √® la struttura di base del programma e rappresenta l'inizio del programma.
* [repeat forever do() wait()seconds]: Significa che i blocchi all'interno verranno eseguiti ripetutamente, e l'intervallo di esecuzione √® definito da te.
* [turn pin () ON/OFF]: Indica che un determinato pin √® posto in stato alto (ON) o basso (OFF).
* [wait () seconds]: Imposta l'intervallo di esecuzione tra i blocchi.

