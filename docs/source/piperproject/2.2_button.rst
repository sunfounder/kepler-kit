.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _per_button:

2.2 Taster
===============

In diesem Projekt werden wir lernen, wie man eine LED mit Hilfe eines Tasters ein- oder ausschaltet.

**Ben√∂tigte Bauteile**

F√ºr dieses Projekt ben√∂tigen wir folgende Komponenten.

Es ist nat√ºrlich praktisch, ein ganzes Kit zu kaufen, hier der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name
        - ARTIKEL IN DIESEM SET
        - LINK
    *   - Kepler Kit
        - 450+
        - |link_kepler_kit|

Die Bauteile k√∂nnen auch einzeln √ºber die unten stehenden Links erworben werden.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - KOMPONENTE
        - ANZAHL
        - LINK

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - Micro-USB-Kabel
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Mehrere
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_resistor`
        - 2 (220Œ©, 10KŒ©)
        - |link_resistor_buy|
    *   - 6
        - :ref:`cpn_led`
        - 1
        - |link_led_buy|
    *   - 7
        - :ref:`cpn_button`
        - 1
        - |link_button_buy|

**Verdrahtung**

|button0|

* Ein Pin des Tasters ist mit 3,3V verbunden, der gegen√ºberliegende Pin mit GP14. Wenn der Taster gedr√ºckt wird, liegt an GP14 eine hohe Spannung an.
* Wenn der Taster nicht gedr√ºckt ist, befindet sich GP14 in einem unbestimmten Zustand und kann hoch oder niedrig sein. Um einen stabilen niedrigen Pegel zu erhalten, wenn der Taster nicht gedr√ºckt ist, muss GP14 √ºber einen 10K-Pull-down-Widerstand erneut mit GND verbunden werden.

**Code**

.. Hinweis::

    * Sie k√∂nnen den Code durch Ziehen und Ablegen gem√§√ü dem unten stehenden Bild schreiben.
    * Importieren Sie ``2.2_button.png`` aus dem Pfad ``kepler-kit-main\piper``. F√ºr detaillierte Anleitungen siehe :ref:`import_code_piper`.

|2.2_button|

Nachdem der Pico W angeschlossen wurde, klicken Sie auf die **Start**-Schaltfl√§che und der Code beginnt auszuf√ºhren. Wenn der Taster gedr√ºckt wird, leuchtet die LED auf. Wird der Taster losgelassen, erlischt die LED.

**Funktionsweise**

Wenn der Taster gedr√ºckt ist, ist Pin14 hoch. Wenn also Pin14 hoch gelesen wird, schalten Sie Pin15 ein (LED leuchtet); andernfalls schalten Sie Pin15 aus (LED ist aus).

* [if () do () else ()]: Dies ist ein Bedingungsblock. Je nach Zustand nach dem [if]-Block wird entschieden, ob die Bl√∂cke im [do]-Block oder die Bl√∂cke im [else]-Block ausgef√ºhrt werden.
* [is pin () HIGH]: Dient zum Auslesen des Pegels eines bestimmten Pins. Wenn der gelesene Pegel mit dem eingestellten HIGH/LOW √ºbereinstimmt, werden die Bl√∂cke im [do]-Block ausgef√ºhrt, andernfalls die Bl√∂cke im [else]-Block.
