.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder des passionn√©s de Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez au c≈ìur de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Recevez en avant-premi√®re les annonces de nouveaux produits et des avant-premi√®res exclusives.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et promotions festives.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _per_lucky_cat:

2.9 Chat Porte-Bonheur
==========================

Dans ce projet, nous utilisons un module PIR et un servo pour cr√©er un chat porte-bonheur. Le module PIR est utilis√© pour d√©tecter les visiteurs et le servo pour imiter le geste de la patte du chat porte-bonheur.

**Composants requis**

Pour ce projet, nous avons besoin des composants suivants. 

Il est tr√®s pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - COMPOSANTS DANS CE KIT
        - LIEN
    *   - Kit Kepler
        - 450+
        - |link_kepler_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - N¬∞
        - COMPOSANT
        - QUANTIT√â
        - LIEN

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - C√¢ble Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Plusieurs
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_servo`
        - 1
        - |link_servo_buy|
    *   - 6
        - :ref:`cpn_pir`
        - 1
        - |link_pir_buy|

**C√¢blage**

|lucky_cat0|

* Le fil orange (signal) du servo est connect√© √† GP15, le fil rouge (alimentation) est connect√© √† VBUS, et le fil marron (terre) est connect√© √† GND. 
* La broche centrale du module PIR est connect√©e au GP3.

**Code**

.. note::

    * Vous pouvez vous r√©f√©rer √† l'image ci-dessous pour √©crire le code en glissant-d√©posant.
    * Importez ``2.9_lucky_cat.png`` depuis le chemin ``kepler-kit-main\piper``. Pour des tutoriels d√©taill√©s, veuillez consulter :ref:`import_code_piper`.

|lucky_cat|

* Apr√®s avoir connect√© le Pico W, cliquez sur le bouton **Start** et le code commencera √† s'ex√©cuter.
* Lorsque le module PIR d√©tecte l'arriv√©e d'un visiteur, le servo oscille cinq fois de suite puis s'arr√™te.

**Comment √ßa fonctionne ?**

|lucky_cat1|

D√©finissez la vitesse de rotation de la broche 15 (servo) √† 15 %.

|lucky_cat2|

Si GP14 est bas, d√©finissez la variable [prestate] √† 0. Lorsque la variable [prestate] est √† 0 et que GP14 est haut (pr√©sence humaine d√©tect√©e), d√©finissez la variable [prestate] √† 1.

L'objectif est de faire fonctionner le code principal uniquement lorsque le GP14 passe de bas √† haut, et de ne r√©pondre qu'une seule fois si le module PIR continue de d√©tecter des personnes.

|lucky_cat3|

Faites osciller le servo 5 fois avec une rotation de 0 √† 180 degr√©s.

* [repeat () times do] : R√©p√©tez le code √† l'int√©rieur du bloc "do" un nombre limit√© de fois.
