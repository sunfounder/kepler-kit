.. note::

    こんにちは、SunFounderのRaspberry Pi & Arduino & ESP32愛好家コミュニティへようこそ！Facebook上でRaspberry Pi、Arduino、ESP32についてもっと深く掘り下げ、他の愛好家と交流しましょう。

    **参加する理由は？**

    - **エキスパートサポート**：コミュニティやチームの助けを借りて、販売後の問題や技術的な課題を解決します。
    - **学び＆共有**：ヒントやチュートリアルを交換してスキルを向上させましょう。
    - **独占的なプレビュー**：新製品の発表や先行プレビューに早期アクセスしましょう。
    - **特別割引**：最新製品の独占割引をお楽しみください。
    - **祭りのプロモーションとギフト**：ギフトや祝日のプロモーションに参加しましょう。

    👉 私たちと一緒に探索し、創造する準備はできていますか？[|link_sf_facebook|]をクリックして今すぐ参加しましょう！

.. _per_lucky_cat:

2.9 招き猫プロジェクト
==========================

このプロジェクトでは、PIRモジュールとサーボを使用して招き猫を作成します。PIRモジュールは来訪者を検出するために、サーボは招き猫の手を振る動作を模倣します。

**必要な部品**

このプロジェクトで必要な部品は以下の通りです。

一式を購入すると便利です、リンクはこちら：

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - 名称
        - キット内容
        - リンク
    *   - ケプラーキット
        - 450以上
        - |link_kepler_kit|

個別に購入することも可能です、以下のリンクを参照してください。

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - 部品
        - 数量
        - リンク

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - マイクロUSBケーブル
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - 数本
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_servo`
        - 1
        - |link_servo_buy|
    *   - 6
        - :ref:`cpn_pir`
        - 1
        - |link_pir_buy|

**配線**

|lucky_cat0|

* サーボのオレンジ色の線（信号）はGP15に接続し、赤い線（電源）はVBUSに、茶色の線（接地）はGNDに接続します。
* PIRモジュールの中央のピンはGP3に接続されます。

**プログラム**

.. note::

    * 下の画像を参考にして、ドラッグ&ドロップでプログラムを作成できます。
    * 詳細なチュートリアルは、 :ref:`import_code_piper` をご参照ください。

|lucky_cat|

* Pico Wを接続した後、 **スタート** ボタンをクリックしてプログラムを実行します。
* PIRモジュールが客の到来を検出すると、サーボは5回往復して停止します。

**仕組み**

|lucky_cat1|

ピン15（サーボ）の回転速度を15%に設定します。

|lucky_cat2|

もしGP14が低い場合、変数[prestate]を0に設定します。変数[prestate]が0でGP14が高い（人が検出された）場合、変数[prestate]を1に設定します。

これは、GP14が低から高に変わった場合にのみメインのコードが動作するようにし、PIRモジュールが連続して人を検出しても一度しか反応しないようにするためです。

|lucky_cat3|

サーボを0度から180度まで5回循環させます。

* [repeat () times do]: doブロック内のコードを指定した回数繰り返します。
