.. note::

    Ciao, benvenuto nella Community SunFounder Raspberry Pi & Arduino & ESP32 su Facebook! Approfondisci le tue conoscenze su Raspberry Pi, Arduino e ESP32 insieme ad altri appassionati.

    **Perch√© unirsi a noi?**

    - **Supporto esperto**: Risolvi i problemi post-vendita e le sfide tecniche con l'aiuto della nostra community e del nostro team.
    - **Impara e condividi**: Scambia suggerimenti e tutorial per migliorare le tue competenze.
    - **Anteprime esclusive**: Accedi in anteprima agli annunci dei nuovi prodotti e alle anticipazioni.
    - **Sconti speciali**: Approfitta di sconti esclusivi sui nostri prodotti pi√π recenti.
    - **Promozioni festive e giveaway**: Partecipa a giveaway e promozioni festive.

    üëâ Sei pronto a esplorare e creare con noi? Clicca su [|link_sf_facebook|] e unisciti oggi stesso!

.. _per_reversing_system:

2.11 Sistema di Retromarcia
==============================

In questo progetto abbiamo utilizzato un modulo ultrasonico e un cicalino attivo per creare un sistema di allarme per la retromarcia. Il modulo ultrasonico viene utilizzato per rilevare la distanza, e il cicalino emette suoni di allarme di diverse frequenze a seconda della distanza.

**Componenti necessari**

In questo progetto, abbiamo bisogno dei seguenti componenti.

√à sicuramente conveniente acquistare un kit completo, ecco il link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nome	
        - ELEMENTI IN QUESTO KIT
        - LINK
    *   - Kepler Kit	
        - 450+
        - |link_kepler_kit|

Puoi anche acquistarli separatamente dai link qui sotto.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - COMPONENTE	
        - QUANTIT√Ä
        - LINK

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - Cavo Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Diversi
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_transistor`
        - 1(S8050)
        - |link_transistor_buy|
    *   - 6
        - :ref:`cpn_resistor`
        - 1(1KŒ©)
        - |link_resistor_buy|
    *   - 7
        - Cicalino attivo :ref:`cpn_buzzer`
        - 1
        - 
    *   - 8
        - :ref:`cpn_ultrasonic`
        - 1
        - |link_ultrasonic_buy|

**Cablaggio**

|reversing_system0|


* I pin Echo e Trig del modulo ultrasonico sono collegati contemporaneamente a GP15, in modo che il modulo invii e riceva segnali da GP15.
* Il pin centrale del transistor collegato al cicalino √® collegato a GP14 tramite una resistenza da 1kŒ©.

**Codice**

.. note::

    * Puoi fare riferimento all'immagine sottostante per scrivere il codice trascinando e rilasciando.
    * Importa ``2.11_reversing_system.png`` dal percorso ``kepler-kit-main\piper``. Per tutorial dettagliati, fai riferimento a :ref:`import_code_piper`.

|reversing_system|

* Dopo aver collegato Pico W, fai clic sul pulsante **Start** e il codice inizier√† a funzionare.
* Quando la distanza di rilevamento ultrasonico √® inferiore a 5 cm, il cicalino emette un suono acuto (0,1s).
* Quando la distanza di rilevamento √® compresa tra 5 e 10 cm, il cicalino emette un suono leggermente pi√π lento (0,5s).
* Quando la distanza di rilevamento √® superiore a 10 cm, viene emesso un segnale acustico ogni 1 secondo.

**Come funziona?**

|reversing_system1|

Leggi la distanza (in cm) rilevata dall'ultrasonico e memorizzala nella variabile [distance].

|reversing_system2|

Quando la distanza √® inferiore o uguale a 5, imposta la variabile [intervals] su 0,1s. La variabile [intervals] rappresenta l'intervallo tra i suoni del cicalino.

|reversing_system3|

Quando la distanza √® maggiore di 5 e inferiore o uguale a 10, imposta [intervals] su 0,5s.

|reversing_system4|

Quando la distanza √® maggiore di 10, imposta il tempo di [intervals] su 1s.

|reversing_system5|

Infine, fai suonare il cicalino ogni [intervals] secondi.

