.. note::

    ¬°Hola! Bienvenido a la Comunidad de Entusiastas de SunFounder para Raspberry Pi, Arduino y ESP32 en Facebook. Sum√©rgete en el mundo de Raspberry Pi, Arduino y ESP32 junto a otros entusiastas.

    **¬øPor qu√© unirse?**

    - **Soporte de expertos**: Resuelve problemas post-venta y desaf√≠os t√©cnicos con la ayuda de nuestra comunidad y equipo.
    - **Aprende y comparte**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Preestrenos exclusivos**: Obt√©n acceso anticipado a nuevos lanzamientos de productos y adelantos.
    - **Descuentos especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s recientes.
    - **Promociones y sorteos festivos**: Participa en sorteos y promociones de temporada.

    üëâ ¬øListo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y √∫nete hoy mismo.

.. _per_service_bell:

2.3 Timbre de Servicio
==========================

Para este proyecto, usaremos un microinterruptor y un zumbador activo para crear un timbre de servicio. Pulsa el interruptor y el zumbador emitir√° un sonido.

El microinterruptor es tambi√©n un dispositivo de 3 pines, cuya secuencia es: C (pin com√∫n), NO (normalmente abierto) y NC (normalmente cerrado).

Cuando el microinterruptor no est√° presionado, el pin 1 (C) y el pin 3 (NC) est√°n conectados. Al presionar el interruptor, el pin 1 (C) se conecta con el pin 2 (NO).

|img_micro_switch|

**Componentes Necesarios**

Para este proyecto, necesitamos los siguientes componentes.

Un kit completo es conveniente, aqu√≠ tienes el enlace:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nombre	
        - COMPONENTES EN ESTE KIT
        - ENLACE
    *   - Kit Kepler	
        - 450+
        - |link_kepler_kit|


Tambi√©n puedes comprarlos por separado en los enlaces a continuaci√≥n.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - SN
        - COMPONENTE	
        - CANTIDAD
        - ENLACE

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - Cable Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Varios
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_resistor`
        - 2(1KŒ©, 10KŒ©)
        - |link_resistor_buy|
    *   - 6
        - :ref:`cpn_capacitor`
        - 1(104)
        - |link_capacitor_buy|
    *   - 7
        - :ref:`cpn_micro_switch`
        - 1
        - 
    *   - 8
        - :ref:`cpn_transistor`
        - 1(S8050)
        - |link_transistor_buy|
    *   - 9
        - Active :ref:`cpn_buzzer`
        - 1
        - 

**Conexi√≥n**

|service_bell0|

* De forma predeterminada, los pines 1 y 3 del microinterruptor est√°n conectados, y GP14 est√° en estado bajo. Al presionar el microinterruptor, GP14 cambia a alto.
* GP15 emite un estado alto para hacer sonar el zumbador.

**C√≥digo**

.. note::

    * Puedes referirte a la imagen a continuaci√≥n para escribir el c√≥digo arrastrando y soltando.
    * Importa ``2.3_service_bell.png`` desde la ruta ``kepler-kit-main\piper``. Para obtener tutoriales detallados, consulta :ref:`import_code_piper`.

|service_bell|

Despu√©s de conectar el Pico W, haz clic en el bot√≥n **Start** y el c√≥digo comenzar√° a ejecutarse. Pulsa el interruptor y el zumbador emitir√° un sonido.

.. note::
    El c√≥digo de este proyecto es exactamente el mismo que el del proyecto anterior :ref:`per_button`.

