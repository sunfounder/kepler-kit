.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder des passionn√©s de Raspberry Pi, Arduino et ESP32 sur Facebook ! Explorez plus en profondeur Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus exclusifs.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et concours** : Participez √† des concours et √† des promotions sp√©ciales pour les f√™tes.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _per_service_bell:

2.3 Sonnette de Service
============================

Pour ce projet, nous avons utilis√© un micro-interrupteur et un buzzer actif pour cr√©er une sonnette de service. Appuyez sur l'interrupteur et le buzzer √©met un son.

Le micro-interrupteur est √©galement un dispositif √† 3 broches, dont les broches sont C (broche commune), NO (normalement ouverte) et NC (normalement ferm√©e).

Lorsque le micro-interrupteur n'est pas press√©, les broches 1 (C) et 3 (NC) sont connect√©es ensemble, lorsqu'il est press√©, les broches 1 (C) et 2 (NO) sont connect√©es ensemble.

|img_micro_switch|

**Composants requis**

Pour ce projet, nous avons besoin des composants suivants.

Il est tr√®s pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - COMPOSANTS DANS CE KIT
        - LIEN
    *   - Kit Kepler
        - 450+
        - |link_kepler_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - N¬∞
        - COMPOSANT
        - QUANTIT√â
        - LIEN

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - C√¢ble Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Plusieurs
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_resistor`
        - 2 (1KŒ©, 10KŒ©)
        - |link_resistor_buy|
    *   - 6
        - :ref:`cpn_capacitor`
        - 1 (104)
        - |link_capacitor_buy|
    *   - 7
        - :ref:`cpn_micro_switch`
        - 1
        - 
    *   - 8
        - :ref:`cpn_transistor`
        - 1 (S8050)
        - |link_transistor_buy|
    *   - 9
        - Buzzer Actif :ref:`cpn_buzzer`
        - 1
        - 

**C√¢blage**

|service_bell0|

* Par d√©faut, les broches 1 et 3 du micro-interrupteur sont connect√©es ensemble et GP14 est √† un niveau bas. Lorsque le micro-interrupteur est press√©, GP14 est √† un niveau haut.
* GP15 √©met un signal haut pour faire retentir le buzzer.

**Code**

.. note::

    * Vous pouvez vous r√©f√©rer √† l'image ci-dessous pour √©crire le code en glissant-d√©posant.
    * Importez ``2.3_service_bell.png`` depuis le chemin ``kepler-kit-main\piper``. Pour des tutoriels d√©taill√©s, veuillez consulter :ref:`import_code_piper`.

|service_bell|

Apr√®s avoir connect√© le Pico W, cliquez sur le bouton **Start** et le code commencera √† s'ex√©cuter. Appuyez sur l'interrupteur et le buzzer √©mettra un son.

.. note::
    Le code de ce projet est exactement le m√™me que celui du projet pr√©c√©dent :ref:`per_button`.
