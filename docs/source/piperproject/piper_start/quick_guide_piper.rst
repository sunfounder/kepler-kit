.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi & Arduino & ESP32 sur Facebook ! Plongez au c≈ìur de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et concours** : Participez √† des concours et des promotions de vacances.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _quick_guide_piper:

1.2 Guide Rapide sur Piper Make
====================================

1. Cr√©er un Nouveau Projet
------------------------------

Maintenant que vous avez configur√© le Pico W, il est temps d'apprendre √† le programmer. 
Allons allumer la LED int√©gr√©e.

Passez en ``MODE CR√âATIF`` et cliquez sur le bouton **Nouveau Projet**, 
un nouveau projet appara√Ætra dans la section **MES PROJETS** et 
se verra attribuer un nom al√©atoire que vous pourrez modifier depuis la page de programmation.

|media9-s|

Ouvrez ensuite le nouveau projet que vous venez de cr√©er.

|media11-s|

Vous arrivez maintenant sur la page de programmation de Piper Make.

|piper_intro1|

* **D√âMARRER** : Utilis√© pour ex√©cuter le code, s'il est gris√©, cela signifie qu'il n'est pas connect√© au Pico W.
* **Palette de Blocs** : contient diff√©rents types de blocs.
* **CONNECTER** : Utilis√© pour se connecter au Pico W, il est vert lorsqu'il n'est pas connect√©, et devient **D√âCONNECTER(rouge)** lorsqu'il est connect√©.
* **Zone de Programmation** : Faites glisser les blocs ici pour terminer la programmation en les empilant.
* **Zone d'Outils** : Vous pouvez cliquer sur **VUE NUM√âRIQUE** pour voir la distribution des broches du Pico W ; visualiser les informations d'impression dans la **CONSOLE** ; lire les donn√©es dans **DATA**, et cliquer sur **Python** pour voir le code source Python.
* **Nom et description du projet** : Vous pouvez modifier le nom et la description du projet.
* **T√âL√âCHARGER** : Cliquez sur le bouton **T√âL√âCHARGER** pour le sauvegarder localement, g√©n√©ralement au format **|**. Vous pourrez l'importer via le bouton **Importer un Projet** sur la page d'accueil.

Cliquez sur la palette **Chip** et faites glisser le bloc [start] vers la **Zone de Programmation**.

|media12|

Ensuite, faites glisser le bloc [loop] de la palette **loops** sous le bloc [start], et d√©finissez l'intervalle de boucle √† 1 seconde.

|media14|

La LED int√©gr√©e du Raspberry Pi Pico est sur la broche 25, donc nous utilisons le bloc [allumer/√©teindre la broche ()] de la palette **Chip** pour la contr√¥ler.

|media15|

.. _connect_pico_per:

2. Connecter au Pico W
---------------------------

Cliquez maintenant sur le bouton **CONNECTER** pour se connecter au Pico W, apr√®s avoir cliqu√©, une nouvelle fen√™tre contextuelle appara√Ætra.

|media16|

S√©lectionnez le port reconnu **CircuitPython CDC control (COMXX)**, puis cliquez sur **Connecter**.

|pico_port|

Lorsque la connexion est r√©ussie, le **CONNECTER** vert en bas √† gauche devient **D√âCONNECTER** rouge.

|disconnect_per|

3. Ex√©cuter le Code
------------------------

Cliquez maintenant sur le bouton **D√âMARRER** pour ex√©cuter ce code et vous verrez la LED du Pico W s'allumer. Si le bouton est gris√©, cela signifie que le Pico W n'est pas connect√©, veuillez le reconnecter.

|media166|

Ensuite, √©teignez la broche 25 toutes les secondes dans le cycle, et cliquez de nouveau sur **D√âMARRER** en haut √† gauche, pour voir les voyants LED clignoter.

|media17|
