.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder des passionn√©s de Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez plus profond√©ment dans l'univers du Raspberry Pi, de l'Arduino et de l'ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour perfectionner vos comp√©tences.
    - **Aper√ßus exclusifs** : Recevez en avant-premi√®re des annonces de nouveaux produits et des aper√ßus exclusifs.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des promotions festives et √† des concours avec des lots √† gagner.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _per_water_tank:

2.6 R√©servoir d'eau intelligent
===================================

Dans ce projet, nous utilisons un module capteur de niveau d'eau et un servo-moteur pour simuler un r√©servoir d'eau intelligent. Le capteur de niveau d'eau est fix√© √† l'int√©rieur du r√©servoir pour mesurer le niveau d'eau, et lorsque celui-ci est inf√©rieur √† un seuil d√©fini, la vanne contr√¥l√©e par le servo-moteur s'ouvre pour laisser entrer l'eau.

**Composants requis**

Pour ce projet, nous avons besoin des composants suivants.

Il est tr√®s pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - COMPOSANTS DANS CE KIT
        - LIEN
    *   - Kit Kepler
        - 450+
        - |link_kepler_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 5 20 5 20
    :header-rows: 1

    *   - N¬∞
        - COMPOSANT
        - QUANTIT√â
        - LIEN

    *   - 1
        - :ref:`cpn_pico_w`
        - 1
        - |link_picow_buy|
    *   - 2
        - C√¢ble Micro USB
        - 1
        - 
    *   - 3
        - :ref:`cpn_breadboard`
        - 1
        - |link_breadboard_buy|
    *   - 4
        - :ref:`cpn_wire`
        - Plusieurs
        - |link_wires_buy|
    *   - 5
        - :ref:`cpn_servo`
        - 1
        - |link_servo_buy|
    *   - 6
        - :ref:`cpn_water_level`
        - 1
        - 

**C√¢blage**

|pin_adc|

Le Pico W dispose de trois broches GPIO pouvant utiliser une entr√©e analogique, GP26, GP27, GP28, c'est-√†-dire les canaux analogiques 0, 1 et 2.
De plus, il existe un quatri√®me canal analogique connect√© au capteur de temp√©rature int√©gr√©, qui ne sera pas abord√© ici.

|water_tank0|

* Le S du capteur de niveau d'eau est connect√© √† GP26(A0), le + √† VBUS et le - √† GND.
* Le fil orange (signal) du servo est connect√© √† GP15, le fil rouge (alimentation) est connect√© √† VBUS, et le fil marron (masse) est connect√© √† GND.

**Code**

.. note::

    * Vous pouvez vous r√©f√©rer √† l'image ci-dessous pour √©crire le code en glissant-d√©posant.
    * Importez ``2.6_water_tank.png`` depuis le chemin ``kepler-kit-main\piper``. Pour des tutoriels d√©taill√©s, veuillez consulter :ref:`import_code_piper`.

|water_tank|



Apr√®s avoir connect√© le Pico W, cliquez sur le bouton **Start** et le code commencera √† s'ex√©cuter. Lorsque le niveau d'eau est inf√©rieur √† 1/3 du capteur de niveau d'eau, le servo tourne √† 180 degr√©s pour simuler l'ouverture de l'arriv√©e d'eau ; lorsque le niveau d'eau est sup√©rieur √† 1/3, le servo tourne √† 0 degr√© pour imiter la fermeture de l'arriv√©e d'eau.

**Comment √ßa fonctionne ?**

|water_tank1|

D√©finissez la vitesse de rotation de la broche 15 (servo) √† 15 %.

* [servo pin() set speed to ()%] : Utilis√© pour r√©gler la vitesse de rotation de la broche servo, la plage est de 0 % √† 100 %.

|water_tank2|

Lisez la valeur de la broche A0 et stockez-la dans la variable [water_level].

* [set (water_level) to] : Utilis√© pour d√©finir la valeur de la variable, vous devez cr√©er la variable depuis la palette **Variables**.
* [read voltage from pin ()] : Utilis√© pour lire la tension des broches analogiques (A0~A2), la plage est de 0 √† 3,3V.

|water_tank3|

D√©finissez le seuil de tension √† 1. Lorsque la tension du capteur de niveau d'eau est inf√©rieure √† 1, faites tourner le servo √† 180¬∞ ; sinon, tournez-le √† 0¬∞.

* [servo pin () set angle to ()] : D√©finissez l'angle de la broche du servo, la plage est de 0 √† 180¬∞.
