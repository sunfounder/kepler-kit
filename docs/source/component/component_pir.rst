.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers du Raspberry Pi, de l'Arduino et de l'ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez vos probl√®mes apr√®s-vente et d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour d√©velopper vos comp√©tences.
    - **Avant-premi√®res exclusives** : Profitez d'un acc√®s anticip√© aux annonces de nouveaux produits et aux aper√ßus en avant-premi√®re.
    - **Remises sp√©ciales** : B√©n√©ficiez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions et cadeaux festifs** : Participez √† des promotions sp√©ciales et √† des tirages au sort pour les f√™tes.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _cpn_pir:

Module Capteur de Mouvement PIR
==================================

|img_pir|

Le capteur PIR d√©tecte le rayonnement infrarouge thermique, ce qui permet de rep√©rer la pr√©sence d'organismes √©mettant ce type de rayonnement.

Le capteur PIR est divis√© en deux fentes connect√©es √† un amplificateur diff√©rentiel. Lorsqu'un objet stationnaire se trouve devant le capteur, les deux fentes re√ßoivent la m√™me quantit√© de rayonnement et la sortie est nulle. En revanche, lorsqu'un objet en mouvement se trouve devant le capteur, l'une des fentes re√ßoit plus de rayonnement que l'autre, ce qui fait fluctuer la sortie, soit vers le haut, soit vers le bas. Ce changement de tension de sortie r√©sulte de la d√©tection du mouvement.

|img_PIR_working_principle|

Apr√®s avoir c√¢bl√© le module de d√©tection, une phase d'initialisation d'une minute est n√©cessaire. Pendant cette phase, le module peut √©mettre une sortie de 0 √† 3 fois par intervalles. Ensuite, il se met en mode veille. Veuillez √©loigner les sources de lumi√®re et autres sources de perturbation de la surface du module afin d'√©viter des d√©clenchements intempestifs dus aux signaux d'interf√©rence. Il est √©galement pr√©f√©rable d'utiliser le module dans un environnement sans trop de vent, car celui-ci peut aussi interf√©rer avec le capteur.

|img_pir_back|

**R√©glage de la distance**

En tournant le bouton du potentiom√®tre de r√©glage de la distance dans le sens horaire, la port√©e de d√©tection augmente, avec une distance maximale d'environ 0 √† 7 m√®tres. En le tournant dans le sens antihoraire, la port√©e de d√©tection diminue, avec une distance minimale d'environ 0 √† 3 m√®tres.

**R√©glage du d√©lai**

Tournez le bouton du potentiom√®tre de r√©glage du d√©lai dans le sens horaire pour augmenter le d√©lai de d√©tection. Le d√©lai maximal peut atteindre 300 secondes. √Ä l'inverse, en tournant dans le sens antihoraire, vous pouvez r√©duire le d√©lai √† un minimum de 5 secondes.

**Deux modes de d√©clenchement**

Choisissez diff√©rents modes √† l'aide du cavalier.

* **H** : Mode de d√©clenchement r√©p√©table. Apr√®s d√©tection d'un corps humain, le module √©met un signal de niveau haut. Pendant la p√©riode de d√©lai, si quelqu'un entre dans la zone de d√©tection, la sortie reste √† un niveau haut.
* **L** : Mode de d√©clenchement non r√©p√©table. Le module √©met un signal de niveau haut lorsqu'il d√©tecte un corps humain. Apr√®s le d√©lai, la sortie passe automatiquement de niveau haut √† niveau bas.

.. Exemple
.. -------------------

.. :ref:`Intruder Alarm`


**Exemple**

* :ref:`py_pir` (pour les utilisateurs de MicroPython)
* :ref:`py_passage_counter` (pour les utilisateurs de MicroPython)
* :ref:`ar_pir` (pour les utilisateurs d'Arduino)
* :ref:`per_lucky_cat` (pour les utilisateurs de Piper Make)
