.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _cpn_slide_switch:

Schiebeschalter
==================

|img_slide|

Ein Schiebeschalter funktioniert, wie der Name schon sagt, durch das Verschieben der Schaltleiste, um den Stromkreis zu schlie√üen oder zu unterbrechen und weitere Schaltkreise umzuschalten. Gebr√§uchliche Typen sind SPDT, SPTT, DPDT, DPTT usw. Der Schiebeschalter wird h√§ufig in Niederspannungsschaltkreisen eingesetzt. Er zeichnet sich durch Flexibilit√§t und Stabilit√§t aus und findet breite Anwendung in elektrischen Instrumenten und elektronischem Spielzeug.
Funktionsweise: Der mittlere Pin dient als fester Anschlusspunkt. Wenn Sie den Schieber nach links ziehen, werden die beiden linken Pins miteinander verbunden; ziehen Sie ihn nach rechts, werden die beiden rechten Pins verbunden. So fungiert er als Schalter, der Schaltkreise verbindet oder trennt. Siehe nachstehende Abbildung:

|img_slide_prin|

Das Schaltzeichen des Schiebeschalters ist unten dargestellt. Der Pin2 in der Abbildung bezieht sich auf den mittleren Pin.

|img_slide_symbol|

.. **Beispiel**

.. * :ref:`Abfrage des Tastenwertes` (F√ºr MicroPython-Anwender)
.. * :ref:`Warnleuchte` (F√ºr C/C++(Arduino)-Anwender)

**Beispiel**

* :ref:`py_slide` (F√ºr MicroPython-Anwender)
* :ref:`py_alarm_lamp` (F√ºr MicroPython-Anwender)
* :ref:`ar_slide` (F√ºr Arduino-Anwender)
* :ref:`per_drum_kit` (F√ºr Piper Make-Anwender)
