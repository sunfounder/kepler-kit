.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _cpn_transistor:

Transistor
============

|img_NPN&PNP|

Ein Transistor ist ein Halbleiterbauelement, das Strom mittels Strom steuert. Seine Hauptfunktionen bestehen darin, schwache Signale zu verst√§rken und als ber√ºhrungsloser Schalter zu agieren.

Ein Transistor besteht aus einer dreischichtigen Struktur aus P-Typ und N-Typ Halbleitern. Diese bilden die drei internen Regionen: Die d√ºnnere Mitte ist die Basisregion; die beiden anderen sind entweder N-Typ oder P-Typ ‚Äì die kleinere Region mit einer hohen Anzahl an Ladungstr√§gern ist die Emitterregion, w√§hrend die andere als Kollektorregion fungiert. Diese Anordnung erm√∂glicht die Verst√§rkerfunktion des Transistors. 
Aus diesen drei Regionen gehen jeweils drei Pole hervor: Basis (b), Emitter (e) und Kollektor (c). Sie bilden zwei P-N-√úberg√§nge, n√§mlich den Emitter- und den Kollektor√ºbergang. Die Pfeilrichtung im Transistorsymbol gibt die Richtung des Emitter√ºbergangs an.

* `P-N-√úbergang ‚Äì Wikipedia <https://de.wikipedia.org/wiki/Pn-√úbergang>`_

Je nach Halbleitertyp lassen sich Transistoren in zwei Gruppen einteilen: NPN und PNP. Aus den Abk√ºrzungen geht hervor, dass der erstere aus zwei N-Typ und einem P-Typ Halbleiter besteht, w√§hrend der letztere das Gegenteil darstellt. Siehe die untenstehende Abbildung.

.. note::
    Der s8550 ist ein PNP-Transistor und der s8050 ein NPN-Transistor. Sie sehen sehr √§hnlich aus; es ist also wichtig, die Beschriftungen genau zu pr√ºfen.

|img_transistor_symbol|

Ein NPN-Transistor wird durch ein Hochpegelsignal aktiviert, w√§hrend f√ºr einen PNP-Transistor ein Lowpegelsignal erforderlich ist. Beide Transistortypen werden h√§ufig als ber√ºhrungslose Schalter eingesetzt, wie in diesem Experiment.

* `S8050 Transistor Datenblatt <https://components101.com/asset/sites/default/files/component_datasheet/S8050%20Transistor%20Datasheet.pdf>`_
* `S8550 Transistor Datenblatt <https://www.mouser.com/datasheet/2/149/SS8550-118608.pdf>`_

Richten Sie die beschriftete Seite zu sich und die Pins nach unten. Die Pins von links nach rechts sind Emitter (e), Basis (b) und Kollektor (c).

|img_ebc|

.. note::
    * Die Basis dient als Steuereinheit f√ºr die gr√∂√üere Stromquelle.
    * Im NPN-Transistor ist der Kollektor die gr√∂√üere Stromquelle und der Emitter der Ausgang, im PNP-Transistor ist es genau umgekehrt.

.. Beispiel
.. -------------------

.. :ref:`Zwei Arten von Transistoren`


**Beispiel**

* :ref:`py_transistor` (F√ºr MicroPython-Nutzer)
* :ref:`py_relay` (F√ºr MicroPython-Nutzer)
* :ref:`py_ac_buz` (F√ºr MicroPython-Nutzer)
* :ref:`py_pa_buz` (F√ºr MicroPython-Nutzer)
* :ref:`py_light_theremin` (F√ºr MicroPython-Nutzer)
* :ref:`py_alarm_lamp` (F√ºr MicroPython-Nutzer)
* :ref:`py_music_player` (F√ºr MicroPython-Nutzer)
* :ref:`py_fruit_piano` (F√ºr MicroPython-Nutzer)
* :ref:`py_reversing_aid` (F√ºr MicroPython-Nutzer)
* :ref:`ar_ac_buz` (F√ºr Arduino-Nutzer)
* :ref:`ar_pa_buz` (F√ºr Arduino-Nutzer)
* :ref:`ar_transistor` (F√ºr Arduino-Nutzer)
* :ref:`ar_relay` (F√ºr Arduino-Nutzer)
* :ref:`per_service_bell` (F√ºr Piper Make-Nutzer)
* :ref:`per_reversing_system` (F√ºr Piper Make-Nutzer)
* :ref:`per_reaction_game` (F√ºr Piper Make-Nutzer)
