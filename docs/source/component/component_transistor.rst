.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez vos probl√®mes apr√®s-vente et d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Avant-premi√®res exclusives** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus exclusifs.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos derniers produits.
    - **Promotions festives et cadeaux** : Participez √† des tirages au sort et des promotions sp√©ciales.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _cpn_transistor:

Transistor
================

|img_NPN&PNP|

Un transistor est un dispositif semi-conducteur qui contr√¥le le courant par le courant. Il amplifie un signal faible pour en obtenir un de plus grande amplitude et peut √©galement √™tre utilis√© comme interrupteur sans contact.

Un transistor est une structure √† trois couches compos√©e de semi-conducteurs de type P et N, formant trois r√©gions internes. La plus fine au centre est la r√©gion de base ; les deux autres sont de type N ou P ‚Äî la plus petite r√©gion avec une forte densit√© de porteurs majoritaires est l'√©metteur, tandis que l'autre est le collecteur. Cette composition permet au transistor de fonctionner comme amplificateur.
De ces trois r√©gions, trois bornes sont g√©n√©r√©es : la base (b), l'√©metteur (e) et le collecteur (c). Elles forment deux jonctions P-N, appel√©es jonction √©metteur et jonction collecteur. La direction de la fl√®che dans le symbole du circuit du transistor indique celle de la jonction √©metteur.

* `P‚ÄìN junction - Wikipedia <https://en.wikipedia.org/wiki/P-n_junction>`_

Selon le type de semi-conducteur, les transistors peuvent √™tre divis√©s en deux groupes : les NPN et les PNP. D'apr√®s les abr√©viations, on comprend que les premiers sont constitu√©s de deux semi-conducteurs de type N et un de type P, tandis que les seconds sont √† l'inverse. Voir la figure ci-dessous.

.. note::
    s8550 est un transistor PNP et le s8050 est de type NPN. Ils se ressemblent beaucoup, il faut donc bien v√©rifier leurs √©tiquettes.

|img_transistor_symbol|


Lorsqu'un signal de niveau haut traverse un transistor NPN, il est activ√©. Un transistor PNP, en revanche, n√©cessite un signal de niveau bas pour √™tre command√©. Les deux types de transistors sont fr√©quemment utilis√©s pour les interrupteurs sans contact, comme dans cette exp√©rience.


* `S8050 Transistor Datasheet <https://components101.com/asset/sites/default/files/component_datasheet/S8050%20Transistor%20Datasheet.pdf>`_
* `S8550 Transistor Datasheet <https://www.mouser.com/datasheet/2/149/SS8550-118608.pdf>`_

Placez le c√¥t√© √©tiquette face √† vous et les broches vers le bas. Les broches de gauche √† droite sont : √©metteur (e), base (b) et collecteur (c).

|img_ebc|

.. note::
    * La base est le dispositif de commande de la porte pour une alimentation √©lectrique plus importante.
    * Dans un transistor NPN, le collecteur re√ßoit la plus grande alimentation √©lectrique et l'√©metteur est la sortie de cette alimentation, tandis que pour un transistor PNP, c'est l'inverse.

.. Example
.. -------------------

.. :ref:`Deux types de transistors`

**Exemple**

* :ref:`py_transistor` (pour les utilisateurs de MicroPython)
* :ref:`py_relay` (pour les utilisateurs de MicroPython)
* :ref:`py_ac_buz` (pour les utilisateurs de MicroPython)
* :ref:`py_pa_buz` (pour les utilisateurs de MicroPython)
* :ref:`py_light_theremin` (pour les utilisateurs de MicroPython)
* :ref:`py_alarm_lamp` (pour les utilisateurs de MicroPython)
* :ref:`py_music_player` (pour les utilisateurs de MicroPython)
* :ref:`py_fruit_piano` (pour les utilisateurs de MicroPython)
* :ref:`py_reversing_aid` (pour les utilisateurs de MicroPython)
* :ref:`ar_ac_buz` (pour les utilisateurs d'Arduino)
* :ref:`ar_pa_buz` (pour les utilisateurs d'Arduino)
* :ref:`ar_transistor` (pour les utilisateurs d'Arduino)
* :ref:`ar_relay` (pour les utilisateurs d'Arduino)
* :ref:`per_service_bell` (pour les utilisateurs de Piper Make)
* :ref:`per_reversing_system` (pour les utilisateurs de Piper Make)
* :ref:`per_reaction_game` (pour les utilisateurs de Piper Make)
