.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers du Raspberry Pi, de l'Arduino et de l'ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez vos probl√®mes apr√®s-vente et d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour d√©velopper vos comp√©tences.
    - **Avant-premi√®res exclusives** : Profitez d'un acc√®s anticip√© aux annonces de nouveaux produits et aux aper√ßus en avant-premi√®re.
    - **Remises sp√©ciales** : B√©n√©ficiez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions et cadeaux festifs** : Participez √† des promotions sp√©ciales et √† des tirages au sort pour les f√™tes.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _cpn_servo:

Servo
===========

|img_servo|

Un servo est g√©n√©ralement compos√© des √©l√©ments suivants : bo√Ætier, arbre, syst√®me d'engrenages, potentiom√®tre, moteur DC et carte embarqu√©e.

Son fonctionnement est le suivant : le microcontr√¥leur envoie des signaux PWM au servo, puis la carte embarqu√©e dans le servo re√ßoit ces signaux via la broche de signal et contr√¥le le moteur interne pour tourner. En cons√©quence, le moteur entra√Æne le syst√®me d'engrenages et fait tourner l'arbre apr√®s r√©duction de la vitesse. L'arbre et le potentiom√®tre du servo sont connect√©s ensemble. Lorsque l'arbre tourne, il entra√Æne le potentiom√®tre, qui envoie alors un signal de tension √† la carte embarqu√©e. Ensuite, la carte d√©termine la direction et la vitesse de rotation en fonction de la position actuelle, ce qui permet de s'arr√™ter exactement √† la position d√©finie et de s'y maintenir.

|img_servo_i|

L'angle est d√©termin√© par la dur√©e d'une impulsion appliqu√©e au fil de contr√¥le. C'est ce qu'on appelle la modulation de largeur d'impulsion (PWM). Le servo s'attend √† recevoir une impulsion toutes les 20 ms. La dur√©e de l'impulsion d√©termine √† quel point le moteur se d√©place. Par exemple, une impulsion de 1,5 ms fait tourner le moteur √† la position de 90 degr√©s (position neutre).
Lorsqu'une impulsion inf√©rieure √† 1,5 ms est envoy√©e √† un servo, celui-ci tourne vers une position et maintient son arbre de sortie √† un certain nombre de degr√©s dans le sens antihoraire √† partir du point neutre. Lorsque l'impulsion est plus large que 1,5 ms, c'est l'inverse qui se produit. La largeur minimale et maximale de l'impulsion qui commande le servo √† se d√©placer vers une position valide d√©pend de chaque servo. G√©n√©ralement, l'impulsion minimale est d'environ 0,5 ms et l'impulsion maximale est de 2,5 ms.

|img_servo_duty|


.. Exemple
.. -------------------

.. :ref:`Swinging Servo`

**Exemple**

* :ref:`py_servo` (pour les utilisateurs de MicroPython)
* :ref:`py_somato_controller` (pour les utilisateurs de MicroPython)
* :ref:`ar_servo` (pour les utilisateurs d'Arduino)
* :ref:`per_water_tank` (pour les utilisateurs de Piper Make)
* :ref:`per_swing_servo` (pour les utilisateurs de Piper Make)
* :ref:`per_lucky_cat` (pour les utilisateurs de Piper Make)
