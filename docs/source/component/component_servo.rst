.. note::

    こんにちは、SunFounderのRaspberry Pi & Arduino & ESP32愛好家コミュニティへようこそ！Facebook上でRaspberry Pi、Arduino、ESP32についてもっと深く掘り下げ、他の愛好家と交流しましょう。

    **参加する理由は？**

    - **エキスパートサポート**：コミュニティやチームの助けを借りて、販売後の問題や技術的な課題を解決します。
    - **学び＆共有**：ヒントやチュートリアルを交換してスキルを向上させましょう。
    - **独占的なプレビュー**：新製品の発表や先行プレビューに早期アクセスしましょう。
    - **特別割引**：最新製品の独占割引をお楽しみください。
    - **祭りのプロモーションとギフト**：ギフトや祝日のプロモーションに参加しましょう。

    👉 私たちと一緒に探索し、創造する準備はできていますか？[|link_sf_facebook|]をクリックして今すぐ参加しましょう！

.. _cpn_servo:

サーボ
===========

|img_servo|

一般的なサーボは、ケース、軸、歯車システム、ポテンショメーター、直流モーター、および組み込みボードで構成されています。

動作原理は次の通りです：マイクロコントローラがPWM信号をサーボに送信し、サーボ内の組み込みボードが信号ピンを介してこれらの信号を受け取り、内部のモーターを制御して回転させます。その結果、モーターは歯車システムを駆動し、減速後に軸を動かします。サーボの軸とポテンショメーターは接続されています。軸が回転すると、ポテンショメーターも駆動され、組み込みボードに電圧信号を出力します。ボードは現在の位置に基づいて回転の方向と速度を決定し、定義された正確な位置で停止してその位置を保ちます。

|img_servo_i|

角度は、制御ワイヤーに適用されるパルスの持続時間によって決定されます。これをパルス幅変調（PWM）と呼びます。サーボは20msごとにパルスを見ることを期待しています。パルスの長さがモーターがどれだけ回転するかを決定します。例えば、1.5msのパルスは、モーターを90度の位置（中立位置）に回転させます。
1.5msより短いパルスがサーボに送信されると、サーボは位置に回転し、出力軸を中立点から反時計回りに数度保持します。パルスが1.5msよりも長い場合は、逆の現象が発生します。サーボが回転するためのパルスの最小幅と最大幅は、各サーボの機能に依存します。一般的には、最小パルス幅は約0.5ms、最大パルス幅は2.5msになります。

|img_servo_duty|


.. 例
.. -------------------

.. :ref:`スウィングサーボ`

**例**

* :ref:`py_servo` （MicroPythonユーザー向け）
* :ref:`py_somato_controller` （MicroPythonユーザー向け）
* :ref:`ar_servo` （Arduinoユーザー向け）
* :ref:`per_water_tank` （Piper Makeユーザー向け）
* :ref:`per_swing_servo` （Piper Makeユーザー向け）
* :ref:`per_lucky_cat` （Piper Makeユーザー向け）

