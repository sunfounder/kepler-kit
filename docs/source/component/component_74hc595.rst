.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers du Raspberry Pi, de l'Arduino et de l'ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez vos probl√®mes apr√®s-vente et d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour d√©velopper vos comp√©tences.
    - **Avant-premi√®res exclusives** : Profitez d'un acc√®s anticip√© aux annonces de nouveaux produits et aux aper√ßus en avant-premi√®re.
    - **Remises sp√©ciales** : B√©n√©ficiez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions et cadeaux festifs** : Participez √† des promotions sp√©ciales et √† des tirages au sort pour les f√™tes.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _cpn_74hc595:

74HC595
===========

|img_74hc595|

Le 74HC595 est compos√© d'un registre √† d√©calage 8 bits et d'un registre de stockage avec des sorties parall√®les √† trois √©tats. Il permet de convertir une entr√©e s√©rie en sortie parall√®le afin d'√©conomiser les ports d'E/S d'un microcontr√¥leur.

* Lorsque MR (broche 10) est √† un niveau haut et que OE (broche 13) est √† un niveau bas, les donn√©es sont entr√©es sur le front montant de SHcp et passent au registre m√©moire via le front montant de SHcp.
* Si les deux horloges sont connect√©es ensemble, le registre √† d√©calage a toujours une impulsion d'avance par rapport au registre m√©moire.
* Le registre m√©moire dispose d'une broche d'entr√©e s√©rie (Ds), d'une broche de sortie s√©rie (Q) et d'un bouton de r√©initialisation asynchrone (niveau bas).
* Le registre m√©moire offre une sortie parall√®le 8 bits en trois √©tats.
* Lorsque OE est activ√© (niveau bas), les donn√©es du registre m√©moire sont transf√©r√©es sur le bus (Q0 ~ Q7).

* `74HC595 Datasheet <https://www.ti.com/lit/ds/symlink/cd74hc595.pdf?ts=1617341564801>`_

|img_74jc595_pin|

Broches du 74HC595 et leurs fonctions :

* **Q0-Q7** : Broches de sortie de donn√©es parall√®les 8 bits, capables de contr√¥ler directement 8 LEDs ou 8 broches d'un afficheur 7 segments.
* **Q7'** : Broche de sortie s√©rie, connect√©e √† DS d'un autre 74HC595 pour encha√Æner plusieurs 74HC595 en s√©rie.
* **MR** : Broche de r√©initialisation, active √† niveau bas ;
* **SHcp** : Entr√©e d'horloge du registre √† d√©calage. Sur le front montant, les donn√©es du registre √† d√©calage se d√©calent successivement d'un bit, c'est-√†-dire que les donn√©es de Q1 se d√©placent vers Q2, et ainsi de suite. Sur le front descendant, les donn√©es restent inchang√©es.
* **STcp** : Entr√©e d'horloge du registre de stockage. Sur le front montant, les donn√©es du registre √† d√©calage sont transf√©r√©es dans le registre m√©moire.
* **CE** : Broche d'activation de la sortie, active √† niveau bas.
* **DS** : Broche d'entr√©e de donn√©es s√©rie.
* **VCC** : Tension d'alimentation positive.
* **GND** : Masse.

.. Example
.. -------------------

.. :ref:`Microchip - :ref:`cpn_74hc595``

**Exemple**

* :ref:`py_74hc_led` (pour les utilisateurs de MicroPython)
* :ref:`py_74hc_7seg` (pour les utilisateurs de MicroPython)
* :ref:`py_74hc_4dig` (pour les utilisateurs de MicroPython)
* :ref:`py_74hc_788bs` (pour les utilisateurs de MicroPython)
* :ref:`py_passage_counter` (pour les utilisateurs de MicroPython)
* :ref:`py_10_second` (pour les utilisateurs de MicroPython)
* :ref:`py_traffic_light` (pour les utilisateurs de MicroPython)
* :ref:`py_bubble_level` (pour les utilisateurs de MicroPython)
* :ref:`ar_74hc_led` (pour les utilisateurs d'Arduino)
* :ref:`ar_74hc_7seg` (pour les utilisateurs d'Arduino)
* :ref:`ar_74hc_4dig` (pour les utilisateurs d'Arduino)
* :ref:`ar_74hc_788bs` (pour les utilisateurs d'Arduino)
