.. note::

    こんにちは、SunFounderのRaspberry Pi & Arduino & ESP32愛好家コミュニティへようこそ！Facebook上でRaspberry Pi、Arduino、ESP32についてもっと深く掘り下げ、他の愛好家と交流しましょう。

    **参加する理由は？**

    - **エキスパートサポート**：コミュニティやチームの助けを借りて、販売後の問題や技術的な課題を解決します。
    - **学び＆共有**：ヒントやチュートリアルを交換してスキルを向上させましょう。
    - **独占的なプレビュー**：新製品の発表や先行プレビューに早期アクセスしましょう。
    - **特別割引**：最新製品の独占割引をお楽しみください。
    - **祭りのプロモーションとギフト**：ギフトや祝日のプロモーションに参加しましょう。

    👉 私たちと一緒に探索し、創造する準備はできていますか？[|link_sf_facebook|]をクリックして今すぐ参加しましょう！

.. _cpn_74hc595:

74HC595
===========

|img_74hc595|

74HC595は、8ビットのシフトレジスタと、3状態の並列出力を持つストレージレジスタで構成されています。シリアル入力を並列出力に変換するため、MCUのIOポートを節約することができます。

* MR（ピン10）がハイレベルで、OE（ピン13）がローレベルの場合、SHcpの立ち上がりエッジでデータが入力され、SHcpの立ち上がりエッジを介してメモリレジスタに移動します。
* 2つのクロックが一緒に接続されている場合、シフトレジスタは常にメモリレジスタよりも1パルス早いです。
* メモリレジスタには、シリアルシフト入力ピン（Ds）、シリアル出力ピン（Q）、および非同期リセットボタン（ローレベル）があります。
* メモリレジスタは、3つの状態で並列の8ビットバスを出力します。
* OEが有効（ローレベル）の場合、メモリレジスタのデータがバス（Q0〜Q7）に出力されます。

* `74HC595 データシート <https://www.ti.com/lit/ds/symlink/cd74hc595.pdf?ts=1617341564801>`_

|img_74jc595_pin|

74HC595のピンとその機能：

* **Q0-Q7**: 8ビットの並列データ出力ピン。直接8つのLEDまたは7セグメントディスプレイの8ピンを制御可能。
* **Q7'**: シリーズ出力ピン。別の74HC595のDSに接続して、複数の74HC595を直列に接続。
* **MR**: リセットピン。ローレベルでアクティブ。
* **SHcp**: シフトレジスタのタイムシーケンス入力。立ち上がりエッジで、シフトレジスタ内のデータが1ビットずつ順次移動します。
* **STcp**: ストレージレジスタのタイムシーケンス入力。立ち上がりエッジで、シフトレジスタ内のデータがメモリレジスタに移動。
* **CE**: 出力許可ピン。ローレベルでアクティブ。
* **DS**: シリアルデータ入力ピン。
* **VCC**: 正の電源電圧。
* **GND**: グラウンド。

.. Example
.. -------------------

.. :ref:`Microchip - :ref:`cpn_74hc595``

**例**

* :ref:`py_74hc_led` (MicroPythonユーザー向け)
* :ref:`py_74hc_7seg` (MicroPythonユーザー向け)
* :ref:`py_74hc_4dig` (MicroPythonユーザー向け)
* :ref:`py_74hc_788bs` (MicroPythonユーザー向け)
* :ref:`py_passage_counter` (MicroPythonユーザー向け)
* :ref:`py_10_second` (MicroPythonユーザー向け)
* :ref:`py_traffic_light` (MicroPythonユーザー向け)
* :ref:`py_bubble_level` (MicroPythonユーザー向け)
* :ref:`ar_74hc_led` (Arduinoユーザー向け)
* :ref:`ar_74hc_7seg` (Arduinoユーザー向け)
* :ref:`ar_74hc_4dig` (Arduinoユーザー向け)
* :ref:`ar_74hc_788bs` (Arduinoユーザー向け)
