.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers du Raspberry Pi, de l'Arduino et de l'ESP32 aux c√¥t√©s d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et tutoriels pour am√©liorer vos comp√©tences.
    - **Avant-premi√®res exclusives** : Profitez d'un acc√®s anticip√© aux annonces de nouveaux produits et aux aper√ßus en avant-premi√®re.
    - **Remises sp√©ciales** : B√©n√©ficiez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions et cadeaux festifs** : Participez √† des promotions sp√©ciales et des tirages au sort pour les f√™tes.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _cpn_4_dit_7_segment:

Afficheur 7 segments √† 4 chiffres
======================================

L'afficheur 7 segments √† 4 chiffres est compos√© de quatre afficheurs 7 segments fonctionnant ensemble.

|img_4-digit-sche|

L'afficheur 7 segments √† 4 chiffres fonctionne de mani√®re ind√©pendante. 
Il utilise le principe de persistance visuelle humaine pour afficher 
rapidement les caract√®res de chaque segment en boucle, cr√©ant ainsi des 
cha√Ænes continues.

Par exemple, lorsque "1234" est affich√©, le chiffre "1" appara√Æt sur le premier 
segment, tandis que "234" ne sont pas visibles. Apr√®s un certain temps, le second 
segment affiche "2", et les 1er, 3e, et 4e segments ne montrent rien. Ce processus 
continue ainsi de suite, chaque segment affichant √† son tour. Cette rotation est 
tr√®s rapide (environ 5 ms), et gr√¢ce √† l'effet de r√©manence optique et au principe 
de persistance visuelle, nous percevons les quatre chiffres simultan√©ment.

|img_4-digit-sche-ca| 

**Codes d'affichage** 

Pour vous aider √† comprendre comment les afficheurs 7 segments (cathode commune) affichent les nombres, nous avons cr√©√© le tableau suivant. Les "Numbers" correspondent aux chiffres 0-F affich√©s sur l'afficheur ; (DP) GFEDCBA repr√©sente les LED correspondantes r√©gl√©es sur 0 ou 1. Par exemple, 00111111 signifie que DP et G sont r√©gl√©s sur 0, tandis que les autres sont sur 1. Ainsi, le chiffre 0 est affich√© sur l'afficheur, et le code hexad√©cimal correspondant est affich√© sous "Hex Code".

.. list-table:: Glyph Code
    :widths: 20 20 20
    :header-rows: 1

    *   - Chiffres
        - Code binaire
        - Code hexad√©cimal
    *   - 0	
        - 00111111	
        - 0x3f
    *   - 1	
        - 00000110	
        - 0x06
    *   - 2	
        - 01011011	
        - 0x5b
    *   - 3	
        - 01001111	
        - 0x4f
    *   - 4	
        - 01100110	
        - 0x66
    *   - 5	
        - 01101101	
        - 0x6d
    *   - 6	
        - 01111101	
        - 0x7d
    *   - 7	
        - 00000111	
        - 0x07
    *   - 8	
        - 01111111	
        - 0x7f
    *   - 9	
        - 01101111	
        - 0x6f
    *   - A	
        - 01110111	
        - 0x77
    *   - B
        - 01111100	
        - 0x7c
    *   - C	
        - 00111001	
        - 0x39
    *   - D	
        - 01011110	
        - 0x5e
    *   - E	
        - 01111001	
        - 0x79
    *   - F	
        - 01110001	
        - 0x71

**Exemples**

* :ref:`py_74hc_4dig` (pour les utilisateurs de MicroPython)
* :ref:`py_passage_counter` (pour les utilisateurs de MicroPython)
* :ref:`py_10_second` (pour les utilisateurs de MicroPython)
* :ref:`py_traffic_light` (pour les utilisateurs de MicroPython)
* :ref:`ar_74hc_4dig` (pour les utilisateurs d'Arduino)
