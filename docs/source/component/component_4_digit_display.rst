.. note::

    こんにちは、SunFounderのRaspberry Pi & Arduino & ESP32愛好家コミュニティへようこそ！Facebook上でRaspberry Pi、Arduino、ESP32についてもっと深く掘り下げ、他の愛好家と交流しましょう。

    **参加する理由は？**

    - **エキスパートサポート**：コミュニティやチームの助けを借りて、販売後の問題や技術的な課題を解決します。
    - **学び＆共有**：ヒントやチュートリアルを交換してスキルを向上させましょう。
    - **独占的なプレビュー**：新製品の発表や先行プレビューに早期アクセスしましょう。
    - **特別割引**：最新製品の独占割引をお楽しみください。
    - **祭りのプロモーションとギフト**：ギフトや祝日のプロモーションに参加しましょう。

    👉 私たちと一緒に探索し、創造する準備はできていますか？[|link_sf_facebook|]をクリックして今すぐ参加しましょう！

.. _cpn_4_dit_7_segment:

4桁の7セグメントディスプレイ
==================================

4桁の7セグメントディスプレイは、4つの7セグメントディスプレイが連動して動作します。

|img_4-digit-sche|

この4桁の7セグメントディスプレイは独立して動作します。人間の視覚の残像の原理を利用して、各7セグメントの文字を高速でループ表示し、連続する文字列を形成します。

例えば、"1234"がディスプレイに表示される場合、最初の7セグメントには"1"が、"234"は表示されません。一定時間後、2番目の7セグメントに"2"が表示され、1番目、3番目、4番目の7セグメントは表示されません。このようにして、4つのディジタルディスプレイが順番に表示されます。このプロセスは非常に短い（通常5ms）ため、光の残光効果と視覚残留の原理により、4つの文字が同時に見えます。

|img_4-digit-sche-ca|

**表示コード**

7セグメントディスプレイ（共通カソード）がどのように数字を表示するかを理解するために、以下の表を作成しました。数字は7セグメントディスプレイに表示される0-Fの数字であり、(DP) GFEDCBAは対応するLEDが0または1に設定されています。例えば、00111111はDPとGが0に設定され、他は1に設定されていることを意味します。そのため、7セグメントディスプレイには数字の0が表示され、HEXコードは16進数に対応します。

.. list-table:: グリフコード
    :widths: 20 20 20
    :header-rows: 1

    *   - 数字
        - 二進数コード
        - 16進数コード  
    *   - 0	
        - 00111111	
        - 0x3f
    *   - 1	
        - 00000110	
        - 0x06
    *   - 2	
        - 01011011	
        - 0x5b
    *   - 3	
        - 01001111	
        - 0x4f
    *   - 4	
        - 01100110	
        - 0x66
    *   - 5	
        - 01101101	
        - 0x6d
    *   - 6	
        - 01111101	
        - 0x7d
    *   - 7	
        - 00000111	
        - 0x07
    *   - 8	
        - 01111111	
        - 0x7f
    *   - 9	
        - 01101111	
        - 0x6f
    *   - A	
        - 01110111	
        - 0x77
    *   - B
        - 01111100	
        - 0x7c
    *   - C	
        - 00111001	
        - 0x39
    *   - D	
        - 01011110	
        - 0x5e
    *   - E	
        - 01111001	
        - 0x79
    *   - F	
        - 01110001	
        - 0x71

**例**

* :ref:`py_74hc_4dig` (MicroPythonユーザー向け)
* :ref:`py_passage_counter` (MicroPythonユーザー向け)
* :ref:`py_10_second` (MicroPythonユーザー向け)
* :ref:`py_traffic_light` (MicroPythonユーザー向け)
* :ref:`ar_74hc_4dig` (Arduinoユーザー向け)
