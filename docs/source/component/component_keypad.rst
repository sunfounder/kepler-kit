.. note::

    こんにちは、SunFounderのRaspberry Pi & Arduino & ESP32愛好家コミュニティへようこそ！Facebook上でRaspberry Pi、Arduino、ESP32についてもっと深く掘り下げ、他の愛好家と交流しましょう。

    **参加する理由は？**

    - **エキスパートサポート**：コミュニティやチームの助けを借りて、販売後の問題や技術的な課題を解決します。
    - **学び＆共有**：ヒントやチュートリアルを交換してスキルを向上させましょう。
    - **独占的なプレビュー**：新製品の発表や先行プレビューに早期アクセスしましょう。
    - **特別割引**：最新製品の独占割引をお楽しみください。
    - **祭りのプロモーションとギフト**：ギフトや祝日のプロモーションに参加しましょう。

    👉 私たちと一緒に探索し、創造する準備はできていますか？[|link_sf_facebook|]をクリックして今すぐ参加しましょう！

.. _cpn_keypad:

4x4キーパッド
========================

マイクロコントローラーシステムでは、電子コードロックや電話のキーパッドなど、多くのキーを使用する場合があります。通常、最低でも12から16のキーがあり、これは一般的にマトリックスキーパッドとして使用されます。

マトリックスキーパッドは、行キーパッドとも呼ばれ、4つのI/Oラインを行として、4つのI/Oラインを列として持っています。行と列の交点ごとに1つのキーが設定されます。そのため、キーボード上のキーの数は4*4となります。この行と列のキーボード構造は、マイクロコントローラーシステムでのI/Oポートの利用率を効果的に向上させることができます。

キーの接触部は、リボンケーブルでの接続やプリント基板への挿入に適したヘッダー経由でアクセスされます。
一部のキーパッドでは、各ボタンがヘッダー内の別々の接触部と接続している一方、全てのボタンが共通の接地を共有しています。

|img_keypad|

より一般的には、ボタンはマトリックスエンコードされており、各ボタンがマトリックス内の一意の導体ペアをブリッジしています。
この構成は、マイクロコントローラによるポーリングに適しています。マイクロコントローラは、4つの水平線のそれぞれに順番に出力パルスを送るようにプログラムされています。
各パルス中に、残りの4つの垂直線を順番にチェックし、どれが信号を運んでいるかを判断します。
信号が存在しないときにマイクロコントローラの入力が不安定にならないように、入力線にはプルアップまたはプルダウン抵抗器を追加する必要があります。

* `キーパッド - ウィキペディア <https://ja.wikipedia.org/wiki/%E3%82%AD%E3%83%BC%E3%83%91%E3%83%83%E3%83%89>`_

**例**

* :ref:`py_keypad` （MicroPythonユーザー向け）
* :ref:`py_guess_number` （MicroPythonユーザー向け）
* :ref:`ar_keypad` （Arduinoユーザー向け）
